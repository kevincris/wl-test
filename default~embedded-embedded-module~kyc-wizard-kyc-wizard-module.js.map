{"version":3,"sources":["./src/app/stripe-payment/stripe-payment-component.ts","./src/app/kyc-wizard/ubo-wizard-completed-modal.component.html","./src/app/common/logged-in.auth-guard.ts","./src/app/stripe-payment/stripe.module.ts","./src/app/kyc-wizard/kyc-wizard.auth-guard.ts","./src/app/stripe-payment/stripe-payment.component.html","./src/app/kyc-wizard/key-wizard-completed-modal.component.ts","./src/app/kyc-wizard/kyc-wizard.component.ts","./src/app/kyc-wizard/kyc-wizard.module.ts","./node_modules/@stripe/stripe-js/dist/pure.js","./src/app/kyc-wizard/ubo-wizard-completed-modal.component.ts","./src/app/kyc-wizard/ubo-wizard.component.ts","./src/app/kyc-wizard/kyc-wizard-completed-modal.component.html","./node_modules/@stripe/stripe-js/pure.js","./src/app/kyc-wizard/ubo-wizard.component.html","./src/app/kyc-wizard/kyc-wizard.component.html","./src/app/kyc-wizard/kyc-wizard-routing.module.ts","./src/app/common/services/basis-id.service.ts"],"names":[],"mappings":"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","file":"default~embedded-embedded-module~kyc-wizard-kyc-wizard-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http'\nimport { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Stripe, StripeCardElement } from '@stripe/stripe-js'\nimport { loadStripe } from '@stripe/stripe-js/pure'\nimport { Subscription } from 'rxjs'\nimport { flatMap, take } from 'rxjs/operators'\nimport { SessionService } from '../common/services/session.service'\nimport { ToastrService } from '../common/services/toastr.service'\n\n@Component({\n    selector: 'stripe-payment',\n    templateUrl: 'stripe-payment.component.html',\n})\nexport class StripePaymentComponent implements OnInit, OnDestroy {\n    public card: StripeCardElement\n    public cardError?: string\n\n    public isCardEmpty = true\n    public isLoading = false\n    public stripeState: 'loading' | 'loaded' | 'not-configured' = 'loading'\n\n    @Output()\n    public readonly onSuccess = new EventEmitter<void>()\n\n    private stripe: Stripe | null\n    private clientSecret: string\n    private subscriptions = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        private session: SessionService,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {}\n\n    public async ngOnInit(): Promise<void> {\n        if (!window.STRIPE_PUBLIC_KEY) {\n            this.stripeState = 'not-configured'\n            return\n        }\n        this.stripeState = 'loaded'\n        this.stripe = await loadStripe(window.STRIPE_PUBLIC_KEY)\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    take(1),\n                    flatMap(user =>\n                        this.http.post<{ clientSecret: string }>(`/users/${user.id}/start-account-opening-payment`, {})\n                    )\n                )\n                .subscribe(({ clientSecret }) => {\n                    this.clientSecret = clientSecret\n                    const elements = this.stripe?.elements()\n                    this.card = elements?.create('card')!\n                    this.card.mount('#card-element')\n                    this.card.on('change', event => {\n                        this.isCardEmpty = event.empty\n                        this.cardError = event.error?.message\n                    })\n                })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public async submit(): Promise<void> {\n        this.isLoading = true\n        try {\n            const result = await this.stripe?.confirmCardPayment(this.clientSecret, {\n                payment_method: {\n                    card: this.card,\n                },\n            })\n            if (result?.error) {\n                this.toastr.error(result.error.message || 'An error has occured')\n                return\n            }\n            this.toastr.success(this.translate.instant('stripe-payment.payment-successful'))\n            this.onSuccess.emit()\n        } finally {\n            this.isLoading = false\n        }\n    }\n}\n","export default \"<div class=\\\"modal-body text-center my-2\\\">\\n    <img src=\\\"/img/icons/file.svg\\\" class=\\\"img-md mb-3\\\" />\\n    <h4 class=\\\"text-primary mb-3\\\">Verification Complete</h4>\\n    <p class=\\\"mb-4\\\">\\n        Thank you for verifying your identity! The information provided will be reviewed for completeness and eligibility. This process usually takes\\n        <span class=\\\"text-primary\\\">1-3 business days</span>. We will notify you if we are missing any details or once the account is approved.\\n    </p>\\n    <button class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"closeWindow()\\\">Close window</button>\\n</div>\\n\";","import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router'\nimport { SessionService } from './services/session.service'\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInAuthGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n    public canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        if (!this.session.isAuthenticated()) {\n            return this.router.parseUrl('/login?redirect=' + state.url)\n        }\n        return true\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { StripePaymentComponent } from './stripe-payment-component'\n\n@NgModule({\n    declarations: [StripePaymentComponent],\n    exports: [StripePaymentComponent],\n    imports: [CommonModule],\n})\nexport class StripeModule {}\n","import { Injectable } from '@angular/core'\nimport { CanActivate, Router, UrlTree } from '@angular/router'\nimport { SessionService } from '../common/services/session.service'\n\n@Injectable()\nexport class KycWizardAuthGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n    public canActivate(): boolean | UrlTree {\n        if (this.session.user.approvedAt) {\n            return this.router.parseUrl('/dashboard')\n        }\n        return true\n    }\n}\n","export default \"<div *ngIf=\\\"stripeState === 'loaded'\\\">\\n    <div id=\\\"card-element\\\"></div>\\n    <button\\n        *ngIf=\\\"card\\\"\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-primary my-2\\\"\\n        [ngClass]=\\\"{ loading: isLoading }\\\"\\n        [disabled]=\\\"isLoading || isCardEmpty || cardError\\\"\\n        (click)=\\\"submit()\\\"\\n    >\\n        {{ 'common.pay-now' | translate }}\\n    </button>\\n    <p *ngIf=\\\"cardError\\\" class=\\\"alert alert-danger\\\">{{ cardError }}</p>\\n</div>\\n<div *ngIf=\\\"stripeState === 'loading'\\\" class=\\\"text-center\\\">{{ 'common.loading' | translate }}...</div>\\n<div *ngIf=\\\"stripeState === 'not-configured'\\\" class=\\\"alert alert-danger\\\">{{ 'common.stripe-is-not-configured' | translate }}</div>\\n\";","import { Component } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n    selector: 'kyc-wizard-completed-modal',\n    templateUrl: 'kyc-wizard-completed-modal.component.html',\n})\nexport class KycWizardCompletedModalComponent {\n    constructor(public modal: NgbActiveModal) {}\n}\n","import { HttpClient } from '@angular/common/http'\nimport { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { faSearch, faShieldCheck, faUserClock, faMoneyCheckEditAlt } from '@fortawesome/pro-duotone-svg-icons'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { forkJoin, Subscription } from 'rxjs'\nimport { finalize, flatMap, take } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { IUser, Verification } from '../common/api-interfaces'\nimport { BasisIdService } from '../common/services/basis-id.service'\nimport { ConfirmationService } from '../common/services/confirmation.service'\nimport { SessionService } from '../common/services/session.service'\nimport { KycWizardCompletedModalComponent } from './key-wizard-completed-modal.component'\n\n@Component({\n    selector: 'kyc-wizard',\n    templateUrl: 'kyc-wizard.component.html',\n})\nexport class KycWizardComponent implements AfterViewInit, OnDestroy, OnInit {\n    public appName = environment.appName\n\n    public user: IUser\n    public accountOpeningFeeEnabled = environment.accountOpeningFeeEnabled\n    public accountOpeningFee = '0.00'\n\n    public running = false\n    public isLoading = false\n    public hasCompleted = false\n    public isPaymentSuccessful = false\n\n    public faSearch = faSearch\n    public faUserClock = faUserClock\n    public faShieldCheck = faShieldCheck\n    public faMoneyCheckEditAlt = faMoneyCheckEditAlt\n\n    private subscriptions = new Subscription()\n    private verification: Verification\n\n    constructor(\n        private basisId: BasisIdService,\n        private http: HttpClient,\n        private router: Router,\n        private confirmation: ConfirmationService,\n        public session: SessionService,\n        public translate: TranslateService,\n        private ngbModal: NgbModal\n    ) {}\n\n    public ngOnInit(): void {\n        if (this.accountOpeningFeeEnabled) {\n            this.subscriptions.add(\n                this.session.userStream\n                    .pipe(\n                        take(1),\n                        flatMap(user =>\n                            forkJoin([\n                                this.http.get<IUser>(`/users/${user.id}`),\n                                this.http.get<{ accountOpeningFee: string }>(`/users/${user.id}/account-opening-fee`),\n                            ])\n                        )\n                    )\n                    .subscribe(([user, fee]) => {\n                        this.user = user\n                        this.accountOpeningFee = fee.accountOpeningFee\n                    })\n            )\n        }\n    }\n\n    public async ngAfterViewInit(): Promise<void> {\n        this.subscriptions.add(\n            this.basisId.onSuccess\n                .pipe(\n                    flatMap(() =>\n                        this.http.post<void>(`/verifications/${this.verification.id}/set-completed`, {\n                            completed: true,\n                        })\n                    )\n                )\n                .subscribe(async () => {\n                    const modal = this.ngbModal.open(KycWizardCompletedModalComponent, {\n                        backdrop: 'static',\n                        keyboard: false,\n                        centered: true,\n                    })\n                    await modal.result.then(() => this.router.navigate(['/dashboard']))\n                })\n        )\n        this.subscriptions.add(\n            this.basisId.onError\n                .pipe(\n                    flatMap(() =>\n                        this.confirmation.show({\n                            type: 'warning',\n                            text: this.translate.instant('common.there-was-a-problem-in-verification'),\n                            showCancel: false,\n                            confirmText: this.translate.instant('reload-page'),\n                        })\n                    )\n                )\n                .subscribe(() => {\n                    location.reload()\n                })\n        )\n\n        this.http\n            .head(`/users/${this.session.user.id}/verifications`, {\n                params: { completed: JSON.stringify(true) },\n                observe: 'response',\n            })\n            .subscribe(response => {\n                const hasCompletedVerification =\n                    response && response.headers.has('x-total-count') ? ~~response.headers.get('x-total-count')! : 0\n                this.hasCompleted = hasCompletedVerification > 0\n            })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public startVerification(): void {\n        this.isLoading = true\n        this.basisId\n            .init()\n            .pipe(\n                flatMap(() =>\n                    this.http.post<Verification>(`/verifications`, {\n                        user: {\n                            id: this.session.user.id,\n                        },\n                    })\n                ),\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(verification => {\n                if (window.DEBUG) {\n                    // eslint-disable-next-line no-console\n                    console.log('BasisID Hash:', verification.hash)\n                }\n                window.scroll(0, 0)\n                this.running = true\n                this.basisId.loadWidget({\n                    key: this.session.user.type === 'business' ? window.BASIS_ID_KYB_KEY! : window.BASIS_ID_KYC_KEY!,\n                    formToken: verification.formToken,\n                })\n                this.verification = verification\n            })\n    }\n\n    public getLogo(): string {\n        switch (environment.appName) {\n            case 'birex':\n            case 'usunpay':\n            case 'etransfer':\n                return '/img/brand/logo.svg'\n            default:\n                return '/img/brand/logo-white-horizontal.svg'\n        }\n    }\n\n    public getButtonClass(): string {\n        switch (environment.appName) {\n            case 'sgpmx':\n                return 'btn-primary'\n            default:\n                return 'btn-secondary'\n        }\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { StripeModule } from '../stripe-payment/stripe.module'\nimport { KycWizardCompletedModalComponent } from './key-wizard-completed-modal.component'\nimport { KycWizardRoutingModule } from './kyc-wizard-routing.module'\nimport { KycWizardComponent } from './kyc-wizard.component'\nimport { UboWizardComponent } from './ubo-wizard.component'\n\n@NgModule({\n    declarations: [KycWizardComponent, KycWizardCompletedModalComponent, UboWizardComponent],\n    imports: [CommonModule, KycWizardRoutingModule, StripeModule],\n    exports: [KycWizardCompletedModalComponent],\n})\nexport class KycWizardModule {}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.34.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nvar validateLoadParams = function validateLoadParams(params) {\n  var errorMessage = \"invalid load parameters; expected object of shape\\n\\n    {advancedFraudSignals: boolean}\\n\\nbut received\\n\\n    \".concat(JSON.stringify(params), \"\\n\");\n\n  if (params === null || _typeof(params) !== 'object') {\n    throw new Error(errorMessage);\n  }\n\n  if (Object.keys(params).length === 1 && typeof params.advancedFraudSignals === 'boolean') {\n    return params;\n  }\n\n  throw new Error(errorMessage);\n};\n\nvar loadParams;\nvar loadStripeCalled = false;\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadStripeCalled = true;\n  var startTime = Date.now();\n  return loadScript(loadParams).then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nloadStripe.setLoadParameters = function (params) {\n  if (loadStripeCalled) {\n    throw new Error('You cannot change load parameters after calling loadStripe');\n  }\n\n  loadParams = validateLoadParams(params);\n};\n\nexports.loadStripe = loadStripe;\n","import { Component } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n    selector: 'ubo-wizard-completed-modal',\n    templateUrl: 'ubo-wizard-completed-modal.component.html',\n})\nexport class UboWizardCompletedModalComponent {\n    constructor(public modal: NgbActiveModal) {}\n\n    public closeWindow(): void {\n        window.close()\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Subscription } from 'rxjs'\nimport { flatMap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { BasisIdService } from '../common/services/basis-id.service'\nimport { ConfirmationService } from '../common/services/confirmation.service'\nimport { SessionService } from '../common/services/session.service'\nimport { UboWizardCompletedModalComponent } from './ubo-wizard-completed-modal.component'\n\n@Component({\n    selector: 'ubo-wizard',\n    templateUrl: 'ubo-wizard.component.html',\n})\nexport class UboWizardComponent implements OnInit, OnDestroy {\n    public year: number = new Date().getFullYear()\n    private subscriptions = new Subscription()\n\n    constructor(\n        private basisId: BasisIdService,\n        private confirmation: ConfirmationService,\n        private ngbModal: NgbModal,\n        private route: ActivatedRoute,\n        private router: Router,\n        private session: SessionService\n    ) {}\n\n    public async ngOnInit(): Promise<void> {\n        if (!!this.session.user) {\n            this.session.logout()\n        }\n        this.subscriptions.add(\n            this.basisId.onSuccess.subscribe(() => {\n                this.ngbModal.open(UboWizardCompletedModalComponent, {\n                    backdrop: 'static',\n                    keyboard: false,\n                    centered: true,\n                })\n            })\n        )\n        this.subscriptions.add(\n            this.basisId.onError\n                .pipe(\n                    flatMap(() =>\n                        this.confirmation.show({\n                            type: 'warning',\n                            text: 'There was a problem in the verification process. Please try again.',\n                            showCancel: false,\n                            confirmText: 'Reload page',\n                        })\n                    )\n                )\n                .subscribe(() => {\n                    location.reload()\n                })\n        )\n        this.basisId.init().subscribe(() => {\n            this.route.queryParamMap.subscribe(async params => {\n                if (!params.has('code')) {\n                    await this.router.navigate(['/login'])\n                    return\n                }\n                this.basisId.loadWidget({\n                    key: window.BASIS_ID_KYB_KEY!,\n                    invite: params.get('code')!,\n                })\n            })\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public getLogo(): string {\n        switch (environment.appName) {\n            case 'birex':\n            case 'usunpay':\n            case 'etransfer':\n                return '/img/brand/logo.svg'\n            default:\n                return '/img/brand/logo-white-horizontal.svg'\n        }\n    }\n}\n","export default \"<div class=\\\"modal-body text-center my-2\\\">\\n    <img src=\\\"/img/icons/file.svg\\\" class=\\\"img-md mb-3\\\" />\\n    <h4 class=\\\"text-primary mb-3\\\">{{ 'common.verification-complete' | translate }}</h4>\\n    <p class=\\\"mb-4\\\">\\n        {{ 'common.thank-you-for-verifying' | translate }}\\n        <span class=\\\"text-primary\\\">{{ 'common.one-to-three-days' | translate }}</span> {{ 'common.we-will-notify' | translate }}\\n    </p>\\n    <button class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"modal.close()\\\">{{ 'common.got-it' | translate }}</button>\\n</div>\\n\";","module.exports = require('./dist/pure.js');\n","export default \"<div class=\\\"kyc-wizard fullscreen-bg-body\\\">\\n    <a>\\n        <img class=\\\"login-logo\\\" [src]=\\\"getLogo()\\\" />\\n    </a>\\n    <div id=\\\"bas-widget-container\\\"></div>\\n    <div class=\\\"mb-5 text-center text-white\\\">&copy; 2005 - {{ year }} Aerapass Limited - All rights reserved.</div>\\n</div>\\n\";","export default \"<div class=\\\"kyc-wizard fullscreen-bg-body\\\">\\n    <a [routerLink]=\\\"['/dashboard']\\\">\\n        <img class=\\\"login-logo\\\" [src]=\\\"getLogo()\\\" />\\n    </a>\\n    <div class=\\\"card max-width-md\\\" *ngIf=\\\"!running\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"alert alert-primary\\\" role=\\\"alert\\\" *ngIf=\\\"hasCompleted\\\">\\n                {{ 'common.thank-you-for-completing' | translate }}.\\n                <a [routerLink]=\\\"['/dashboard']\\\">{{ 'common.proceed-to-dashboard' | translate }}</a>\\n            </div>\\n            <h2 class=\\\"text-primary mb-1\\\">{{ 'common.account-setup' | translate }}</h2>\\n            <p class=\\\"mb-3\\\" *ngIf=\\\"appName === 'sgpmx'; else text\\\">\\n                You will have the option to preview your account or complete registration of your Stacker Market account.\\n            </p>\\n            <ng-template #text>\\n                <p class=\\\"mb-3\\\">{{ 'kyc-wizard.to-complete' | translate }}:</p>\\n            </ng-template>\\n            <ng-container *ngIf=\\\"appName === 'sgpmx'\\\">\\n                <h5 class=\\\"text-primary font-weight-bold\\\">Option 1: PREVIEW ACCOUNT</h5>\\n                <p>You may preview your dashboard and Stacker Market features by click below and skipping directly to your Account Dashboard.</p>\\n                <button [routerLink]=\\\"['/dashboard']\\\" class=\\\"btn btn-primary btn-lg btn-block mb-4\\\">Click here to skip to Dashboard</button>\\n                <h5 class=\\\"text-primary font-weight-bold\\\">Option 2: COMPLETE REGISTRATION</h5>\\n                <p>Complete your full registration by following the steps below.</p>\\n                <div class=\\\"callout callout-info bg-light mb-4\\\">\\n                    <h5 class=\\\"font-weight-bold text-dark\\\">LIMITED TIME OFFER</h5>\\n                    <p>\\n                        By completing your registration and activating your Stacker Market Pro account with physical/virtual prepaid/debit card, you\\n                        will receive 200.00 USD worth of silver in your account.\\n                    </p>\\n                </div>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"!accountOpeningFeeEnabled; else accountOpeningFeeFlow\\\">\\n                <div class=\\\"icon-callout\\\">\\n                    <div class=\\\"icon\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                    </div>\\n                    <div class=\\\"ml-3\\\">\\n                        <h5 class=\\\"text-secondary mb-0\\\">{{ 'kyc-wizard.step-one' | translate }}</h5>\\n                        <p>\\n                            {{ 'kyc-wizard.step-one-desc' | translate }}\\n                        </p>\\n                    </div>\\n                </div>\\n                <div class=\\\"icon-callout\\\">\\n                    <div class=\\\"icon\\\">\\n                        <fa-icon [icon]=\\\"faUserClock\\\"></fa-icon>\\n                    </div>\\n\\n                    <div class=\\\"ml-3\\\">\\n                        <h5 class=\\\"text-secondary mb-0\\\">{{ 'kyc-wizard.step-two' | translate }}</h5>\\n                        <p>\\n                            {{ 'kyc-wizard.step-two-desc' | translate }}\\n                        </p>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <ng-template #accountOpeningFeeFlow>\\n                <div class=\\\"icon-callout\\\">\\n                    <div class=\\\"icon\\\">\\n                        <fa-icon [icon]=\\\"faMoneyCheckEditAlt\\\"></fa-icon>\\n                    </div>\\n                    <div class=\\\"ml-3\\\">\\n                        <h5 class=\\\"text-secondary mb-0\\\">{{ 'kyc-wizard.step-one-account' | translate }}</h5>\\n                        <p>\\n                            {{ 'kyc-wizard.step-one-account-desc' | translate }}\\n                            <span class=\\\"font-weight-bold\\\">{{ accountOpeningFee | amount }} USD</span>\\n                            {{ 'kyc-wizard.using-your-credit' | translate }}\\n                        </p>\\n                        <ng-container *ngIf=\\\"!!user\\\">\\n                            <ng-container *ngIf=\\\"!user?.accountOpeningFeePaidAt && !isPaymentSuccessful; else feePaid\\\">\\n                                <stripe-payment (onSuccess)=\\\"isPaymentSuccessful = true\\\"></stripe-payment>\\n                            </ng-container>\\n                            <ng-template #feePaid>\\n                                <div class=\\\"alert alert-success\\\">{{ 'kyc-wizard.you-have-paid' | translate }}</div>\\n                            </ng-template>\\n                        </ng-container>\\n                    </div>\\n                </div>\\n                <div class=\\\"icon-callout\\\">\\n                    <div class=\\\"icon\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                    </div>\\n                    <div class=\\\"ml-3\\\">\\n                        <h5 class=\\\"text-secondary mb-0\\\">{{ 'kyc-wizard.step-two-account' | translate }}</h5>\\n                        <p>\\n                            {{ 'kyc-wizard.step-two-account-desc' | translate }}\\n                        </p>\\n                    </div>\\n                </div>\\n            </ng-template>\\n            <div class=\\\"icon-callout\\\">\\n                <div class=\\\"icon\\\">\\n                    <fa-icon [icon]=\\\"faShieldCheck\\\"></fa-icon>\\n                </div>\\n                <div class=\\\"ml-3\\\">\\n                    <ng-container *ngIf=\\\"appName === 'sgpmx'; else defaultText\\\">\\n                        <h5 class=\\\"text-secondary mb-0\\\">{{ 'kyc-wizard.step-three-account' | translate }}</h5>\\n                        <p>{{ 'kyc-wizard.step-three-account' | translate }}</p>\\n                    </ng-container>\\n                    <ng-template #defaultText>\\n                        <h5 class=\\\"text-secondary mb-0\\\">{{ 'kyc-wizard.step-three-account-alt' | translate }}</h5>\\n                        <p>{{ 'kyc-wizard.step-three-account-desc' | translate }}</p>\\n                    </ng-template>\\n                </div>\\n            </div>\\n            <ng-container *ngIf=\\\"session.userStream | async; let user\\\">\\n                <div class=\\\"d-flex flex-column align-items-center mb-3\\\">\\n                    <small class=\\\"text-muted mb-1\\\">{{ 'kyc-wizard.logged-in-as' | translate }}</small>\\n                    <div class=\\\"account-info\\\">\\n                        <user-display [user]=\\\"user\\\" [displayBadges]=\\\"false\\\" [disableLink]=\\\"true\\\"> </user-display>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <button\\n                class=\\\"btn btn-block btn-lg\\\"\\n                (click)=\\\"startVerification()\\\"\\n                [ngClass]=\\\"getButtonClass() + (isLoading ? ' loading' : '')\\\"\\n                [disabled]=\\\"isLoading || hasCompleted || (accountOpeningFeeEnabled && !user?.accountOpeningFeePaidAt && !isPaymentSuccessful)\\\"\\n            >\\n                {{ 'kyc-wizard.start-verification' | translate }}\\n            </button>\\n        </div>\\n    </div>\\n    <div id=\\\"bas-widget-container\\\" [hidden]=\\\"!running\\\"></div>\\n    <div class=\\\"mb-5 text-center\\\">\\n        <a [routerLink]=\\\"['/dashboard']\\\" class=\\\"text-white\\\">{{ 'kyc-wizard.no-documents' | translate }}</a>\\n    </div>\\n</div>\\n\";","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { KycWizardAuthGuard } from './kyc-wizard.auth-guard'\nimport { KycWizardComponent } from './kyc-wizard.component'\nimport { UboWizardComponent } from './ubo-wizard.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: KycWizardComponent,\n        canActivate: [LoggedInAuthGuard, KycWizardAuthGuard],\n    },\n    {\n        path: 'ubo',\n        component: UboWizardComponent,\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n    providers: [KycWizardAuthGuard],\n})\nexport class KycWizardRoutingModule {}\n","import { Injectable } from '@angular/core'\nimport { Observable, Subject } from 'rxjs'\n\nexport interface BasisIdOptions {\n    key: string\n    formToken?: string\n    invite?: string\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BasisIdService {\n    public onSuccess = new Subject<void>()\n    public onError = new Subject<void>()\n\n    public init(): Observable<void> {\n        return new Observable(subscriber => {\n            if (!window.BAS) {\n                const script = document.createElement('script')\n                script.type = 'text/javascript'\n                script.async = true\n                script.src = `https://api.basisid.com/assets/js/widget.multi.js`\n                script.addEventListener('load', () => {\n                    subscriber.next()\n                    subscriber.complete()\n                })\n                document.getElementsByTagName('head')[0].appendChild(script)\n            } else {\n                subscriber.next()\n                subscriber.complete()\n            }\n        })\n    }\n\n    public loadWidget(options: BasisIdOptions): void {\n        window.BAS.AS.initFrame({\n            key: options.key,\n            bas_gw: 'https://api.basisid.com/',\n            container_id: 'bas-widget-container',\n            ui: {\n                width: '100%',\n                height: '705px',\n                style: '',\n                mobile_height: 'auto',\n            },\n            options: options.invite\n                ? {\n                      invite: options.invite,\n                  }\n                : {\n                      api_form_token: options.formToken,\n                  },\n            events: {\n                onManualCheck: (result: any) => {\n                    if (result.status === 'ok') {\n                        this.onSuccess.next()\n                    } else {\n                        this.onError.next()\n                    }\n                },\n            },\n        })\n        window.BAS.AS.showWidget()\n    }\n}\n"],"sourceRoot":"webpack:///"}