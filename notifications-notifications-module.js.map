{"version":3,"sources":["./src/app/notifications/notifications.component.ts","./src/app/common/logged-in.auth-guard.ts","./src/app/notifications/notifications.component.html","./src/app/notifications/notifications-routing.module.ts","./src/app/notifications/notifications.module.ts"],"names":[],"mappings":"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","file":"notifications-notifications-module.js","sourcesContent":["import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http'\nimport { ChangeDetectorRef, Component } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Observable } from 'rxjs'\nimport { flatMap, take, tap } from 'rxjs/operators'\nimport { Notification, RPCResult } from '../common/api-interfaces'\nimport { ListComponent } from '../common/list.component'\nimport { ConfirmationService } from '../common/services/confirmation.service'\nimport { NotificationsService } from '../common/services/notifications.service'\nimport { SessionService } from '../common/services/session.service'\n\n@Component({\n    selector: 'notifications',\n    templateUrl: 'notifications.component.html',\n})\nexport class NotificationsComponent extends ListComponent<Notification> {\n    public min = Math.min\n    public limit = 10\n    protected defaultLimit = 10\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        confirmation: ConfirmationService,\n        private notificationsService: NotificationsService\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session, confirmation)\n    }\n\n    public find(): Observable<HttpResponse<any[]>> {\n        return this.session.userStream.pipe(\n            take(1),\n            tap(user => {\n                this.apiUrl = `/users/${user.id}/notifications`\n            }),\n            flatMap(() => super.find())\n        )\n    }\n\n    public markAllAsRead(): void {\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    take(1),\n                    flatMap(user =>\n                        this.http.post<RPCResult<void>>(\n                            `/users/${user.id}/notifications`,\n                            {\n                                id: Math.floor(Math.random() * 10000),\n                                jsonrpc: '2.0',\n                                method: 'markAllAsRead',\n                            },\n                            {\n                                headers: new HttpHeaders({ 'Content-Type': 'application/json-rpc' }),\n                            }\n                        )\n                    ),\n                    flatMap(() => this.find())\n                )\n                .subscribe(() => {\n                    this.notificationsService.notifyEvent.next()\n                })\n        )\n    }\n\n    public async goto(notification: Notification): Promise<void> {\n        if (notification.invoice) {\n            await this.router.navigate(['/services/invoices', notification.invoice.id])\n        } else if (notification.transaction) {\n            await this.router.navigate(['/transactions', notification.transaction.id])\n        } else if (notification.conversion) {\n            await this.router.navigate(['/services/conversions', notification.conversion.id])\n        } else {\n            await this.router.navigate(['/protocol'])\n        }\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router'\nimport { SessionService } from './services/session.service'\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInAuthGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n    public canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        if (!this.session.isAuthenticated()) {\n            return this.router.parseUrl('/login?redirect=' + state.url)\n        }\n        return true\n    }\n}\n","export default \"<ng-container *ngIf=\\\"!router.isActive('/dashboard', false)\\\">\\n    <div class=\\\"container pt-page\\\">\\n        <div class=\\\"row justify-content-between align-items-center pb-2\\\">\\n            <div class=\\\"col-auto\\\">\\n                <h5 class=\\\"mb-0\\\">{{ 'common.notifications' | translate }}</h5>\\n            </div>\\n            <div class=\\\"col-auto d-flex justify-content-end\\\">\\n                <ol class=\\\"breadcrumb px-0\\\">\\n                    <li class=\\\"breadcrumb-item\\\">\\n                        <a [routerLink]=\\\"['/dashboard']\\\">{{ 'common.home' | translate }}</a>\\n                    </li>\\n                    <li class=\\\"breadcrumb-item active\\\">{{ 'common.notifications' | translate }}</li>\\n                </ol>\\n            </div>\\n        </div>\\n    </div>\\n</ng-container>\\n<section class=\\\"container e2e-notifications mb-3\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"d-flex justify-content-end align-items-center mb-2\\\">\\n                <div class=\\\"d-flex align-items-center\\\">\\n                    <a href class=\\\"btn btn-secondary-air\\\" (click)=\\\"markAllAsRead(); $event.preventDefault()\\\">{{\\n                        'common.mark-all-as-read' | translate\\n                    }}</a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-hover align-items-center table-borderless\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">{{ 'common.description' | translate }}</th>\\n                    <th scope=\\\"col\\\" class=\\\"table-col-sm\\\">{{ 'common.created-at' | translate | titlecase }}</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr\\n                    *ngFor=\\\"let notification of itemsStream | async\\\"\\n                    class=\\\"clickable bg-white e2e-notification\\\"\\n                    [ngClass]=\\\"'has-' + notification.severity\\\"\\n                >\\n                    <th scope=\\\"row\\\" (click)=\\\"goto(notification)\\\">\\n                        <span class=\\\"badge mr-1\\\" [ngClass]=\\\"'badge-' + notification.severity\\\" *ngIf=\\\"!notification.read\\\">{{\\n                            'common.new' | translate\\n                        }}</span>\\n                        <notification [notification]=\\\"notification\\\"></notification>\\n                    </th>\\n                    <td>\\n                        {{ notification.createdAt | date: 'medium' }}\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <footer class=\\\"table-footer\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 col-md-8\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-12\\\">\\n                        <ng-select\\n                            [(ngModel)]=\\\"limit\\\"\\n                            dropdownPosition=\\\"auto\\\"\\n                            (change)=\\\"select(1)\\\"\\n                            [items]=\\\"limitOpts\\\"\\n                            [placeholder]=\\\"'common.show-entries-per-page' | translate\\\"\\n                            [clearable]=\\\"false\\\"\\n                            [searchable]=\\\"false\\\"\\n                            required\\n                        >\\n                            <ng-template ng-label-tmp let-item=\\\"item\\\"\\n                                >{{ 'common.show' | translate }} {{ item }} {{ 'common.per-page' | translate }}</ng-template\\n                            >\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item }} {{ 'common.entries' | translate }}</ng-template>\\n                        </ng-select>\\n                    </div>\\n                    <div class=\\\"col-12 d-flex align-items-center\\\">\\n                        <span class=\\\"text-muted text-small\\\">Showing {{ offset + 1 }} - {{ min(offset + limit, count) }} of {{ count }}</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-12 col-md-16 d-flex justify-content-end\\\">\\n                <ngb-pagination\\n                    [(page)]=\\\"page\\\"\\n                    [collectionSize]=\\\"count\\\"\\n                    (pageChange)=\\\"select()\\\"\\n                    [pageSize]=\\\"limit\\\"\\n                    [maxSize]=\\\"4\\\"\\n                    [rotate]=\\\"false\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                >\\n                </ngb-pagination>\\n            </div>\\n        </div>\\n    </footer>\\n</section>\\n\";","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { NotificationsComponent } from './notifications.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: NotificationsComponent,\n        canActivate: [LoggedInAuthGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class NotificationsRoutingModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { NotificationModule } from '../common/notification/notification.module'\nimport { NotificationsRoutingModule } from './notifications-routing.module'\nimport { NotificationsComponent } from './notifications.component'\n\n@NgModule({\n    declarations: [NotificationsComponent],\n    imports: [CommonModule, NotificationModule, NotificationsRoutingModule],\n})\nexport class NotificationsModule {}\n"],"sourceRoot":"webpack:///"}