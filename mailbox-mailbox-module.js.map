{"version":3,"sources":["./src/app/common/logged-in.auth-guard.ts","./src/app/mailbox/mailbox.component.html","./src/app/mailbox/mailbox.module.ts","./src/app/mailbox/mailbox-routing.module.ts","./src/app/mailbox/user-mail.component.ts","./src/app/mailbox/mailbox.component.ts","./src/app/mailbox/mailbox.service.ts","./src/app/mailbox/user-mails.component.ts"],"names":[],"mappings":"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","file":"mailbox-mailbox-module.js","sourcesContent":["import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router'\nimport { SessionService } from './services/session.service'\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInAuthGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n    public canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        if (!this.session.isAuthenticated()) {\n            return this.router.parseUrl('/login?redirect=' + state.url)\n        }\n        return true\n    }\n}\n","export default \"<section class=\\\"container pt-page\\\">\\n    <div class=\\\"row justify-content-between align-items-center pb-3\\\">\\n        <div class=\\\"col-auto\\\">\\n            <h5 class=\\\"mb-0\\\">{{ 'common.mailbox' | translate }}</h5>\\n        </div>\\n        <div class=\\\"col-auto d-flex justify-content-end\\\">\\n            <ol class=\\\"breadcrumb px-0\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                    <a [routerLink]=\\\"['/dashboard']\\\">{{ 'common.home' | translate }}</a>\\n                </li>\\n                <li class=\\\"breadcrumb-item active\\\">{{ 'common.mailbox' | translate }}</li>\\n            </ol>\\n        </div>\\n    </div>\\n    <router-outlet></router-outlet>\\n</section>\\n\";","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { MailsModule } from '../common/mails/mails.module'\nimport { MailboxRoutingModule } from './mailbox-routing.module'\nimport { MailboxComponent } from './mailbox.component'\nimport { MailboxService } from './mailbox.service'\nimport { UserMailComponent } from './user-mail.component'\nimport { UserMailsComponent } from './user-mails.component'\n\n@NgModule({\n    declarations: [MailboxComponent, UserMailsComponent, UserMailComponent],\n    imports: [CommonModule, MailboxRoutingModule, MailsModule],\n    providers: [MailboxService],\n})\nexport class MailboxModule {}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { MailboxComponent } from './mailbox.component'\nimport { UserMailComponent } from './user-mail.component'\nimport { UserMailsComponent } from './user-mails.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MailboxComponent,\n        canActivate: [LoggedInAuthGuard],\n        children: [\n            {\n                path: '',\n                component: UserMailsComponent,\n            },\n            {\n                path: ':mailId',\n                component: UserMailComponent,\n            },\n        ],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class MailboxRoutingModule {}\n","import { Component } from '@angular/core'\n\n@Component({\n    selector: 'user-mails',\n    template: ` <mail [markAsRead]=\"true\"></mail> `,\n})\nexport class UserMailComponent {}\n","import { Component } from '@angular/core'\n\n@Component({\n    selector: 'mailbox',\n    templateUrl: 'mailbox.component.html',\n})\nexport class MailboxComponent {}\n","import { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs'\n\n@Injectable()\nexport class MailboxService {\n    private notificationSource = new Subject<void>()\n    /* eslint-disable-next-line @typescript-eslint/member-ordering */\n    public onUpdate = this.notificationSource.asObservable()\n\n    public notify(): void {\n        this.notificationSource.next()\n    }\n}\n","import { Component } from '@angular/core'\nimport { SessionService } from '../common/services/session.service'\n\n@Component({\n    selector: 'user-mails',\n    // eslint-disable-next-line @angular-eslint/component-max-inline-declarations\n    template: `\n        <ng-container *ngIf=\"session.userStream | async; let user\"><mails [user]=\"user\"></mails></ng-container>\n    `,\n})\nexport class UserMailsComponent {\n    constructor(public session: SessionService) {}\n}\n"],"sourceRoot":"webpack:///"}