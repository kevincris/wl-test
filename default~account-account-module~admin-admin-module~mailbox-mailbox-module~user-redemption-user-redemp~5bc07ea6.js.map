{"version":3,"sources":["./src/app/common/list-v2.component.ts"],"names":[],"mappings":"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","file":"default~account-account-module~admin-admin-module~mailbox-mailbox-module~user-redemption-user-redemp~5bc07ea6.js","sourcesContent":["import { HttpClient, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http'\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faSearch } from '@fortawesome/pro-regular-svg-icons'\nimport { faCaretDown, faChevronDown, faChevronUp, faDownload, faPlus } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap'\nimport formatDate from 'date-fns/format'\nimport { find, findIndex, isEqual, last, matches } from 'lodash'\nimport { BehaviorSubject, merge, Observable, of, Subject, Subscription, throwError } from 'rxjs'\nimport { catchError, debounceTime, map, switchMap, tap } from 'rxjs/operators'\nimport { Paginated } from './api-interfaces'\nimport { SessionService } from './services/session.service'\n\nexport enum Scope {\n    DEFAULT = 'default',\n}\n\nexport interface Query {\n    [param: string]: { [operator: string]: string | string[] }\n}\n\n/**\n * Base class for list controllers.\n */\n@Component({\n    selector: 'undef-list-v2', // this is required by angular but we don't want it to be used accidentally\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: '',\n})\nexport class ListV2Component<T> implements OnInit, OnDestroy {\n    public scope: string = Scope.DEFAULT\n    public page: number\n    public order: string[][]\n    public search = ''\n    public itemsStream: Observable<T[]>\n    public limitOpts: number[] = [5, 8, 10, 12, 15, 20, 50]\n    public limit: number\n    public offset = 0\n    public count = 0\n    public fill: undefined[]\n    public queryParams: Query = {}\n    public searchEvent = new Subject<void>()\n    public paginationEvent = new Subject<void>()\n    public isFetching = new BehaviorSubject<boolean>(false)\n    public isFilterOptionsCollapsed = true\n\n    public formatDate = formatDate\n\n    public faPlus = faPlus\n    public faSearch = faSearch\n    public faChevronUp = faChevronUp\n    public faChevronDown = faChevronDown\n    public faDownload = faDownload\n    public faCaretDown = faCaretDown\n\n    public apiUrl: string\n    public apiQuery?: string[]\n    public defaultLimit = this.limitOpts[2]\n    public defaultOrder: string[][] = [['createdAt', 'DESC']]\n    public defaultQuery: Query = {}\n    /**\n     * The template to use for the edit/create dialog.\n     * The scope inherits from the current scope and gets passed `item` (the item to edit/create) as a scope variable\n     */\n    public formComponent?: any\n\n    protected model?: new (...args: any[]) => T\n    protected subscriptions = new Subscription()\n    protected updateEvent = new Subject<void>()\n\n    constructor(\n        protected http: HttpClient,\n        protected ngbModal: NgbModal,\n        protected changeDetector: ChangeDetectorRef,\n        protected route: ActivatedRoute,\n        public router: Router,\n        public session: SessionService\n    ) {}\n\n    public ngOnInit(): void {\n        this.limit = this.defaultLimit\n        this.order = this.defaultOrder\n        if (this.apiQuery) {\n            for (const property of this.apiQuery) {\n                this.queryParams[property] = {}\n                if (this.defaultQuery && this.defaultQuery[property]) {\n                    // eslint-disable-next-line guard-for-in\n                    for (const key in this.defaultQuery[property]) {\n                        this.queryParams[property][key] = this.defaultQuery[property][key]\n                    }\n                }\n            }\n        }\n        this.itemsStream = this.mergeFindEvents().pipe(\n            switchMap(() => this.find()),\n            catchError(err => {\n                this.isFetching.next(false)\n                return throwError(err)\n            }),\n            tap(response => {\n                this.count = response.body!.meta.count\n                this.page = this.offset / this.limit + 1\n                const routeParams: { [K: string]: string | string[] | undefined } = {\n                    page: this.page !== 1 ? this.page + '' : undefined,\n                    perPage: this.limit !== this.defaultLimit ? this.limit + '' : undefined,\n                    order: !isEqual(this.order, this.defaultOrder) ? this.order.map(item => item.join(':')) : undefined,\n                    search: this.search || undefined,\n                    scope: this.scope !== Scope.DEFAULT ? this.scope : undefined,\n                }\n                for (const param of Object.keys(this.queryParams)) {\n                    if (Object.keys(this.queryParams[param]).length > 0) {\n                        routeParams[param] = !isEqual(this.queryParams[param], this.defaultQuery[param])\n                            ? this.encodeQueryParam(this.queryParams[param])\n                            : undefined\n                    }\n                }\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.changeState(routeParams)\n            }),\n            tap(response => {\n                this.fill = new Array(this.limit - response.body!.data.length)\n            }),\n            map(response => response.body!.data.map(item => this.mapItem(item))),\n            tap(() => {\n                this.changeDetector.detectChanges()\n                this.isFetching.next(false)\n            })\n        )\n        this.route.queryParamMap.subscribe(params => {\n            if (params.has('perPage')) {\n                this.limit = ~~params.get('perPage')!\n            }\n            if (params.has('page')) {\n                this.offset = (~~params.get('page')! - 1) * this.limit\n            }\n            if (!this.page) {\n                this.page = 1\n            }\n            if (params.has('search')) {\n                this.search = decodeURIComponent(params.get('search')!)\n            }\n            if (params.has('scope')) {\n                this.scope = decodeURIComponent(params.get('scope')!) as Scope\n            }\n            if (params.has('order')) {\n                this.order = params.getAll('order').map(item => item.split(':'))\n            }\n            for (const key of Object.keys(this.queryParams)) {\n                if (params.has(key)) {\n                    this.queryParams[key] = this.decodeQueryParam(params.getAll(key))\n                    // Expand filter options if custom filter is set\n                    this.isFilterOptionsCollapsed = false\n                }\n            }\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public find(): Observable<HttpResponse<Paginated<T>>> {\n        this.isFetching.next(true)\n        return this.http.get<Paginated<T>>(this.apiUrl, {\n            observe: 'response',\n            params: this.generateListParams(),\n        })\n    }\n\n    public generateListParams(override: { limit?: number } = {}): HttpParams {\n        let params = new HttpParams().set('limit', (override.limit || this.limit) + '').set('offset', this.offset + '')\n        if (this.order) {\n            for (const item of this.order) {\n                params = params.append('order', item.join(':'))\n            }\n        }\n        if (this.search) {\n            // the + sign is already encoded for space, should actually be a plus though\n            params = params.set('search', this.search.replace('+', '%2B'))\n        }\n        if (this.scope && this.scope !== Scope.DEFAULT) {\n            params = params.set('scope', this.scope)\n        }\n        for (const param of Object.keys(this.queryParams)) {\n            const encoded = this.encodeQueryParam(this.queryParams[param])\n            for (const value of encoded) {\n                params = params.append(param, value)\n            }\n        }\n        return params\n    }\n\n    /** Modal: Read, update and delete */\n    public showForm(_: MouseEvent, item: Partial<T>, options: NgbModalOptions = {}): void {\n        if (!this.formComponent) {\n            throw new Error('No form-template given in controller.')\n        }\n        const modal = this.ngbModal.open(this.formComponent, {\n            backdrop: 'static',\n            windowClass: 'modal-primary',\n            ...options,\n        })\n        modal.componentInstance.item = this.mapItem(item)\n        if (modal.componentInstance.onSave) {\n            modal.componentInstance.onSave.subscribe(() => {\n                modal.close()\n                this.updateEvent.next()\n            })\n        }\n        if (modal.componentInstance.onDelete) {\n            modal.componentInstance.onDelete.subscribe(() => {\n                modal.close()\n                this.updateEvent.next()\n            })\n        }\n    }\n\n    public requestExport(): void {\n        this.subscriptions.add(\n            this.http\n                .get(this.apiUrl, {\n                    params: this.generateListParams({ limit: 1000 }).delete('offset'),\n                    headers: new HttpHeaders({\n                        Accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                    }),\n                    observe: 'response',\n                    responseType: 'blob',\n                })\n                .subscribe(response => {\n                    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(response.body)\n                    } else {\n                        const data = window.URL.createObjectURL(response.body)\n                        const link = document.createElement('a')\n                        link.href = data\n                        const contentDisposition = response.headers.get('Content-Disposition')\n                        link.download = contentDisposition\n                            ? contentDisposition.substring(\n                                  contentDisposition.indexOf('filename=') + 9,\n                                  contentDisposition.length - 1\n                              )\n                            : 'export.xlsx'\n                        link.click()\n                        setTimeout(() => {\n                            // For Firefox it is necessary to delay revoking the ObjectURL\n                            window.URL.revokeObjectURL(data)\n                        }, 100)\n                    }\n                })\n        )\n    }\n\n    /** Select specified page */\n    public select(page?: number): void {\n        if (typeof page !== 'undefined') {\n            this.page = page\n        }\n        this.offset = (this.page - 1) * this.limit\n        this.paginationEvent.next()\n    }\n\n    /**\n     * Change the sorting order\n     * @param order Sequelize Order syntax\n     * @param toggle Whether to toggle the order instead of replacing\n     */\n    public sort(order: string[], toggle = false): void {\n        // TODO: Allow order functions to be additive\n        if (typeof this.order === 'string') {\n            return\n        }\n        // Find out if order for that attribute is active already\n        const index = findIndex(this.order, matches(order))\n        // if is already selected, toggle\n        if (index === -1 || last(this.order[index]) === 'DESC') {\n            order = [...order, 'ASC']\n        } else {\n            order = [...order, 'DESC']\n        }\n\n        if (!toggle) {\n            // Replace whole order\n            this.order = order.length > 0 ? [order] : this.defaultOrder\n        } else {\n            if (index !== -1) {\n                // If sorting for this attribute is active\n                if (order.length === 0) {\n                    // If the same icon is clicked three times, remove it\n                    this.order.splice(index, 1)\n                } else {\n                    // If it was clicked twice, swap the direction\n                    this.order[index] = order\n                }\n            } else {\n                // If not active, add new order criteria\n                this.order.push(order)\n            }\n        }\n        this.select(1)\n    }\n\n    public isActiveSorting(order: string[]): boolean {\n        return !!find(this.order, matches(order))\n    }\n\n    public getSortingDirection(order: string[]): string | null | undefined {\n        const orderElement = find(this.order, matches(order))\n        return last(orderElement)\n    }\n\n    public isActiveQuery(query: Query): boolean {\n        return isEqual(this.queryParams, query)\n    }\n\n    public getDefaultQuery(): Query {\n        return this.defaultQuery\n    }\n\n    protected mergeFindEvents(): Observable<void> {\n        return merge(of(undefined), this.searchEvent.pipe(debounceTime(600)), this.paginationEvent, this.updateEvent)\n    }\n\n    protected mapItem(item: any): T {\n        return this.model ? new this.model(item) : item\n    }\n\n    protected async changeState(queryParams: { [K: string]: string | string[] | undefined }): Promise<void> {\n        const scroll = window.scrollY\n        await this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams,\n            queryParamsHandling: 'merge',\n        })\n        window.scrollTo(0, scroll)\n    }\n\n    private decodeQueryParam(query: string[]): { [operator: string]: string | string[] } {\n        const decoded: { [operator: string]: string | string[] } = {}\n        for (const q of query) {\n            const [op, value] = q.split(':')\n            decoded[op] = value.split(',')\n        }\n        return decoded\n    }\n\n    private encodeQueryParam(query: { [operator: string]: string | string[] }): string[] {\n        const encoded: string[] = []\n        for (const op of Object.keys(query)) {\n            const value = query[op]\n            if (!value || (Array.isArray(value) && value.length === 0)) {\n                continue\n            }\n            encoded.push(`${op}:${Array.isArray(value) ? value.join(',') : value}`)\n        }\n        return encoded\n    }\n}\n"],"sourceRoot":"webpack:///"}