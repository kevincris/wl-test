{"version":3,"sources":["./src/app/common/copy-btn/copy-btn.component.ts","./src/app/app/not-found/not-found.component.html","./src/app/common/currency-select-tab/currency-select-tab.component.scss","./src/app/common/validators/custom-validator.directive.ts","./src/app/common/models/accounting/currency.model.ts","./src/app/common/welcome/welcome.component.ts","./src/app/common/services/alert.service.ts","./src/app/app/status-message/status-message.module.ts","./src/app/common/validators/name-validator.directive.ts","./src/app/app/core/header/header.component.ts","./src/app/app/core/menu/menu-profile/menu-profile.component.ts","./src/app/common/capitalize.pipe.ts","./src/app/common/services/logout.service.ts","./src/app/common/beneficiary-form/beneficiary-form.component.ts","./src/app/common/validators/color-validator.directive.ts","./src/app/common/match-password.directive.ts","./src/app/app/core/logout-timer/logout-timer-modal.component.html","./src/app/common/profile-documents/user-file-form/user-file-form.component.ts","./src/app/common/services/core/statistics.service.ts","./src/app/common/circle-spinner/circle-spinner.component.scss","./src/app/common/amount.pipe.ts","./src/app/common/password-strength-bar/password-strength-bar.component.ts","./src/app/common/masked.pipe.ts","./src/app/store/currencies/currencies.query.ts","./src/app/common/user-details-form/user-details-form.component.ts","./src/app/common/services/google-analytics.service.ts","./src/app/common/access-error/access-errors.component.ts","./src/app/common/copy-icon/copy-icon.component.ts","./src/app/common/profile-documents/profile-documents.component.html","./src/app/common/services/session.service.ts","./src/app/common/alert-outlet/alert-outlet.component.ts","./src/app/common/start-case.pipe.ts","./src/app/common/confirmation-modal/confirmation-modal.component.ts","./src/app/app/core/header/header-notifications/header-notifications.component.html","./src/app/common/no-access-modal/no-access-modal.component.html","./src/app/common/services/core/contact.service.ts","./src/app/common/notification/notification.component.ts","./src/app/common/contact-book/contact-book.component.html","./src/app/common/user-info-table/user-info-table.component.ts","./src/app/common/welcome/welcome.component.html","./src/app/common/alert-outlet/alert-outlet.component.html","./src/app/common/validators/ip-address-validator.directive.ts","./src/app/common/services/notifications.service.ts","./src/app/common/contact-book/contact-book.component.ts","./src/app/common/services/core/user.service.ts","./src/app/common/circle-spinner/circle-spinner.component.html","./src/environments/environment.xabaas.ts","./src/app/common/fee-preview/fee-preview.component.ts","./src/app/common/file.ts","./src/app/app/core/header/online-users-count/online-users-count.component.ts","./src/app/common/errorhandler.interceptor.ts","./src/app/app/status-message/status-message.component.ts","./src/app/common/numeric.directive.ts","./src/app/app/error-handler.service.ts","./src/app/common/beneficiary-form/beneficiary-form.component.html","./src/app/common/validate.directive.ts","./src/app/common/fee-preview/fee-preview.component.html","./src/app/common/format-date.pipe.ts","./src/app/common/copy-wrap/copy-wrap.component.html","./src/app/common/permission-select/permission-select.component.html","./src/app/common/profile-documents/user-file-form/user-file-form.component.html","./src/app/common/countries.ts","./src/app/common/is-before.pipe.ts","./src/app/common/security-check/confirm-password.modal.html","./src/app/Timestamp.ts","./src/app/common/transactions.mixins.ts","./src/app/common/services/storage.service.ts","./src/app/common/copy-icon/copy-icon.component.html","./src/app/common/validators/max-validator.directive.ts","./src/app/common/copy-btn/copy-btn.component.html","./src/app/common/deposit-instruction-table/deposit-instruction-table.component.html","./src/app/common/services/token.service.ts","./src/app/common/account-number/account-number.component.html","./src/app/common/services/mail-notifications.service.ts","./src/app/common/services/toastr.service.ts","./src/app/common/validators/birthday-validator.directive.ts","./src/app/app/not-found/not-found.component.ts","./src/app/app/status-message/status-message-outlet.component.ts","./src/app/store/wallets/wallets.query.ts","./src/app/common/format-distance-to-now.pipe.ts","./src/app/app/core/header/header-mailbox/header-mailbox.component.ts","./src/app/app/core/header/header-mailbox/header-mailbox.component.html","./src/app/store/currencies/currencies.service.ts","./src/app/app/status-message/status-message.component.html","./src/app/app/core/menu/menu.component.html","./src/app/common/password-strength.directive.ts","./src/app/common/postal-address/postal-address.component.ts","./src/app/common/services/copier.service.ts","./src/app/common/circle-spinner/circle-spinner.component.ts","./src/app/app.component.ts","./src/app/common/user-avatar/user-avatar.component.html","./src/app/common/deposit-instruction/deposit-instruction.component.ts","./src/app/common/user/user.component.html","./src/app/store/wallets/wallets.store.ts","./src/app/store/currencies/currencies.mixin.ts","./src/app/app.component.html","./src/app/common/user-avatar/user-avatar.component.ts","./src/app/common/deposit-instruction/deposit-instruction.component.html","./src/app/common/safe-resource-url.pipe.ts","./src/app/common/focus.directive.ts","./src/app/common/user-details-form/user-details-form.component.html","./src/app/common/dropzone/dropzone.component.ts","./src/app/app.module.ts","./src/app/common/permission-select/permission-select.component.ts","./src/app/common/common.module.ts","./src/app/common/list.component.ts","./src/app/common/validators/integer-validator.directive.ts","./src/app/common/uuid/uuid.component.ts","./src/app/common/card-fee-schedule/card-fee-schedule.component.html","./src/app/common/validators/recipient-validator.directive.ts","./src/app/organization/organization.auth-guard.ts","./src/app/common/safe-html.pipe.ts","./src/app/common/services/confirmation.service.ts","./src/app/common/access-error/access-errors.component.html","./src/app/common/pluralize.pipe.ts","./src/app/common/emptytonull.directive.ts","./src/app/common/no-access-modal/no-access-modal.component.ts","./src/app/app/core/header/online-users-count/online-users-count.component.html","./src/app/app/core/core.module.ts","./src/app/common/address-form/address-form.component.ts","./src/app/common/validators/index.ts","./src/app/common/validators/number-validator.directive.ts","./src/app/store/wallets/wallets.service.ts","./src/app/app/core/menu/menu-profile/menu-profile.component.html","./src/app/common/profile-documents/file-item.component.ts","./src/app/common/confirmation-modal/confirmation-modal.component.html","./src/app/common/security-check/confirm-password.modal.ts","./src/app/app/core/header/header.component.html","./src/app/common/sentence-case.pipe.ts","./src/app/common/postal-address/postal-address.component.html","./src/app/common/services/viewport.service.ts","./src/app/common/currency-select/currency-select.component.html","./src/app/app/core/menu/menu.service.ts","./src/app/common/beneficiary-form/beneficiary-details-form/beneficiary-details-form.component.html","./src/app/app/core/footer/footer.component.html","./src/app/app/core/footer/footer.component.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/common/user/user.component.ts","./src/app/app/core/logout-timer/logout-timer.service.ts","./src/app/common/beneficiary-form/beneficiary-details-form/beneficiary-details-form.component.ts","./src/app/common/currency-select-tab/currency-select-tab.component.ts","./src/app/common/currency-select-tab/currency-select-tab.component.html","./src/app/common/video-player/video-player.component.html","./src/app/common/profile-documents/file-item.component.html","./src/app/common/notification/notification.module.ts","./src/app/common/user-info-table/user-info-table.component.html","./src/app/common/password-strength-bar/password-strength-bar.component.html","./src/app/common/validators/min-validator.directive.ts","./src/app/common/confirm-mail-reminder/confirm-mail-reminder.component.html","./src/app/app/status-message/status-message.service.ts","./src/app/common/validators/decimal-validator.directive.ts","./src/app/app/core/toastr/toastr.component.html","./src/app/common/video-player/video-player.component.ts","./src/app/common/address-form/address-form.component.html","./src/app/common/services/intercom.service.ts","./src/app/common/profile-documents/profile-documents.component.ts","./src/app/app/core/header/header-notifications/header-notifications.component.ts","./src/app/common/common.mixin.ts","./src/app/app/core/menu/menu.component.ts","./src/app/common/uuid/uuid.component.html","./src/app/common/deposit-instruction-table/deposit-instruction-table.component.ts","./src/app/common/dropzone/dropzone.component.html","./src/app/common/account-number.pipe.ts","./src/app/common/services/avatar.service.ts","./src/app/common/confirm-mail-reminder/confirm-mail-reminder.component.ts","./src/app/common/currency-select/currency-select.component.ts","./src/app/app/not-found/not-found.module.ts","./src/app/app-routing.module.ts","./src/app/common/models/core/user.model.ts","./src/app/app/core/toastr/toastr.component.ts","./src/app/common/notification/notification.component.html","./src/app/common/safe-url.pipe.ts","./src/app/common/card-fee-schedule/card-fee-schedule.component.ts","./src/app/store/currencies/currencies.store.ts","./src/app/common/auth.interceptor.ts","./src/app/common/truncate.pipe.ts","./src/app/common/account-number/acount-number.component.ts","./src/app/app/core/logout-timer/logout-timer-modal.component.ts","./src/app/common/copy-wrap/copy-wrap.component.ts","./src/app/common/models/core/contact.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA4F;AACtC;AACc;AACV;IAO7C,mBAAmB,SAAnB,mBAAoB,SAAQ,gFAAiB;IAItD,YAAY,MAAqB,EAAE,cAAiC,EAAS,SAA2B;QACpG,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC;QAD4C,cAAS,GAAT,SAAS,CAAkB;IAExG,CAAC;CACJ;;YAdQ,sEAAa;YAHY,+DAAiB;YAC1C,oEAAgB;;;uBAUpB,mDAAK;;AADG,mBAAmB;IAL/B,+DAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,qFAAsC;QACtC,eAAe,EAAE,qEAAuB,CAAC,MAAM;KAClD,CAAC;GACW,mBAAmB,CAO/B;AAP+B;;;;;;;;;;;;;ACVhC;AAAe,yPAA0L,iCAAiC,0CAA0C,iCAAiC,yGAAyG,6BAA6B,2CAA2C,E;;;;;;;;;;;;ACAte;AAAe,yFAA0B,kBAAkB,GAAG,6CAA6C,mUAAmU,E;;;;;;;;;;;;;;;;;;;ACA9X;AAC4C;IAM/E,wBAAwB,sCAAxB,wBAAwB;IAI1B,QAAQ,CAAC,OAAwB;QACpC,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACrC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE;SAC/B;QACD,OAAO,IAAI;IACf,CAAC;CACJ;;8BATI,mDAAK;;AADG,wBAAwB;IAJpC,+DAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,0BAAwB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC9F,CAAC;GACW,wBAAwB,CAUpC;AAVoC;;;;;;;;;;;;;ACPrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACN;AAG9B,MAAM,KAAK,GAAG,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC7C,MAAM,KAAK,GAAG,kCAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;AAExD,MAAM,QAAQ;IAejB,YAAY,IAAe;QACvB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;IAC7B,CAAC;IAEM,MAAM,CAAC,OAAO,CACjB,MAAuB,EACvB,YAAuB,EACvB,eAA0B,EAC1B,SAAgB,EAChB,QAAQ,GAAG,IAAI;QAEf,IAAI,YAAY,GAAG,QAAQ,CAAC,qBAAqB,CAAC,YAAY,EAAE,eAAe,CAAC;QAChF,IAAI,YAAY,CAAC,IAAI,KAAK,eAAe,CAAC,IAAI,IAAI,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE;YAC/E,IAAI,QAAQ,EAAE;gBACV,YAAY,GAAG,IAAI,mDAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;aAC9F;iBAAM;gBACH,YAAY,GAAG,IAAI,mDAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;aAC/F;SACJ;QACD,OAAO,IAAI,mDAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;IAEM,MAAM,CAAC,qBAAqB,CAAC,YAAuB,EAAE,eAA0B;QACnF,OAAO,IAAI,mDAAS,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC;IACrF,CAAC;IAEM,QAAQ,CAAC,MAAM,GAAG,CAAC;QACtB,OAAO,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE;IACjE,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;ACnDwC;AACkB;AACD;AACQ;IAMrD,gBAAgB,SAAhB,gBAAgB;IAMzB,YAAoB,OAAuB,EAAU,WAA2B;QAA5D,YAAO,GAAP,OAAO,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAFzE,gBAAW,GAAG,wEAAW,CAAC,WAAW;IAEuC,CAAC;IALpF,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI;IAC5B,CAAC;IAKM,KAAK;QACR,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;IAC5B,CAAC;IACM,OAAO;QACV,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;IAC9B,CAAC;CACJ;;YApBQ,wEAAc;YAFd,yEAAc;;AAQV,gBAAgB;IAJ5B,+DAAS,CAAC;QACP,QAAQ,EAAE,SAAS;QACnB,oFAAqC;KACxC,CAAC;GACW,gBAAgB,CAc5B;AAd4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTa;AACe;AAIzD,IAAY,QAEX;AAFD,WAAY,QAAQ;IAChB,yCAA6B;AACjC,CAAC,EAFW,QAAQ,KAAR,QAAQ,QAEnB;IAgBY,YAAY,SAAZ,YAAY;;QACd,WAAM,GAAY,EAAE;IAkC/B,CAAC;IAhCU,GAAG,CAAC,KAAY;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACb,KAAK,CAAC,IAAI,GAAG,uEAAM;SACtB;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,OAAO;YACH,OAAO,EAAE,GAAG,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YACtB,CAAC;SACJ;IACL,CAAC;IAEM,MAAM,CAAC,MAAa;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;QACzC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;SAC/B;IACL,CAAC;IAEM,UAAU,CAAC,GAAa;QAC3B,IAAI,KAAa;QACjB,GAAG;YACC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC;YACzD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBACd,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;aAC/B;SACJ,QAAQ,KAAK,KAAK,CAAC,CAAC,EAAC;IAC1B,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,MAAM,GAAG,EAAE;IACpB,CAAC;CACJ;AAnCY,YAAY;IAHxB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,YAAY,CAmCxB;AAnCwB;;;;;;;;;;;;;;;;;;;;;;ACvBe;AACiB;AACuB;AACb;AACJ;IAQlD,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAN/B,8DAAQ,CAAC;QACN,YAAY,EAAE,CAAC,gFAAsB,EAAE,6FAA4B,CAAC;QACpE,SAAS,EAAE,CAAC,4EAAoB,CAAC;QACjC,OAAO,EAAE,CAAC,kEAAY,CAAC;QACvB,OAAO,EAAE,CAAC,gFAAsB,EAAE,6FAA4B,CAAC;KAClE,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;ACZS;AACmD;IAM/E,sBAAsB,oCAAtB,sBAAsB;IACxB,QAAQ,CAAC,OAAwB;;QACpC,IAAI,CAAC,QAAC,OAAO,CAAC,KAAK,0CAAE,KAAK,CAAC,kCAAkC,EAAC,EAAE;YAC5D,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE;SAC7B;QACD,OAAO,IAAI;IACf,CAAC;CACJ;AAPY,sBAAsB;IAJlC,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,wBAAsB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC5F,CAAC;GACW,sBAAsB,CAOlC;AAPkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPyB;AACH;AAC8C;AACjD;AACnB;AACS;AACoB;AACO;AACE;AACF;AACE;AACS;IAMrE,eAAe,SAAf,eAAe;IAwBxB,YACY,aAA4B,EAC5B,MAAqB,EACtB,OAAuB,EACvB,MAAc,EACb,WAAwB,EACzB,kBAAsC,EACtC,SAA2B;QAN1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;QACtB,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAQ;QACb,gBAAW,GAAX,WAAW,CAAa;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,cAAS,GAAT,SAAS,CAAkB;QA9B/B,gBAAW,GAAG,4EAAW;QACzB,WAAM,GAAG,uEAAM;QACf,aAAQ,GAAG,yEAAQ;QACnB,iBAAY,GAAG,6EAAY;QAC3B,YAAO,GAAG,wEAAO;QAEjB,0BAAqB,GAAG,8EAAqB;QAE7C,cAAS,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;QAExB,qBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CACjE,0DAAG,CAAC,OAAO,CAAC,EAAE;YACV,IAAI,OAAO,GAAG,EAAE,EAAE;gBACd,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBACnC,MAAM,EAAE,GAAG,OAAO,GAAG,EAAE;gBACvB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;aACvG;YACD,OAAO,OAAO,GAAG,KAAK,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QACvD,CAAC,CAAC,CACL;QAEO,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAUvC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,+DAAe,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACtF,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,mEAAe,CAAC,MAAM;QACvD,CAAC,CAAC,CACL;IACL,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QAClF,CAAC,CAAC,CACL;IACL,CAAC;IAEM,aAAa;QAChB,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,mEAAe,CAAC,OAAO;QACpD,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,iEAAa,CAAC,OAAO;IACpD,CAAC;IAEM,aAAa;QAChB,oEAAoE;QACpE,IAAI,CAAC,WAAW,CAAC,OAAO,KAAK,iEAAa,CAAC,OAAO;YAC9C,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,iEAAa,CAAC,OAAO,CAAC;YACpD,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,iEAAa,CAAC,OAAO,CAAC;IAC5D,CAAC;IAEM,cAAc,CAAC,QAAgB;QAClC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;QAC5B,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC;IAC1C,CAAC;IAEM,eAAe,CAAC,IAAY;;QAC/B,IAAI,MAAc;QAElB,QAAQ,IAAI,EAAE;YACV,KAAK,IAAI;gBACL,MAAM,GAAG,IAAI;gBACb,MAAK;YACT,KAAK,IAAI;gBACL,MAAM,GAAG,IAAI;gBACb,MAAK;YACT;gBACI,MAAK;SACZ;QACD,OAAO,WAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,0CAAE,KAAK,KAAI,EAAE;IAC7F,CAAC;IAEM,cAAc,CAAC,IAAY;QAC9B,QAAQ,IAAI,EAAE;YACV,KAAK,IAAI;gBACL,OAAO,SAAS;YACpB,KAAK,IAAI;gBACL,OAAO,QAAQ;YACnB;gBACI,OAAO,EAAE;SAChB;IACL,CAAC;CACJ;;YA3GQ,6EAAa;YAEb,8EAAa;YADb,gFAAc;YAPG,sDAAM;YAUvB,+DAAW;YADX,sFAAkB;YAPlB,oEAAgB;;AAcZ,eAAe;IAJ3B,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,mFAAoC;KACvC,CAAC;GACW,eAAe,CAiG3B;AAjG2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACwB;AACK;AACK;AACR;AACQ;AACQ;AACZ;AAEiB;AACO;AACR;AACF;AACF;IAczD,oBAAoB,SAApB,oBAAoB;IAW7B,YACY,OAAuB,EACvB,MAAqB,EACrB,WAAwB,EACxB,YAA0B,EAC1B,MAAc,EACd,YAA0B,EAC3B,SAA2B;QAN1B,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAe;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC3B,cAAS,GAAT,SAAS,CAAkB;QAjB/B,gBAAW,GAAG,4EAAW;QACzB,WAAM,GAAG,KAAK;QAMb,kBAAa,GAAG,IAAI,iDAAY,EAAE;QAClC,YAAO,GAAG,wEAAW,CAAC,OAAO;QAWjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB;QACnD,IAAI,CAAC,eAAe,GAAG,0DAAa,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAC7F,0DAAG,CACC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;;YAChB,qBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,0CAAE,gBAAgB;gBAC9F,MAAM;SAAA,CACb,CACJ;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,+DAAe,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACtF,IAAI,CAAC,MAAM,GAAG,KAAK;QACvB,CAAC,CAAC,CACL;IACL,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,uBAAuB,CAAC,QAAmB;QAC9C,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC1B,OAAM;SACT;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,OAAO,CAAC,UAAU;aAClB,IAAI,CACD,2DAAI,CAAC,CAAC,CAAC,EACP,6DAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,EAC7D,gEAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,EAC9E,8DAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAC7C;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,GAAG,KAAK;YACnB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;QACpF,CAAC,CAAC,CACT;IACL,CAAC;CACJ;;YA3EQ,gFAAc;YACd,8EAAa;YAFb,+EAAW;YAGX,4EAAY;YAVK,sDAAM;YAWvB,0EAAY;YATZ,oEAAgB;;AAuBZ,oBAAoB;IAZhC,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,yFAA0C;QAC1C,UAAU,EAAE;YACR,mEAAO,CAAC,gBAAgB,EAAE;gBACtB,iEAAc,CAAC,OAAO,EAAE,iEAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;gBACjD,iEAAc,CAAC,MAAM,EAAE,iEAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC9C,sEAAmB,CAAC,QAAQ,EAAE,mEAAO,CAAC,eAAe,CAAC,CAAC;gBACvD,sEAAmB,CAAC,QAAQ,EAAE,mEAAO,CAAC,gBAAgB,CAAC,CAAC;aAC3D,CAAC;SACL;KACJ,CAAC;GACW,oBAAoB,CA0DhC;AA1DgC;;;;;;;;;;;;;;;;;;;;ACjCkB;AAEhB;IAGtB,cAAc,SAAd,cAAc;IAChB,SAAS,CAAC,KAAU;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,OAAO,KAAK;SACf;QACD,OAAO,yDAAU,CAAC,KAAK,CAAC;IAC5B,CAAC;CACJ;AAPY,cAAc;IAD1B,0DAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;GAChB,cAAc,CAO1B;AAP0B;;;;;;;;;;;;;;;;;;;;;;;;ACLsB;AACP;AACF;AACa;AAChB;AAC0B;AACb;IAKrC,aAAa,SAAb,aAAa;IAEtB,YACY,IAAgB,EAChB,OAAuB,EACvB,QAAkB,EAClB,MAAc;QAHd,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAgB;QACvB,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;IACvB,CAAC;IAEG,MAAM;QACT,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,CACjB,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY;gBACvD,CAAC,CAAC,IAAI,CAAC,IAAI;qBACJ,MAAM,CACH,UAAU,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,mBAAmB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,EAC/E;oBACI,OAAO,EAAE,EAAE,aAAa,EAAE,MAAM,EAAE;iBACrC,CACJ;oBACD,sEAAsE;qBACrE,IAAI,CAAC,iEAAU,CAAC,GAAG,EAAE,CAAC,+CAAE,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,+CAAE,CAAC,SAAS,CAAC,CACtB,CAAC,IAAI,CACF,0DAAG,CAAC,GAAG,EAAE;gBACL,IAAI,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,GAAG,EAAE,EAAE;oBAC5C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBACxF;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;iBACnC;gBACD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;YAC9B,CAAC,CAAC,EACF,0DAAG,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,EACpB,+DAAQ,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,aAAa,GAAG,SAAS;YAClC,CAAC,CAAC,CACL;SACJ;QACD,OAAO,IAAI,CAAC,aAAa;IAC7B,CAAC;CACJ;;YApDQ,+DAAU;YAMV,+DAAc;YAHd,mEAAQ;YADR,sDAAM;;AASF,aAAa;IAHzB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,aAAa,CAyCzB;AAzCyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXmC;AACuC;AAEzC;AACL;AACpB;AACU;AACkE;AAI9D;AAC0C;AAChC;IAO7C,wBAAwB,SAAxB,wBAAwB;IA+CjC,YACY,IAAgB,EAChB,MAAqB,EACtB,WAA2B,EAC1B,YAAiC,EAClC,SAA2B;QAJ1B,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAgB;QAC1B,iBAAY,GAAZ,YAAY,CAAqB;QAClC,cAAS,GAAT,SAAS,CAAkB;QAhD/B,YAAO,GAAG,KAAK;QAEf,eAAU,GAAG,KAAK;QAElB,eAAU,GAAiD,EAAE;QAEpD,WAAM,GAAG,IAAI,0DAAY,EAAQ;QAEjC,aAAQ,GAAG,IAAI,0DAAY,EAAQ;QAEnC,cAAS,GAAG,IAAI,0DAAY,EAAQ;QAE7C,SAAI,GAAyB,EAAE;QAM/B,aAAQ,GAAG,KAAK;QAChB,eAAU,GAAG,KAAK;QAClB,2BAAsB,GAAG,KAAK;QAE9B,qBAAgB,GAAsB,CAAC,UAAU,EAAE,qBAAqB,CAAC;QAEzE,uBAAkB,GAAwB,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;QAEtE,eAAU,GAAe,EAAE;QAC3B,UAAK,GAAW,SAAS;QACzB,sBAAiB,GAAG,IAAI,0DAAY,EAAU;QAC9C,uBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACnD,2EAAoB,EAAE,EACtB,mEAAY,CAAC,GAAG,CAAC,EACjB,gEAAS,CAAC,MAAM,CAAC,EAAE,CACf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,QAAQ,EAAE;YAC7B,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;SACpE,CAAC,CACL,CACJ;QAEO,eAAU,GAAG,IAAI,4CAAO,EAAQ;QAChC,yBAAoB,GAAG,IAAI,4CAAO,EAAQ;QAC1C,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAQvC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,UAAU;aACV,IAAI,CAAC,gEAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,kBAAkB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;aACnF,SAAS,CAAC,WAAW,CAAC,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,WAAW;YACvB,IAAI,CAAC,IAAI,GAAG,wDAAS,CAAC,IAAI,CAAC,IAAI,CAAC;YAChC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBAChB,IAAI,CAAC,KAAK,GAAG,IAAI,4DAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;aACxC;YACD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;QACpC,CAAC,CAAC,CACT;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,oBAAoB;aACpB,IAAI,CACD,gEAAS,CAAC,GAAG,EAAE,CACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,uBAAuB,EAAE;YACxD,MAAM,EAAE;gBACJ,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM;aACnE;SACJ,CAAC,CACL,CACJ;aACA,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI;YAC/B,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACjC,wBAAwB;gBACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC,IAAI,CAAE,IAAI,IAAI;aAC/F;QACL,CAAC,CAAC,CACT;QAED,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;SACzB;aAAM;YACH,IAAI,CAAC,IAAI,GAAG,wDAAS,CAAC,IAAI,CAAC,IAAI,CAAC;YAChC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBAChB,IAAI,CAAC,KAAK,GAAG,IAAI,4DAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;aACxC;YACD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;SACnC;IACL,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,YAAY;aACZ,IAAI,CAAC;YACF,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAC3B,gDAAgD,CACnD,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC,EAAE;YAC/D,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC;YACpD,YAAY,EAAE,QAAQ;SACzB,CAAC;aACD,IAAI,CACD,6DAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,kFAAkB,CAAC,SAAS,CAAC,EACzD,8DAAO,CAAC,GAAG,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,IAAI;YACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,kBAAkB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;QACnE,CAAC,CAAC,EACF,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,UAAU,GAAG,KAAK;QAC3B,CAAC,CAAC,CACL;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAC7E,CAAC,CAAC,CACT;IACL,CAAC;IAEM,MAAM;;QACT,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE;QACpC,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,EAAE;YACxE,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;SACjE;QACD,MAAM,IAAI,mCACH,IAAI,CAAC,IAAI,KACZ,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,QAAE,IAAI,CAAC,KAAK,0CAAE,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAChD,QAAQ,EAAE;gBACN,IAAI,cAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,0CAAE,IAAI,mCAAI,IAAI;aACzC,GACJ;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI;QACpB,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACT,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,kBAAkB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC;YACpE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,gBAAgB,EAAE,IAAI,CAAC,CACxD;aACI,IAAI,CACD,0DAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,EAC7C,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,KAAK;QACzB,CAAC,CAAC,CACL;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CACf,GACI,IAAI,CAAC,IAAI,CAAC,EAAE;gBACR,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,4BAA4B,CAAC;gBACtD,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,4BAA4B,CAC7D,EAAE,CACL;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;QACtB,CAAC,CAAC,CACT;IACL,CAAC;IAEM,cAAc,CAAC,MAAyB;QAC3C,QAAQ,MAAM,EAAE;YACZ,KAAK,OAAO,CAAC;YACb,KAAK,OAAO;gBACR,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,EAAE;oBAC1D,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS;iBACjC;gBACD,MAAK;YACT,KAAK,QAAQ;gBACT,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAC5D,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS;iBACjC;gBACD,MAAK;SACZ;QACD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;IACpC,CAAC;CACJ;;YA7MQ,+DAAU;YAaV,uEAAa;YAVb,yEAAc;YASM,mFAAmB;YARvC,oEAAgB;;;mBAiBpB,mDAAK;sBAEL,mDAAK;yBAEL,mDAAK;yBAEL,mDAAK;qBAEL,oDAAM;uBAEN,oDAAM;wBAEN,oDAAM;8BAIN,uDAAS,SAAC,iBAAiB;qCAE3B,uDAAS,SAAC,wBAAwB;iCAQlC,mDAAK;;AA3BG,wBAAwB;IAJpC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,6FAA8C;KACjD,CAAC;GACW,wBAAwB,CAyLpC;AAzLoC;;;;;;;;;;;;;;;;;;;;;;ACpBI;AACmD;AAC3C;IAMpC,uBAAuB,qCAAvB,uBAAuB;IACzB,QAAQ,CAAC,OAAwB;QACpC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;QAC3B,IAAI,KAAK,IAAI,CAAC,+DAAU,CAAC,KAAK,CAAC,EAAE;YAC7B,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE;SAC9B;QACD,OAAO,IAAI;IACf,CAAC;CACJ;AARY,uBAAuB;IAJnC,+DAAS,CAAC;QACP,QAAQ,EAAE,6FAA6F;QACvG,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,yBAAuB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC7F,CAAC;GACW,uBAAuB,CAQnC;AARmC;;;;;;;;;;;;;;;;;;;;ACRwB;AACe;IAM9D,sBAAsB,oCAAtB,sBAAsB;IAI/B,YAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAAG,CAAC;IAE/B,QAAQ;QACX,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;IAC9F,CAAC;CACJ;;YAhBmB,wDAAU;;;4BAQzB,mDAAK;;AADG,sBAAsB;IAJlC,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,wBAAsB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC5F,CAAC;GACW,sBAAsB,CASlC;AATkC;;;;;;;;;;;;;ACPnC;AAAe,8HAA+D,2CAA2C,sHAAsH,mKAAmK,uCAAuC,0BAA0B,gDAAgD,oDAAoD,WAAW,2BAA2B,0CAA0C,gBAAgB,uCAAuC,GAAG,uCAAuC,8LAA8L,gCAAgC,mFAAmF,2BAA2B,0CAA0C,oBAAoB,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjkC;AACmD;AAEzC;AACL;AACnB;AACM;AAEO;AACa;IAMhD,qBAAqB,SAArB,qBAAqB;IAqB9B,YACY,IAAgB,EAChB,MAAqB,EACtB,WAA2B,EAC3B,SAA2B;QAH1B,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,cAAS,GAAT,SAAS,CAAkB;QAnBtB,WAAM,GAAG,IAAI,0DAAY,EAAQ;QAEjC,aAAQ,GAAG,IAAI,0DAAY,EAAQ;QAE5C,gBAAW,GAAG,yDAAW;QAEzB,SAAI,GAAsB,EAAE;QAI5B,UAAK,GAAmB,CAAC,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,qBAAqB,EAAE,OAAO,CAAC;QACvG,aAAQ,GAAG,KAAK;QAEf,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAOvC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC;IACtD,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,QAAQ,CAAC,IAAkB;QAC9B,QAAQ,IAAI,EAAE;YACV,KAAK,UAAU;gBACX,OAAO,mBAAmB;YAC9B,KAAK,SAAS;gBACV,OAAO,kBAAkB;YAC7B,KAAK,YAAY;gBACb,OAAO,iBAAiB;YAC5B;gBACI,OAAO,IAAI;SAClB;IACL,CAAC;IAEM,IAAI;QACP,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;YAChE,OAAM;SACT;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI;QAEpB,IAAI,CAAC,IAAI;aACJ,GAAG,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;aAC9D,IAAI,CACD,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,KAAK;QACzB,CAAC,CAAC,CACL;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;YAC1E,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;QACtB,CAAC,CAAC;IACV,CAAC;CACJ;;YAnFQ,+DAAU;YASV,sEAAa;YANb,yEAAc;YACd,oEAAgB;;;mBAYpB,mDAAK;mBAEL,mDAAK;qBAEL,oDAAM;uBAEN,oDAAM;2BAMN,uDAAS,SAAC,cAAc;;AAbhB,qBAAqB;IAJjC,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,2FAA4C;KAC/C,CAAC;GACW,qBAAqB,CAoEjC;AApEiC;;;;;;;;;;;;;;;;;;;;ACfe;AACP;AAEN;IAMvB,iBAAiB,SAAjB,iBAAiB;IAC1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjC,mBAAmB;QACtB,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAC,gCAAgC,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC/D,IAAI,CACD,0DAAG,CAAC,QAAQ,CAAC,EAAE,CACX,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC,CAAC,CAAC,CAAC,CACnG,CACJ;IACT,CAAC;IAEM,cAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,gCAAgC,CAAC;IACxE,CAAC;CACJ;;YAzBQ,+DAAU;;AASN,iBAAiB;IAH7B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,iBAAiB,CAgB7B;AAhB6B;;;;;;;;;;;;;ACT9B;AAAe,kFAAmB,kBAAkB,wBAAwB,4BAA4B,uBAAuB,WAAW,YAAY,8BAA8B,gBAAgB,qBAAqB,oBAAoB,+CAA+C,GAAG,oCAAoC,uBAAuB,iBAAiB,uBAAuB,0BAA0B,wBAAwB,GAAG,yFAAyF,kBAAkB,GAAG,0BAA0B,qBAAqB,2BAA2B,kBAAkB,GAAG,kBAAkB,6CAA6C,GAAG,6CAA6C,m7CAAm7C,E;;;;;;;;;;;;;;;;;;;;;;ACAxnE;AACwB;AAClC;AACsB;IAG7C,UAAU,wBAAV,UAAU;IAEnB,YAAuC,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAClD,SAAS,CACZ,KAAyC,EACzC,gBAA2C,CAAC;IAC5C,kCAAkC;IAClC,SAAS,GAAG,KAAK;QAEjB,IAAI,OAAO,aAAa,KAAK,QAAQ,IAAI,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE;YAC1E,aAAa,GAAG,YAAU,CAAC,sBAAsB;SACpD;QACD,MAAM,YAAY,GAAG,wEAAW,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC,IAAI,SAAS;YACvD,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,oEAAY,CACR,IAAI,mDAAS,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,QAAQ,EAAS,EAC7F,IAAI,CAAC,MAAM,EACX,KACI,aAAa,GAAG,YAAU,CAAC,sBAAsB;gBAC7C,CAAC,CAAC,aAAa;gBACf,CAAC,CAAC,YAAU,CAAC,sBACrB,IAAI,aAAa,EAAE,CACtB;IACX,CAAC;CACJ;AAxB0B,iCAAsB,GAAG,wEAAW,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;yCAC1E,oDAAM,SAAC,uDAAS;;AAFpB,UAAU;IADtB,0DAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;GACZ,UAAU,CAyBtB;AAzBsB;;;;;;;;;;;;;;;;;;;;ACNoC;IAM9C,4BAA4B,SAA5B,4BAA4B;;QAK9B,aAAQ,GAAG,CAAC;IAavB,CAAC;IAVU,WAAW;QACd,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,GAAG;QAC7D,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,SAAS;SACzB;aAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE;YAC5B,IAAI,CAAC,KAAK,GAAG,SAAS;SACzB;aAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;YAC3B,IAAI,CAAC,KAAK,GAAG,QAAQ;SACxB;IACL,CAAC;CACJ;;+BAjBI,mDAAK;uBAEL,mDAAK;;AAHG,4BAA4B;IAJxC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,kGAAmD;KACtD,CAAC;GACW,4BAA4B,CAkBxC;AAlBwC;;;;;;;;;;;;;;;;;;ACNU;IAGtC,UAAU,SAAV,UAAU;IACZ,SAAS,CAAC,KAAgC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC;QACjE,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;SAC5B;QACD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,EAAE,GAAG,CAAC;IACzD,CAAC;CACJ;AAPY,UAAU;IADtB,0DAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;GACZ,UAAU,CAOtB;AAPsB;;;;;;;;;;;;;;;;;;;;;;;ACHmB;AACG;AACT;AACA;AACkC;AACD;IAGxD,eAAe,SAAf,eAAgB,SAAQ,2DAA4B;IAK7D,YAAsB,KAAsB,EAAU,OAAuB;QACzE,KAAK,CAAC,KAAK,CAAC;QADM,UAAK,GAAL,KAAK,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAgB;QAJtE,uBAAkB,GAAG,0DAAa,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CACrF,0DAAG,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAE,CAAC,CAC3G;IAID,CAAC;CACJ;;YAXyB,iEAAe;YADhC,+EAAc;;AAIV,eAAe;IAD3B,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,eAAe,CAQ3B;AAR2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRyD;AAEb;AAChC;AACA;AACA;AAEwB;AACQ;AAExE,2CAA2C;AACpC,SAAS,gBAAgB,CAAC,eAAuB;IACpD,OAAO,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AACtG,CAAC;IAMY,wBAAwB,SAAxB,wBAAwB;;QAE1B,SAAI,GAAa,UAAU;QAI3B,eAAU,GAAG,IAAI;QAEjB,aAAQ,GAAG,KAAK;QAEhB,cAAS,GAAG,KAAK;QAKjB,aAAQ,GAAG,EAAqB;QAEhC,sBAAiB,GAAG,+DAAiB;QACrC,gBAAW,GAAG,yDAAW;QAEzB,YAAO,GAAG,wEAAO;QACjB,iBAAY,GAAG,6EAAY;QAE3B,YAAO,GAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC;QAC1C,eAAU,GAA2B,UAAU;QAC/C,cAAS,GAAG,oDAAS;QACrB,0BAAqB,GAAG,gEAAqB;QAC7C,kBAAa,GAAuB,CAAC,UAAU,EAAE,SAAS,CAAC;QAE3D,kBAAa,GAAmB;YACnC,kBAAkB;YAClB,aAAa;YACb,KAAK;YACL,SAAS;YACT,iBAAiB;YACjB,aAAa;YACb,wBAAwB;YACxB,OAAO;SACV;QAEM,aAAQ,GAAkB,EAAE;QAC5B,wBAAmB,GAAkB,EAAE;QAGvC,wBAAmB,GAAkB,EAAE;QACvC,uBAAkB,GAAkB,EAAE;QACtC,uBAAkB,GAAkB,EAAE;IAkEjD,CAAC;IAhEU,WAAW,CAAC,OAAsB;;QACrC,IAAI,OAAO,CAAC,OAAO,EAAE;YACjB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACvB,IAAI,CAAC,QAAQ,GAAG,wDAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;aACnD;YACD,IAAI,CAAC,gBAAgB,GAAG,mDAAI,CAAC,oDAAS,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;YACpG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,+DAAU,CAAC,iEAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI;YACtG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB;gBACvD,CAAC,CAAC,+DAAU,CAAC,iEAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE,UAAU,CAAC;gBACpE,CAAC,CAAC,IAAI;YACV,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB;gBACrD,CAAC,CAAC,+DAAU,CAAC,iEAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,UAAU,CAAC;gBACnE,CAAC,CAAC,IAAI;YACV,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB;gBACrD,CAAC,CAAC,+DAAU,CAAC,iEAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE,UAAU,CAAC;gBACnE,CAAC,CAAC,IAAI;YACV,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC1B,IAAI,CAAC,wBAAwB,GAAG,mDAAI,CAChC,oDAAS,EACT,OAAO,CAAC,EAAE,WAAC,cAAO,CAAC,MAAM,YAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,0CAAE,gBAAgB,KACxE;gBACD,IAAI,CAAC,mBAAmB,GAAG,WAAI,CAAC,OAAO,CAAC,QAAQ,0CAAE,mBAAmB,EACjE,CAAC,CAAC,+DAAU,CAAC,iEAAQ,OAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,0CAAE,mBAAmB,CAAC,EAAE,UAAU,CAAC;oBAC9E,CAAC,CAAC,IAAI;aACb;SACJ;IACL,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC1D;QACD,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC;SAChF;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC;SAC9E;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC;SAC9E;QACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC;SACrF;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YAC1B,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC;aACjF;YACD,IAAI,IAAI,CAAC,wBAAwB,EAAE;gBAC/B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,wBAAwB,CAAC;aAC9F;YACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;SACtD;IACL,CAAC;IAEM,OAAO;QACV,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;IAC5B,CAAC;IAEM,sBAAsB,CAAC,2BAAoC;QAC9D,OAAO,2BAA2B,CAAC,MAAM;IAC7C,CAAC;CACJ;;mBA/GI,mDAAK;sBAEL,mDAAK;yBAEL,mDAAK;uBAEL,mDAAK;mBAKL,uDAAS,SAAC,aAAa;;AAZf,wBAAwB;IAJpC,+DAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,8FAA+C;KAClD,CAAC;GACW,wBAAwB,CAgHpC;AAhHoC;;;;;;;;;;;;;;;;;;;;;;;ACnBK;AACA;AACa;AACW;AACR;AACR;IAQrC,sBAAsB,SAAtB,sBAAsB;IAE/B,YAAoB,MAAc,EAAU,QAAkB,EAAU,OAAuB;QAA3E,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,YAAO,GAAP,OAAO,CAAgB;QADvF,gBAAW,GAAG,KAAK;IACuE,CAAC;IAEnG;;OAEG;IACI,IAAI;QACP,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE;YACnD,OAAM;SACT;QACD,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,IAAI,CAAC,UAAU,EAAE;QAEjB,qCAAqC;QACrC,IAAI,CAAC,MAAM,CAAC,MAAM;aACb,IAAI,CACD,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,6DAAa,CAAC,EAC/C,0DAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAC/B,2EAAoB,EAAE,CACzB;aACA,SAAS,CAAC,GAAG,CAAC,EAAE;YACb,wCAAwC;YACxC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,qBAAqB,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;QACpE,CAAC,CAAC;QAEN,kBAAkB;QAClB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE;gBACtB,cAAc,EAAE,aAAa;aAChC,CAAC;QACN,CAAC,CAAC;IACN,CAAC;IAED;;;OAGG;IACI,IAAI,CAAC,GAAG,IAAW;QACtB,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE;YAC/B,OAAM;SACT;QACD,IAAI,CAAC,GAAG,IAAI,CAAC;IACjB,CAAC;IAED;;OAEG;IACK,UAAU;QACd,oBAAoB;QACpB,CAAC;QAAA,CAAC;YACE,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;YAC7C,MAAM,CAAC,GAAG,GAAG,+CAA+C,MAAM,CAAC,qBAAqB,EAAE;YAC1F,MAAM,CAAC,KAAK,GAAG,IAAI;YACnB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAC3B;YAAC,MAAc,CAAC,SAAS,GAAI,MAAc,CAAC,SAAS,IAAI,EAAE,CAC3D;YAAC,MAAc,CAAC,IAAI,GAAG,SAAS,IAAI;gBACjC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;YAC7B,CAAC;YACD,IAAI,wEAAW,CAAC,OAAO,KAAK,UAAU,EAAE;gBACpC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,aAAa,EAAE,iBAAiB,CAAC,EAAE,CAAC;aACzE;YACD,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,qBAAqB,CAAC;QAChD,CAAC,CAAC,EAAE;QACJ,mBAAmB;IACvB,CAAC;CACJ;;YA9EuB,sDAAM;YAFrB,wDAAQ;YAKR,+DAAc;;AAQV,sBAAsB;IAHlC,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,sBAAsB,CAmElC;AAnEkC;;;;;;;;;;;;;;;;;;;;;;;;;;ACbqB;AAChB;AACc;AACnB;AAEwB;AACC;AACF;IAM7C,qBAAqB,SAArB,qBAAqB;IAO9B,YACW,OAAuB,EACtB,MAAc,EACd,WAAwB,EACxB,MAAqB,EACtB,SAA2B;QAJ3B,YAAO,GAAP,OAAO,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACtB,cAAS,GAAT,SAAS,CAAkB;QAX/B,oBAAe,GAAG,KAAK;QAEvB,WAAM,GAAoB,EAAE;QAE3B,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAQvC,CAAC;IAEG,QAAQ;QACX,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACvG;aAAM;YACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY;SAC1D;IACL,CAAC;IAEY,gBAAgB;;YACzB,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;KAAA;IAEY,WAAW;;YACpB,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC;KAAA;IAEM,MAAM;QACT,IAAI,CAAC,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CACjE,GAAG,EAAE;YACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;QACtF,CAAC,EACD,GAAG,EAAE;YACD,IAAI,CAAC,eAAe,GAAG,KAAK;QAChC,CAAC,CACJ,CACJ;IACL,CAAC;CACJ;;YAnDQ,wEAAc;YALd,sDAAM;YAIN,uEAAW;YAEX,sEAAa;YALb,oEAAgB;;;qBAapB,mDAAK;;AAFG,qBAAqB;IAJjC,+DAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,0FAA2C;KAC9C,CAAC;GACW,qBAAqB,CA4CjC;AA5CiC;;;;;;;;;;;;;;;;;;;;;;;;ACJZ;AACqC;AAEpB;AACD;AACoB;IAO7C,iBAAiB,SAAjB,iBAAiB;IAO1B,YAAoB,MAAqB,EAAU,cAAiC;QAAhE,WAAM,GAAN,MAAM,CAAe;QAAU,mBAAc,GAAd,cAAc,CAAmB;QAF7E,WAAM,GAAG,yEAAM;IAEiE,CAAC;IACjF,WAAW;QACd,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;SAClC;IACL,CAAC;IACM,WAAW,CAAC,OAAsB;QACrC,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY;YACvC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE;SACrC;IACL,CAAC;IACM,IAAI;QACP,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;SAClC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;QAChC,uFAAuF;QACvF,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QACnB,IAAI,CAAC,YAAY,GAAG,+CAAE,CAAC,SAAS,CAAC;aAC5B,IAAI,CAAC,4DAAK,CAAC,IAAI,CAAC,CAAC;aACjB,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE;YAClC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;QACxB,CAAC,CAAC;IACV,CAAC;CACJ;;YAzCQ,sEAAa;YAZlB,+DAAiB;;;oBAoBhB,mDAAK;sBAEL,uDAAS,SAAC,SAAS;;AAHX,iBAAiB;IAL7B,+DAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,sFAAuC;QACvC,eAAe,EAAE,qEAAuB,CAAC,MAAM;KAClD,CAAC;GACW,iBAAiB,CAkC7B;AAlC6B;;;;;;;;;;;;;ACrB9B;AAAe,wmBAAyiB,kCAAkC,oJAAoJ,iHAAiH,aAAa,8DAA8D,0CAA0C,+mBAA+mB,+DAA+D,yDAAyD,+BAA+B,+DAA+D,4RAA4R,uCAAuC,s7DAAs7D,qCAAqC,cAAc,GAAG,+EAA+E,QAAQ,GAAG,gCAAgC,udAAud,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxmJ;AACP;AACE;AACE;AACN;AACA;AACN;AAC8C;AACF;AAG5B;AAElD,IAAY,aAGX;AAHD,WAAY,aAAa;IACrB,gCAAe;IACf,kCAAiB;AACrB,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;AAOM,MAAM,IAAI;IAqBN,aAAa,CAAC,UAAsB;QACvC,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC;IAChD,CAAC;IAED,IAAW,YAAY;QACnB,MAAM,MAAM,GAAoB,EAAE;QAClC,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACvB,OAAO,MAAM;SAChB;QACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC;SAC3C;QACD,OAAO,MAAM;IACjB,CAAC;CACJ;IAeY,cAAc,SAAd,cAAc;IAevB,YAAoB,OAAuB,EAAU,IAAgB;QAAjD,YAAO,GAAP,OAAO,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAP9D,qBAAgB,GAAG,IAAI,4CAAO,EAAQ;QAC7C,+CAA+C;QACxC,cAAS,GAAG,IAAI,kDAAa,CAAY,CAAC,CAAC;QAE1C,oBAAe,GAAG,IAAI,oDAAe,CAAc,IAAI,CAAC;QAI5D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,6DAAM,CAAC,CAAC,IAAI,EAAgB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAClG,IAAI,CAAC,OAAO,CAAC,aAAa;aACrB,IAAI,CACD,6DAAM,CAAC,KAAK,CAAC,EAAE;YACX,QAAQ,KAAK,CAAC,GAAG,EAAE;gBACf,KAAK,cAAc,CAAC;gBACpB,KAAK,OAAO,CAAC;gBACb,KAAK,MAAM;oBACP,OAAO,IAAI;gBACf;oBACI,aAAa;oBACb,OAAO,KAAK;aACnB;QACL,CAAC,CAAC,EACF,mEAAY,CAAC,GAAG,CAAC,CACpB;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,eAAe,EAAE;QAC1B,CAAC,CAAC;QACN,eAAe;QACf,IAAI,CAAC,eAAe,EAAE;IAC1B,CAAC;IApCD,gDAAgD;IAChD,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAG;IAC3C,CAAC;IAmCM,KAAK,CAAC,YAA0B,EAAE,KAAa;QAClD,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,IAAI,CACxC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;QAC5D,CAAC,CAAC,CACL;IACL,CAAC;IAEM,MAAM,CAAC,YAA2B,EAAE,KAAc;QACrD,IAAI;YACA,IAAI,YAAY,IAAI,KAAK,EAAE;gBACvB,IAAI,CAAC,YAAY,GAAG,YAAY;gBAChC,IAAI,CAAC,KAAK,GAAG,KAAK;gBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBACrC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;aAC/B;YACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,UAAU,IAAI,CAAC,OAAQ,CAAC,MAAM,gBAAgB,CAAC,CAAC,IAAI,CAC5E,0DAAG,CAAC,IAAI,CAAC,EAAE;gBACP,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC;gBAC5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACvE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAM,CAAC;gBAC1C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAClD,OAAO,IAAI;YACf,CAAC,CAAC,CACL;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,MAAM,EAAE;YACb,MAAM,KAAK;SACd;IACL,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,YAAY,GAAG,SAAS;QAC7B,IAAI,CAAC,KAAK,GAAG,SAAS;QACtB,IAAI,CAAC,OAAO,GAAG,SAAS;QACxB,0BAA0B;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAG,EAAE,CAAC;QAC3F,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;QAC/B,gBAAgB;QAChB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;IACnC,CAAC;IAED;;;OAGG;IACI,aAAa,CAAC,WAAW,GAAG,CAAC;QAChC,+CAA+C;QAC/C,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,GAAG,IAAI;IACjF,CAAC;IAEM,aAAa,CAAC,KAAiB;QAClC,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;IAChD,CAAC;IAEM,cAAc;QACjB,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC3D,CAAC;IAEM,sBAAsB;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG;QACnD,OAAO,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IAED;;;OAGG;IACI,oBAAoB,CAAC,WAAW,GAAG,CAAC;QACvC,OAAO,CACH,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,iEAAQ,CAAC,iEAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,mEAAU,CAAC,IAAI,IAAI,EAAE,EAAE,WAAW,CAAC,CAAC,CAC/G;IACL,CAAC;IAEM,eAAe;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,IAAI;IACnD,CAAC;IAEM,eAAe,CAAC,GAAW,EAAE,WAAoB;QACpD,MAAM,GAAG,GAAG,oEAAW,CAAC,IAAI,IAAI,EAAE,CAAC;QACnC,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACvB,2DAAI,CAAC,CAAC,CAAC,EACP,8DAAO,CAAC,IAAI,CAAC,EAAE;;YACX,wDAAI,CACA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,GAAG,EAAE,GAAG,GAAG,UAAG,IAAI,CAAC,YAAY,0CAAE,EAAE,EAAC,CAAC,CACvG;SAAA,CACJ,EACD,0DAAG,CAAC,SAAS,CAAC,EAAE,CACZ,KAAK,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;aAChC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;aACzC,IAAI,CAAC,EAAE,CAAC,CAChB,EACD,0DAAG,CACC,cAAc,CAAC,EAAE,CACb,QAAQ,GAAG,WAAW,IAAI,CAAC,IAAI,CAAC,EAAE,cAAc,cAAc,cAAc,GAAG,GAC3E,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,EACtC,EAAE,CACT,CACJ;IACL,CAAC;IAEO,eAAe;;QACnB,IAAI;YACA,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC;gBACtD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;aACnF;YACD,MAAM,YAAY,GACd,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAE,CAAC;YAC7F,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;YAC3C,gBAAgB;YAChB,IAAI,YAAY,IAAI,iEAAQ,CAAC,iEAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,EAAE;gBACxE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC;aACrC;YACD,IAAI,YAAY,IAAI,KAAK,EAAE;gBACvB,IAAI,CAAC,YAAY,GAAG,YAAY;gBAChC,IAAI,CAAC,KAAK,GAAG,KAAK;gBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,QAAE,IAAI,CAAC,OAAO,0CAAE,MAAM,EAAS,EAAE,CAAC;aAChG;iBAAM,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;gBAC/B,IAAI,CAAC,MAAM,EAAE;aAChB;SACJ;QAAC,WAAM;YACJ,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;YAC/B,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;gBACxB,IAAI,CAAC,MAAM,EAAE;aAChB;SACJ;IACL,CAAC;IAEO,UAAU,CAAC,KAAa;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,gDAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;CACJ;;YAhPQ,gEAAc;YAXd,+DAAU;;AAyEN,cAAc;IAH1B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,cAAc,CAkL1B;AAlL0B;;;;;;;;;;;;;;;;;;;;;;ACzEgC;AACC;AACJ;IAQ3C,oBAAoB,SAApB,oBAAoB;IAI7B,YAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAFtC,WAAM,GAAgB,SAAS;QAC/B,YAAO,GAAG,0EAAO;IACwB,CAAC;IAE1C,WAAW;QACd,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;IAC7B,CAAC;CACJ;;YAjBQ,oEAAY;;;qBAShB,mDAAK;;AADG,oBAAoB;IAJhC,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,yFAA0C;KAC7C,CAAC;GACW,oBAAoB,CAShC;AATgC;;;;;;;;;;;;;;;;;;;ACVkB;AAEP;IAG/B,aAAa,SAAb,aAAa;IACf,SAAS,CAAC,KAAU;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,OAAO,KAAK;SACf;QACD,OAAO,iEAAW,CAAC,KAAK,CAAC;IAC7B,CAAC;CACJ;AAPY,aAAa;IADzB,0DAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;GACf,aAAa,CAOzB;AAPyB;;;;;;;;;;;;;;;;;;;;;;ACL0B;AAEiE;AAC1D;IAO9C,0BAA0B,SAA1B,0BAA0B;IAqBnC,YAAmB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;QApBvC,SAAI,GAA2B,SAAS;QACxC,UAAK,GAAG,SAAS;QAEjB,gBAAW,GAAI,IAAI;QACnB,iBAAY,GAA2B,SAAS;QAChD,eAAU,GAAI,QAAQ;QACtB,gBAAW,GAA2B,SAAS;QAC/C,eAAU,GAAI,IAAI;QAIlB,cAAS,GAAG,KAAK;QAKhB,0BAAqB,GAAG,sFAAqB;QAC7C,iBAAY,GAAG,6EAAY;QAC3B,kBAAa,GAAG,8EAAa;QAI9B,mBAAc,GAAqC,CAAC,CAAS,EAAE,EAAE,CAAC,IAAI;IAF5B,CAAC;IAI3C,OAAO;QACV,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI;YACrB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACnB,OAAM;aACT;SACJ;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;IAChC,CAAC;IAED,IAAW,IAAI;QACX,QAAQ,IAAI,CAAC,IAAI,EAAE;YACf,KAAK,MAAM;gBACP,OAAO,IAAI,CAAC,YAAY;YAC5B,KAAK,SAAS;gBACV,OAAO,IAAI,CAAC,aAAa;YAC7B,KAAK,SAAS;gBACV,OAAO,IAAI,CAAC,qBAAqB;YACrC,KAAK,QAAQ;gBACT,OAAO,IAAI,CAAC,qBAAqB;YACrC;gBACI,OAAO,IAAI;SAClB;IACL,CAAC;CACJ;;YAxDQ,yEAAc;;;mBAiBlB,uDAAS,SAAC,WAAW;;AAVb,0BAA0B;IAJtC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,+FAAgD;KACnD,CAAC;GACW,0BAA0B,CAiDtC;AAjDsC;;;;;;;;;;;;;ACVvC;AAAe,qhBAAsd,yCAAyC,8MAA8M,sCAAsC,8KAA8K,8ZAA8Z,kCAAkC,uHAAuH,6BAA6B,iDAAiD,4MAA4M,0EAA0E,0LAA0L,2DAA2D,sMAAsM,iCAAiC,2BAA2B,E;;;;;;;;;;;;ACAl0E;AAAe,wIAAyE,6HAA6H,4HAA4H,mFAAmF,6DAA6D,6JAA6J,+CAA+C,oDAAoD,wBAAwB,kCAAkC,yBAAyB,E;;;;;;;;;;;;;;;;;;;;ACAnwB;AACP;AAEN;AAEqB;IAe5C,cAAc,SAAd,cAAc;IACvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjC,MAAM,CAAC,OAA6B;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,WAAW,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,kEAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACpG,CAAC;CACJ;;YA1BQ,+DAAU;;AAoBN,cAAc;IAH1B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,cAAc,CAM1B;AAN0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBwC;AACtC;AACM;AACM;AACiB;AAEO;AACL;AACF;IAM7C,qBAAqB,SAArB,qBAAqB;IAkB9B,YACW,OAAuB,EACtB,cAA8B,EAC9B,MAAqB;QAFtB,YAAO,GAAP,OAAO,CAAgB;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAe;QAjB1B,kBAAa,GAAG,IAAI,EAAC,yBAAyB;QAQ9C,gBAAW,GAAG,wEAAW,CAAC,WAAW;QAErC,cAAS,GAAG,KAAK;QAEhB,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAMvC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI;QAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW;QAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS;IAChD,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,UAAU;;QACb,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,cAAc;aACd,MAAM,CAAC;YACJ,QAAQ,EAAE,mDAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YACzC,WAAW,EAAE;gBACT,aAAa,oBAAE,IAAI,CAAC,YAAY,CAAC,OAAO,0CAAE,QAAQ,0CAAE,aAAa,mCAAI,EAAE;aAC1E;SACJ,CAAC;aACD,IAAI,CACD,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,SAAS,GAAG,KAAK;QAC1B,CAAC,CAAC,CACL;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CACf,GACI,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAS,CAAC,aACrE,mBAAmB,CACtB;QACL,CAAC,CAAC,CACT;IACL,CAAC;CACJ;;YApEQ,wEAAc;YADd,6EAAc;YAEd,sEAAa;;;2BAOjB,mDAAK;4BAEL,mDAAK;;AAHG,qBAAqB;IAJjC,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,yFAA0C;KAC7C,CAAC;GACW,qBAAqB,CA6DjC;AA7DiC;;;;;;;;;;;;;ACdlC;AAAe,8HAA+D,qCAAqC,gHAAgH,oDAAoD,qCAAqC,u+BAAu+B,qBAAqB,oDAAoD,4BAA4B,wLAAwL,sWAAsW,iTAAiT,4BAA4B,uEAAuE,qDAAqD,6EAA6E,4BAA4B,uVAAuV,0BAA0B,qEAAqE,4CAA4C,y8BAAy8B,8LAA8L,oCAAoC,+DAA+D,mCAAmC,4QAA4Q,cAAc,KAAK,kCAAkC,iDAAiD,2CAA2C,KAAK,cAAc,yDAAyD,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA/nJ;AACkB;AAChC;AACA;AAEgC;AAC1B;IAM5B,sBAAsB,SAAtB,sBAAsB;IA8C/B,YAA2B,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAzCpC,WAAM,GAA0B;YACnC,WAAW;YACX,YAAY;YACZ,UAAU;YACV,QAAQ;YACR,aAAa;YACb,UAAU;YACV,aAAa;YACb,SAAS;YACT,YAAY;YACZ,gBAAgB;YAChB,yBAAyB;YACzB,OAAO;YACP,kBAAkB;YAClB,cAAc;YACd,gBAAgB;YAChB,qBAAqB;YACrB,oBAAoB;YACpB,oBAAoB;YACpB,YAAY;SACf;QACM,mBAAc,GAA8B;YAC/C,MAAM;YACN,MAAM;YACN,oBAAoB;YACpB,aAAa;YACb,wBAAwB;YACxB,qBAAqB;YACrB,UAAU;YACV,kBAAkB;YAClB,SAAS;YACT,iBAAiB;YACjB,gBAAgB;YAChB,UAAU;YACV,eAAe;YACf,OAAO;SACV;QACM,eAAU,GAA2B,UAAU;QAE9C,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAEI,CAAC;IAExC,QAAQ;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,gBAAgB,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACnF,IAAI,CAAC,OAAO,GAAG,OAAO;YACtB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,QAAS;gBAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC5F;QACL,CAAC,CAAC;IACN,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,WAAW,CAAC,QAA2B;QAC1C,IAAI,QAAQ,KAAK,OAAO,EAAE;YACtB,OAAO,OAAO;SACjB;QACD,OAAO,iEAAW,CAAC,QAAQ,CAAC;IAChC,CAAC;IAEM,QAAQ,CAAC,QAAyD;;QACrE,IAAI,QAAQ,KAAK,OAAO,EAAE;YACtB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;SACnF;QACD,IAAI,QAAQ,KAAK,aAAa,EAAE;YAC5B,mBAAO,qDAAU,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,0CAAE,IAAI,mCAAI,EAAE;SAC1D;QACD,IAAI,QAAQ,KAAK,aAAa,EAAE;YAC5B,OAAO,GAAG,gFAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,mCAAI,EAAE,IAAI,UAAI,CAAC,OAAO,CAAC,WAAW,mCAAI,EAAE,EAAE;SAC1G;QACD,IAAI,QAAQ,KAAK,cAAc,EAAE;YAC7B,OAAO,yDAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;SAC/C;QACD,IAAI,QAAQ,KAAK,QAAQ,EAAE;YACvB,OAAO,yDAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SACzC;QACD,aAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,mCAAI,EAAE;IACvC,CAAC;IAEM,gBAAgB,CAAC,QAA6E;;QACjG,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,UAAU,EAAE;YACjD,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;SAC3G;QACD,IAAI,QAAQ,KAAK,aAAa,EAAE;YAC5B,OAAO,GAAG,gFAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,mCAAI,EAAE,IACvE,UAAI,CAAC,eAAe,CAAC,WAAW,mCAAI,EACxC,EAAE;SACL;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;IACzC,CAAC;CACJ;;YA/GQ,+DAAU;;;mBAad,mDAAK;;AADG,sBAAsB;IAJlC,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,4FAA6C;KAChD,CAAC;GACW,sBAAsB,CAmGlC;AAnGkC;;;;;;;;;;;;;ACZnC;AAAe,8HAA+D,mCAAmC,GAAG,eAAe,0GAA0G,oDAAoD,sCAAsC,8LAA8L,wCAAwC,icAAic,8BAA8B,yJAAyJ,oCAAoC,4GAA4G,4FAA4F,4BAA4B,wCAAwC,yNAAyN,6BAA6B,8JAA8J,iCAAiC,qHAAqH,0FAA0F,4BAA4B,uCAAuC,sLAAsL,6CAA6C,oBAAoB,E;;;;;;;;;;;;ACAn5E;AAAe,yGAA0C,qDAAqD,obAAob,udAAud,wDAAwD,4BAA4B,+UAA+U,E;;;;;;;;;;;;;;;;;;;ACAn3C;AACmD;IAM/E,2BAA2B,yCAA3B,2BAA2B;IAC7B,QAAQ,CAAC,OAAwB;;QACpC,IACI,QAAC,OAAO,CAAC,KAAK,0CAAE,KAAK,CACjB,krCAAkrC,EACrrC,EACH;YACE,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE;SAClC;QACD,OAAO,IAAI;IACf,CAAC;CACJ;AAXY,2BAA2B;IAJvC,+DAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,6BAA2B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KACjG,CAAC;GACW,2BAA2B,CAWvC;AAXuC;;;;;;;;;;;;;;;;;;;;;;ACPqB;AACnB;AACU;AACY;AACC;IAKpD,oBAAoB,SAApB,oBAAoB;IAI7B,YAAmB,OAAuB,EAAU,IAAgB;QAAjD,YAAO,GAAP,OAAO,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAH7D,8BAAyB,GAAG,IAAI,kDAAa,CAAS,CAAC,CAAC;QACxD,gBAAW,GAAG,IAAI,4CAAO,EAAQ;QAGpC,kDAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,8DAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACpG,IAAI,CACD,gEAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EACxC,8DAAO,CAAC,IAAI,CAAC,EAAE,CACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE,gBAAgB,EAAE;YAC9C,OAAO,EAAE,UAAU;YACnB,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;SAChD,CAAC,CACL,EACD,0DAAG,CAAC,QAAQ,CAAC,EAAE,CACX,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC,CAAC,CAAC,CAAC,CACnG,CACJ;aACA,SAAS,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9C,CAAC,CAAC;IACV,CAAC;CACJ;;YA3BQ,+DAAc;YAJd,+DAAU;;AASN,oBAAoB;IAHhC,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,oBAAoB,CAsBhC;AAtBgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT+C;AACnB;AACoC;AACzC;AACoB;AACM;AAC5B;AACxB;AACW;AAEiB;AACT;AACqB;AACL;AACL;AACF;IAuB7C,oBAAoB,SAApB,oBAAqB,SAAQ,8DAAuB;IAiB7D,YACI,IAAgB,EAChB,QAAkB,EAClB,cAAiC,EACjC,KAAqB,EACrB,MAAc,EACd,OAAuB,EACvB,YAAiC,EAC1B,KAAqB,EACpB,MAAqB,EACrB,cAA8B,EAC/B,SAA2B;QAElC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC;QALpE,UAAK,GAAL,KAAK,CAAgB;QACpB,WAAM,GAAN,MAAM,CAAe;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC/B,cAAS,GAAT,SAAS,CAAkB;QAxBtB,aAAQ,GAAG,IAAI,0DAAY,EAAY;QAEvC,aAAQ,GAAG,IAAI,0DAAY,EAAQ;QAC5C,eAAU,GAAG,IAAI,4CAAO,EAAQ;QACvC,kGAAkG;QAC3F,eAAU,GAAG,EAAE;QAEf,cAAS,GAAG,KAAK;QACjB,qBAAgB,GAAG,IAAI,GAAG,EAAU;QACpC,iBAAY,GAAG,CAAC;QAChB,YAAO,GAAG,0EAAO;QACjB,mBAAc,GAAG,iFAAc;IAgBtC,CAAC;IAEM,QAAQ;QACX,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,IAAK,CAAC,EAAE,WAAW;QAChD,KAAK,CAAC,QAAQ,EAAE;IACpB,CAAC;IAEM,UAAU,CAAC,IAAY;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,IAAI;aACJ,GAAG,CAAa,IAAI,CAAC,MAAM,EAAE;YAC1B,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SACzE,CAAC;aACD,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CACzB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,aAAa,KAAK,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,KAAK,KAAK,IAAI,CAAC,CACjG;YACD,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;aAC9B;iBAAM;gBACH,IAAI,CAAC,sEAAe,CAAC,IAAI,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,8DAAO,CAAC,IAAI,CAAC,EAAE;oBACjE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iDAAiD,CAAC,CAAC;oBAC5F,IAAI,CAAC,SAAS,GAAG,KAAK;oBACtB,OAAM;iBACT;gBACD,IAAI,CAAC,cAAc;qBACd,MAAM,CAAC;oBACJ,WAAW,EAAE,8DAAO,CAAC,IAAI,CAAC;wBACtB,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;wBAC3C,CAAC,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;oBACvD,QAAQ,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;iBACjC,CAAC;qBACD,IAAI,CACD,gEAAQ,CAAC,GAAG,EAAE;oBACV,IAAI,CAAC,SAAS,GAAG,KAAK;gBAC1B,CAAC,CAAC,CACL;qBACA,SAAS,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACxB,CAAC,CAAC;aACT;QACL,CAAC,CAAC;IACV,CAAC;IAEM,aAAa,CAAC,OAAiB;QAClC,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACvC,OAAM;SACT;QACD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;QACrC,IAAI,CAAC,IAAI;aACJ,MAAM,CAAO,aAAa,OAAO,CAAC,EAAE,EAAE,CAAC;aACvC,IAAI,CACD,gEAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5C,CAAC,CAAC,CACL;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;QACxB,CAAC,CAAC;IACV,CAAC;IAEM,cAAc,CAAC,MAAc;QAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;IAC3B,CAAC;IAEe,WAAW;;YACvB,aAAa;QACjB,CAAC;KAAA;CACJ;;YA5IQ,+DAAU;YAIM,mEAAQ;YAHxB,+DAAiB;YACjB,8DAAc;YAAE,sDAAM;YAWtB,yEAAc;YAFd,mFAAmB;YAPnB,yEAAc;YAUd,uEAAa;YAFb,8EAAc;YAPd,oEAAgB;;;mBAiCpB,mDAAK;uBAEL,oDAAM;uBAEN,oDAAM;;AALE,oBAAoB;IArBhC,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,yFAA0C;QAC1C,UAAU,EAAE;YACR,mEAAO,CAAC,YAAY,EAAE;gBAClB,iEAAK,CACD,MAAM,EACN,iEAAK,CAAC;oBACF,KAAK,EAAE,MAAM;iBAChB,CAAC,CACL;gBACD,iEAAK,CACD,OAAO,EACP,iEAAK,CAAC;oBACF,KAAK,EAAE,GAAG;iBACb,CAAC,CACL;gBACD,sEAAU,CAAC,SAAS,EAAE,mEAAO,CAAC,OAAO,CAAC,CAAC;aAC1C,CAAC;SACL;KACJ,CAAC;GACW,oBAAoB,CAuGhC;AAvGgC;AAyG1B,SAAS,eAAe,CAAC,QAAkB,EAAE,KAAY;IAC5D,MAAM,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE;QACzD,WAAW,EAAE,eAAe;KAC/B,CAAC;IACF,MAAM,WAAW,GAAG,gBAAgB,CAAC,iBAAyC;IAC9E,WAAW,CAAC,IAAI,GAAG,KAAK;IACxB,OAAO,gBAAgB;AAC3B,CAAC;;;;;;;;;;;;;;;;;;;;;ACtJ6D;AACpB;AAGN;AAEe;IAKtC,WAAW,SAAX,WAAW;IACpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjC,aAAa,CAAC,EAAU,EAAE,IAAkB;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC;IAC5D,CAAC;IAEM,cAAc,CAAC,EAAU,EAAE,QAAgB,EAAE,OAAoC;QACpF,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CACD,UAAU,EAAE,kBAAkB,EAC9B,EAAE,QAAQ,EAAE,EACZ;YACI,OAAO,EAAE,IAAI,gEAAW,iBACpB,cAAc,EAAE,kBAAkB,IAC/B,OAAO,EACZ;SACL,CACJ;aACA,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,WAAW,CAAC,EAAU,EAAE,KAAa;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,UAAU,EAAE,eAAe,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/G,CAAC;IAEM,gBAAgB,CAAC,EAAU,EAAE,WAA4B;QAC5D,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,UAAU,EAAE,oBAAoB,EAAE,EAAE,WAAW,EAAE,CAAC;aAC7D,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,aAAa,CAAC,EAAU,EAAE,OAAoB;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,UAAU,EAAE,iBAAiB,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACnH,CAAC;IAEM,cAAc,CAAC,EAAU,EAAE,UAAkB;QAChD,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,UAAU,EAAE,kBAAkB,EAAE,EAAE,UAAU,EAAE,CAAC;aAC1D,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,iBAAiB,CAAC,EAAU,EAAE,aAA4B;QAC7D,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,gBAAgB,EAAE,qBAAqB,EAAE,EAAE,aAAa,EAAE,CAAC;aACtE,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,gBAAgB,CAAC,EAAU,EAAE,UAAyB;QACzD,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,gBAAgB,EAAE,qBAAqB,EAAE,EAAE,UAAU,EAAE,CAAC;aACnE,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,UAAU,CAAC,EAAU,EAAE,IAAqB;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,UAAU,EAAE,cAAc,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7G,CAAC;IAEM,YAAY,CAAC,EAAU,EAAE,MAAc;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,UAAU,EAAE,gBAAgB,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACjH,CAAC;IAEM,gBAAgB,CAAC,EAAU,EAAE,UAAgB;QAChD,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,UAAU,EAAE,qBAAqB,EAAE,EAAE,UAAU,EAAE,CAAC;aAC7D,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,eAAe,CAAC,EAAU,EAAE,SAAkB,EAAE,OAAoC;QACvF,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CACD,UAAU,EAAE,oBAAoB,EAChC,EAAE,SAAS,EAAE,EACb;YACI,OAAO,EAAE,IAAI,gEAAW,iBAAG,cAAc,EAAE,kBAAkB,IAAK,OAAO,EAAG;SAC/E,CACJ;aACA,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,uBAAuB,CAAC,EAAU,EAAE,iBAA4B;QACnE,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,UAAU,EAAE,4BAA4B,EAAE,EAAE,iBAAiB,EAAE,CAAC;aAC3E,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,qBAAqB,CAAC,EAAU,EAAE,eAA0B;QAC/D,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,UAAU,EAAE,0BAA0B,EAAE,EAAE,eAAe,EAAE,CAAC;aACvE,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,4BAA4B,CAAC,EAAU,EAAE,sBAA+B;QAC3E,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,UAAU,EAAE,kCAAkC,EAAE,EAAE,sBAAsB,EAAE,CAAC;aACtF,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,WAAW,CAAC,EAAU,EAAE,KAAiB;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,UAAU,EAAE,eAAe,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/G,CAAC;IAEM,iBAAiB,CAAC,EAAU,EAAE,aAA4B;QAC7D,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAO,gBAAgB,EAAE,sBAAsB,EAAE,EAAE,aAAa,EAAE,CAAC;aACvE,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,KAAK,CAAC,EAAU,EAAE,UAAuB;QAC5C,OAAO,IAAI,CAAC,IAAI;aACX,KAAK,CAAO,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE;YACrC,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,6BAA6B;aAChD,CAAC;SACL,CAAC;aACD,IAAI,CAAC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,4DAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC;IAEM,oBAAoB,CAAC,EAAU;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACjB,UAAU,EAAE,EAAE,EACd;YACI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC;YACrC,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,sBAAsB;SACjC,EACD;YACI,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,sBAAsB,EAAE,CAAC;SACvE,CACJ;IACL,CAAC;CACJ;;YA9IQ,+DAAU;;AAWN,WAAW;IAHvB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,WAAW,CAmIvB;AAnIuB;;;;;;;;;;;;;ACXxB;AAAe,2oDAA4kD,E;;;;;;;;;;;;ACA3lD;AAAA;AAAO,MAAM,WAAW,GAAG;IACvB,OAAO,EAAE,QAAQ;IACjB,WAAW,EAAE,SAAS;IACtB,wBAAwB,EAAE,KAAK;IAC/B,sBAAsB,EAAE;QACpB,GAAG,EAAE,4CAA4C;QACjD,GAAG,EAAE,oCAAoC;QACzC,GAAG,EAAE,4CAA4C;QACjD,GAAG,EAAE,oCAAoC;QACzC,YAAY,EAAE,4CAA4C;QAC1D,YAAY,EAAE,4CAA4C;QAC1D,YAAY,EAAE,oCAAoC;KACrD;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb6D;AAC2B;AACzB;AAC5B;AACmB;AACQ;AACa;AAUd;AACF;IAM/C,mBAAmB,SAAnB,mBAAmB;IAmG5B,YAAoB,IAAgB,EAAU,OAAuB;QAAjD,SAAI,GAAJ,IAAI,CAAY;QAAU,YAAO,GAAP,OAAO,CAAgB;QAlG9D,kBAAa,GAAG,8EAAa;QAC7B,sBAAiB,GAAG,qEAAiB;QAGrC,WAAM,GAAG,KAAK;QAUd,aAAQ,GAAwB,SAAS;QAEhC,mBAAc,GAAG,IAAI,0DAAY,EAAiB;QAElD,sBAAiB,GAAG,IAAI,0DAAY,EAAiB;QAErD,sBAAiB,GAAG,IAAI,0DAAY,EAAuB;QAE3D,mBAAc,GAAG,IAAI,0DAAY,EAAmB;QAC7D,cAAS,GAAG,IAAI;QACf,eAAU,GAAG,IAAI,4CAAO,EAAQ;QAChC,eAAU,GAAgB,EAAE;QAC5B,aAAQ,GAAgB,IAAI;QACpC,8DAA8D;QACvD,cAAS,GAA4B,kDAAK,CAAC,+CAAE,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAClF,0DAAG,CAAC,GAAG,EAAE;YACL,IAAI,CAAC,SAAS,GAAG,IAAI;QACzB,CAAC,CAAC,EACF,mEAAY,CAAC,GAAG,CAAC,EACjB,gEAAS,CAAC,GAAG,EAAE,CACX,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC;YACxC,CAAC,CAAC,+CAAE,CAAC,IAAI,CAAC;YACV,CAAC,CAAC,qDAAQ,CAAC;gBACL,yEAAyE;gBACzE,IAAI,CAAC,IAAI,CAAC,IAAI,CACV,OAAO,EACP;oBACI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC;oBACrC,OAAO,EAAE,KAAK;oBACd,MAAM,EAAE,yBAAyB;oBACjC,MAAM,EAAE;wBACJ,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;wBAC7D,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;qBAChE;iBACJ,EACD;oBACI,OAAO,EAAE,IAAI,gEAAW,CAAC;wBACrB,cAAc,EAAE,sBAAsB;qBACzC,CAAC;iBACL,CACJ;gBACD,IAAI,CAAC,QAAQ,KAAK,SAAS;oBACvB,CAAC,CAAC,+CAAE,CAAC,SAAS,CAAC;oBACf,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACV,OAAO,EACP;wBACI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC;wBACrC,OAAO,EAAE,KAAK;wBACd,MAAM,EAAE,yBAAyB;wBACjC,MAAM,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,MAAM,EAAE,UAAU;4BAClB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;4BAC7D,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;yBAChE;qBACJ,EACD;wBACI,OAAO,EAAE,IAAI,gEAAW,CAAC;4BACrB,cAAc,EAAE,sBAAsB;yBACzC,CAAC;qBACL,CACJ;aACV,CAAC,CAAC,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,gBAAgB,CAAC,EAAE,EAAE;gBACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC;gBAChD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC;gBACtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,0EAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACjE,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,CAAC;iBAC5D;gBACD,IAAI,gBAAgB,EAAE;oBAClB,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,MAAM;iBAC1C;YACL,CAAC,CAAC,EACF,0DAAG,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAW,CAAC,CAAC,EACjG,+DAAQ,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,SAAS,GAAG,KAAK;YAC1B,CAAC,CAAC,CACL,CACV,CACJ;IAEuE,CAAC;IAElE,QAAQ;QACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,aAAa,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrG,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;QAC1B,CAAC,CAAC;IACN,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IAC1B,CAAC;IAEM,eAAe,CAAC,GAAS;QAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpC,OAAO,KAAK;SACf;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QACrG,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,iBAAiB,GAAG,IAAI,mDAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;QAC7G,OAAO,IAAI,mDAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;IACxG,CAAC;IAEO,OAAO,CAAC,MAAc,EAAE,YAAuB,EAAE,eAA0B;QAC/E,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,CAAC;QAClF,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,eAAe,CAAC,IAAI,CAAC;QACxF,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YACnB,OAAO,GAAG;SACb;QACD,OAAO,0EAAQ,CAAC,OAAO,CACnB,MAAM,EACN,IAAI,EACJ,OAAO,EACP,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EACxE,IAAI,CAAC,QAAQ,CAChB;IACL,CAAC;IAEO,iBAAiB,CAAC,GAAS;QAC/B,OAAO,IAAI,mDAAS,CAChB,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CACxF,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;IACnB,CAAC;CACJ;;YArKQ,+DAAU;YAiBV,yEAAc;;;qBASlB,mDAAK;uBAGL,mDAAK;mBAEL,mDAAK;qBAEL,mDAAK;qBAEL,mDAAK;uBAEL,mDAAK;6BAEL,oDAAM;gCAEN,oDAAM;gCAEN,oDAAM;6BAEN,oDAAM;;AAtBE,mBAAmB;IAJ/B,+DAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,wFAAyC;KAC5C,CAAC;GACW,mBAAmB,CA8I/B;AA9I+B;;;;;;;;;;;;;ACrBhC;AAAA;AAAA;AAAO,MAAM,QAAQ;IAGjB;QACI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE;YACzD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,EAAE;YACzB,IAAI,CAAC,GAAG,EAAE;gBACN,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC;aAC/C;YACD,IAAI,CAAC,GAAG,GAAG,GAAG;SACjB;IACL,CAAC;IAEM,IAAI,CAAC,IAAU,EAAE,IAAa;QACjC,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE;YACvD,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC;SAChD;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACvD;IACL,CAAC;IAEM,KAAK;QACR,IAAI,IAAI,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;SACnB;IACL,CAAC;CACJ;AAEM,SAAS,YAAY,CAAC,IAAU;IACnC,OAAO,4BAA4B,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE;AAChE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AChCwC;AACiB;AAC9B;AACY;AAC+C;IAM1E,yBAAyB,SAAzB,yBAAyB;IAGlC,YAAoB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;QAF1C,YAAO,GAAG,wEAAO;QACjB,eAAU,GAAG,kDAAK,CAAC,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,8DAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC,CAAC;IAC9C,CAAC;CACxD;;YAVQ,0FAAiB;;AAMb,yBAAyB;IAJrC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,+FAAgD;KACnD,CAAC;GACW,yBAAyB,CAIrC;AAJqC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVwE;AACpE;AACW;AACG;AACO;AACgB;AACtB;AACE;AACF;IAG5C,uBAAuB,qCAAvB,uBAAuB;IAEhC,YACY,MAAqB,EACrB,aAA4B,EAC5B,KAAe,EACf,OAAuB;QAHvB,WAAM,GAAN,MAAM,CAAe;QACrB,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAU;QACf,YAAO,GAAP,OAAO,CAAgB;IAChC,CAAC;IAEG,SAAS,CAAC,GAAqB,EAAE,IAAiB;QACrD,MAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAE,CAAC,CAAC;QACrG,MAAM,mBAAmB,GAAG,CAAC,CAAC,CAC1B,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAE,CAAC,CACxG;QACD,MAAM,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;QACjG,OAAO,IAAI;aACN,MAAM,CACH,GAAG,CAAC,KAAK,CAAC;YACN,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;SACpG,CAAC,CACL;aACA,IAAI,CACD,gEAAS,CAAC,QAAQ,CAAC,EAAE,CACjB,QAAQ,CAAC,IAAI,CACT,8DAAO,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE;YACvB,8CAA8C;YAC9C,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACtB,OAAO,uDAAU,CAAC,KAAK,CAAC;aAC3B;YACD,MAAM,YAAY,GAAG,OAAO,GAAG,CAAC;YAChC,kEAAkE;YAClE,IAAI,YAAY,GAAG,yBAAuB,CAAC,kBAAkB,EAAE;gBAC3D,OAAO,uDAAU,CAAC,KAAK,CAAC;aAC3B;YACD,8DAA8D;YAC9D,sCAAsC;YACtC,OAAO,CAAC,GAAG,CAAC,WAAW,YAAY,iBAAiB,YAAY,GAAG,IAAI,IAAI,CAAC;YAC5E,OAAO,kDAAK,CAAC,YAAY,GAAG,IAAI,CAAC;QACrC,CAAC,CAAC,CACL,CACJ,EACD,iEAAU,CAAC,GAAG,CAAC,EAAE;;YACb,IAAI,CAAC,mBAAmB,IAAI,GAAG,YAAY,sEAAiB,EAAE;gBAC1D,MAAM,QAAQ,GAAG,GAAwB;gBACzC,IAAI,KAAoC;gBACxC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;oBACxB,KAAK,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC;iBAC1C;qBAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9B,KAAK,GAAG,IAAI,KAAK,CAAC,gBAAgB,CAAC;iBACtC;qBAAM,IAAI,QAAQ,CAAC,KAAK,EAAE;oBACvB,KAAK,GAAG,QAAQ,CAAC,KAAK;iBACzB;qBAAM,IAAI,QAAQ,CAAC,OAAO,EAAE;oBACzB,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;iBACtC;qBAAM;oBACH,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;iBACvE;gBAED,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;oBACzB,oDAAoD;oBACpD,IACI,CAAC,aAAa;wBACd,CAAC;4BACG,2BAA2B;4BAC3B,wBAAwB;4BACxB,qBAAqB;yBACxB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EACxB;wBACE,UAAI,KAAK,CAAC,MAAM,0CAAE,MAAM,EAAE;4BACtB,KAAK,MAAM,SAAS,IAAI,KAAK,CAAC,MAAM,EAAE;gCAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;6BAC/B;yBACJ;6BAAM;4BACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;yBACnC;qBACJ;oBACD,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CACrB,8DAAO,CAAC,GAAG,EAAE;wBACT,IACI,YAAY;4BACZ,GAAG,CAAC,MAAM,KAAK,GAAG;4BAClB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;4BAC9B,uDAAuD;4BACvD,CAAC;gCACG,mBAAmB;gCACnB,qBAAqB;gCACrB,uBAAuB;gCACvB,oBAAoB;6BACvB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EACxB;4BACE,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;yBACrC;wBACD,IAAI,KAAK,CAAC,IAAI,KAAK,2BAA2B,EAAE;4BAC5C,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;4BACvB,oGAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC;yBAC5C;wBACD,OAAO,+CAAE,CAAC,SAAS,CAAC;oBACxB,CAAC,CAAC,EACF,8DAAO,CAAC,GAAG,EAAE,CACT,uDAAU,CACN,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;wBACjB,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,IAAI,cAAc;wBACnD,MAAM,EAAE,QAAQ,CAAC,MAAM;wBACvB,mBAAmB,EAAE,IAAI;qBAC5B,CAAC,CACL,CACJ,CACJ;iBACJ;qBAAM;oBACH,oFAAoF;oBACpF,UAAU,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC;iBACnD;aACJ;YACD,OAAO,uDAAU,CAAC,GAAG,CAAC;QAC1B,CAAC,CAAC,CACL;IACT,CAAC;CACJ;AApH0B,0CAAkB,GAAG,CAAC;;YAJxC,sEAAa;YAFb,sEAAa;YAJb,mEAAQ;YAKR,wEAAc;;AAIV,uBAAuB;IADnC,gEAAU,EAAE;GACA,uBAAuB,CAqHnC;AArHmC;;;;;;;;;;;;;;;;;;;;;ACXK;AACsB;IAMlD,sBAAsB,SAAtB,sBAAsB;IAC/B,YAAmB,aAAmC;QAAnC,kBAAa,GAAb,aAAa,CAAsB;IAAG,CAAC;CAC7D;;YARQ,4EAAoB;;AAMhB,sBAAsB;IAJlC,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,2FAA4C;KAC/C,CAAC;GACW,sBAAsB,CAElC;AAFkC;;;;;;;;;;;;;;;;;;ACPuC;IAK7D,gBAAgB,SAAhB,gBAAgB;IAGzB,YAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAFlB,aAAQ,GAAG,CAAC;IAES,CAAC;IAG/B,SAAS;QACZ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC;IACzC,CAAC;IAGM,OAAO;QACV,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC;IACzC,CAAC;IAEO,KAAK,CAAC,KAAa;QACvB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;YACpB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;SAClD;aAAM;YACH,MAAM,YAAY,GACd,uBAAuB,GAAG,IAAI,CAAC,QAAQ,GAAG,uBAAuB,GAAG,IAAI,CAAC,QAAQ,GAAG,YAAY;YACpG,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;SACvD;IACL,CAAC;IAEO,GAAG,CAAC,QAAgB;QACxB,UAAU,CAAC,GAAG,EAAE;YACZ,MAAM,YAAY,GAAW,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK;YACxD,IAAI,YAAY,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;gBAClD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,GAAG,QAAQ;aACzC;QACL,CAAC,CAAC;IACN,CAAC;CACJ;;YAtCmB,wDAAU;;;uBAMzB,mDAAK;wBAIL,0DAAY,SAAC,SAAS;sBAKtB,0DAAY,SAAC,OAAO;;AAVZ,gBAAgB;IAH5B,+DAAS,CAAC;QACP,QAAQ,EAAE,WAAW;KACxB,CAAC;GACW,gBAAgB,CAiC5B;AAjC4B;;;;;;;;;;;;;;;;;;;;;;;;ACLsB;AACoC;AAC9C;AACW;AACM;AACmB;AACK;IAGrE,eAAe,SAAf,eAAe;IAExB,YACI,OAAuB,EACM,UAA+B,EACpD,QAAkB;QADG,eAAU,GAAV,UAAU,CAAqB;QACpD,aAAQ,GAAR,QAAQ,CAAU;QAE1B,IAAI,yEAAiB,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,UAAU,EAAE;YACpD,IAAI,CAAC,SAAS,GAAG,IAAI,mDAAU,CAC3B,IAAI,6DAAoB,CAAC;gBACrB,GAAG,EAAE,MAAM,CAAC,UAAU;gBACtB,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,OAAO;gBAChB,WAAW,EAAE,wEAAW,CAAC,OAAO;gBAChC,YAAY,EAAE,CAAC,IAAI,2DAAmB,EAAE,CAAC;aAC5C,CAAC,CACL;YACD,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAChC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBAClC,IAAI,KAAK,CAAC,IAAI,KAAK,8EAAa,CAAC,KAAK,EAAE;wBACpC,KAAK,CAAC,OAAO,CAAC;4BACV,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;4BACjB,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK;4BACvB,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa;yBACrC,CAAC;qBACL;yBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,8EAAa,CAAC,MAAM,EAAE;wBAC5C,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;qBACtB;gBACL,CAAC,CAAC;YACN,CAAC,CAAC;SACL;IACL,CAAC;IACM,WAAW,CAAC,KAAY;QAC3B,IAAK,KAAa,CAAC,mBAAmB,EAAE;YACpC,SAAS;YACT,OAAM;SACT;QACD,sCAAsC;QACtC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;QACpB,IAAI,CAAC,yEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACrC,OAAM;SACT;QACD,2EAA2E;QAC3E,MAAM,kBAAkB,GAAG,4BAA4B;QACvD,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YACxC,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yFAAmB,CAAC;YAC3D,YAAY;iBACP,IAAI,CAAC;gBACF,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,uHAAuH;gBAC7H,KAAK,EAAE,sBAAsB;gBAC7B,UAAU,EAAE,KAAK;gBACjB,WAAW,EAAE,QAAQ;gBACrB,YAAY,EAAE,QAAQ;aACzB,CAAC;iBACD,SAAS,CAAC,GAAG,EAAE;gBACZ,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC5B,CAAC,CAAC;YACN,OAAM;SACT;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAE,KAAa,CAAC,aAAa,IAAI,KAAK,CAAC;SACzE;IACL,CAAC;CACJ;;YAnEQ,+EAAc;4CAOd,oDAAM,SAAC,yDAAW;YAZgB,sDAAQ;;AAQtC,eAAe;IAD3B,gEAAU,EAAE;GACA,eAAe,CAgE3B;AAhE2B;;;;;;;;;;;;;ACT5B;AAAe,0MAA2I,4CAA4C,uIAAuI,6DAA6D,gBAAgB,2GAA2G,oIAAoI,yNAAyN,8BAA8B,yiBAAyiB,oBAAoB,uDAAuD,qBAAqB,waAAwa,oBAAoB,qEAAqE,qBAAqB,kZAAkZ,4CAA4C,gMAAgM,6BAA6B,2gBAA2gB,oBAAoB,mIAAmI,oBAAoB,oRAAoR,yCAAyC,4LAA4L,+BAA+B,0hBAA0hB,oBAAoB,uHAAuH,oBAAoB,0QAA0Q,yCAAyC,uNAAuN,iCAAiC,6kBAA6kB,cAAc,KAAK,cAAc,qFAAqF,cAAc,KAAK,cAAc,2QAA2Q,yCAAyC,sdAAsd,sBAAsB,gFAAgF,+BAA+B,qGAAqG,oBAAoB,yDAAyD,6DAA6D,2CAA2C,E;;;;;;;;;;;;;;;;;;;;ACAz8N;AAC0B;AACpC;IAMzB,iBAAiB,+BAAjB,iBAAiB;IAInB,QAAQ,CAAC,OAAwB;QACpC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;QAC3B,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,IAAI;SACd;QACD,QAAQ,IAAI,CAAC,YAAY,EAAE;YACvB,KAAK,QAAQ;gBACT,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;YACtE,KAAK,MAAM;gBACP,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;oBACvD,IACI,IAAI,CAAC,MAAM,KAAK,CAAC;wBACjB,gEAAO,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/E;wBACE,OAAO,IAAI;qBACd;iBACJ;gBACD,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE;SACpC;QACD,OAAO,IAAI;IACf,CAAC;CACJ;;2BAzBI,mDAAK;;AADG,iBAAiB;IAJ7B,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,mBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KACvF,CAAC;GACW,iBAAiB,CA0B7B;AA1B6B;;;;;;;;;;;;;ACR9B;AAAe,wJAAyF,8FAA8F,oCAAoC,+BAA+B,wBAAwB,GAAG,kBAAkB,uKAAuK,E;;;;;;;;;;;;;;;;;;;ACA1a;AAEX;AACA;IAG3B,cAAc,SAAd,cAAc;IAChB,SAAS,CAAC,KAAU,EAAE,MAAc;QACvC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,OAAO,KAAK;SACf;QACD,OAAO,+DAAU,CAAC,iEAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC;IAC9C,CAAC;CACJ;AAPY,cAAc;IAD1B,0DAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;GAChB,cAAc,CAO1B;AAP0B;;;;;;;;;;;;;ACN3B;AAAe,wJAAyF,0BAA0B,mIAAmI,E;;;;;;;;;;;;ACArQ;AAAe,sEAAO,mDAAmD,0DAA0D,qLAAqL,KAAK,2YAA2Y,kCAAkC,8DAA8D,iCAAiC,0DAA0D,sLAAsL,KAAK,sXAAsX,kCAAkC,0CAA0C,E;;;;;;;;;;;;ACAhgD;AAAe,8LAA+H,yCAAyC,yHAAyH,oCAAoC,0HAA0H,6HAA6H,6BAA6B,4aAA4a,+BAA+B,+EAA+E,+BAA+B,+OAA+O,yCAAyC,0KAA0K,oBAAoB,2CAA2C,6BAA6B,2CAA2C,E;;;;;;;;;;;;ACA1uD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsF;AACtD;AAEzB,MAAM,UAAU,GAAe,EAAE;AACjC,IAAI,SAAS,GAAc,EAAE;AAEpC,MAAM,gBAAgB,GAAa;IAC/B,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;CACP;AAED,KAAK,MAAM,OAAO,IAAI,gEAAW,CAAC,GAAG,EAAE;IACnC,IAAI,OAAO,CAAC,MAAM,KAAK,UAAU,IAAI,OAAO,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;QACzE,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO;QACpC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;KAC1B;CACJ;AAED,yCAAyC;AACzC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAE5E,MAAM,qBAAqB,GAAG,sDAAO,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;ACpCtD;AACN;IAGhC,YAAY,SAAZ,YAAY;IACd,SAAS,CAAC,KAAU;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,OAAO,KAAK;SACf;QACD,OAAO,yDAAQ,CAAC,yDAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC;IAChD,CAAC;CACJ;AAPY,YAAY;IADxB,0DAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;GACd,YAAY,CAOxB;AAPwB;;;;;;;;;;;;;ACJzB;AAAe,8HAA+D,4CAA4C,gHAAgH,kOAAkO,SAAS,wEAAwE,6CAA6C,iCAAiC,kbAAkb,6DAA6D,4EAA4E,wCAAwC,0jBAA0jB,mBAAmB,uIAAuI,gCAAgC,kDAAkD,E;;;;;;;;;;;;ACAp/D;AAAA;AAAO,MAAM,SAAS;;AACK,eAAK,GAAG,eAAe;;;;;;;;;;;;;ACDlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACsB;AAEN;AAE7C,SAAS,YAAY,CAAC,WAAwB;IACjD,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,uBAAuB,CAAC,WAAW,CAAC;IAClE,IAAI,iBAAiB,GAAG,IAAI,mDAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC;IAC5E,4BAA4B;IAC5B,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,aAAa,EAAE;QAC9C,+CAA+C;QAC/C,MAAM,WAAW,GAAG,IAAI,mDAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QACpE,iBAAiB,GAAG,WAAW;aAC1B,GAAG,CAAC,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,mDAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;aACnE,KAAK,CAAC,WAAW,CAAC;KAC1B;IACD,MAAM,YAAY,GAAG,wEAAW,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,OAAO,IAAI,mDAAS,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC;AAC5G,CAAC;AAED;;GAEG;AACI,SAAS,yBAAyB,CAAC,WAAwB;IAC9D,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,uBAAuB,CAAC,WAAW,CAAC;IAClE,IAAI,CAAC,YAAY,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;QACrE,OAAO,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;KAChD;IACD,MAAM,KAAK,GAAG,IAAI,mDAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CACrC,CAAC,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAC/E;IACD,MAAM,YAAY,GAAG,wEAAW,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC;AAC/F,CAAC;AAED;;GAEG;AACI,SAAS,yBAAyB,CAAC,WAAwB;IAC9D,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,uBAAuB,CAAC,WAAW,CAAC;IAClE,IAAI,CAAC,YAAY,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;QACrE,OAAO,IAAI,mDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;KACxE;IACD,MAAM,YAAY,GAAG,wEAAW,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,OAAO,IAAI,mDAAS,CAAC,MAAM,CAAC;SACvB,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAClF,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC;AACzC,CAAC;AAED,SAAS,uBAAuB,CAAC,WAAwB;IACrD,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,eAAe,IAAI,GAAG;IACvE,IAAI,SAAS;IACb,IAAI,WAAW,CAAC,SAAS,KAAK,SAAS,EAAE;QACrC,SAAS,GAAG,WAAW,CAAC,SAAS;KACpC;SAAM,IAAI,WAAW,CAAC,QAAQ,EAAE;QAC7B,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,aAAa;KACjD;SAAM;QACH,SAAS,GAAG,CAAC;KAChB;IACD,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE;AAChC,CAAC;AAEM,SAAS,6BAA6B,CAAC,MAAqB,EAAE,QAAgB;IACjF,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,yEAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM;AACtG,CAAC;AAEM,SAAS,UAAU,CAAC,WAAwB,EAAE,IAAkB;IACnE,OAAO,CACH,CAAC,CAAC,WAAW,CAAC,aAAa;QAC3B,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI;QAChC,CAAC,CAAC,IAAI;QACN,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAChD;AACL,CAAC;AAEM,SAAS,wBAAwB,CAAC,WAAwB;IAC7D,OAAO,CAAC,WAAW,CAAC,SAAS,IAAI,WAAW,CAAC,MAAM;AACvD,CAAC;;;;;;;;;;;;;;;;;;;AC7EyC;AACZ;IASjB,cAAc,SAAd,cAAc;IAOvB;QANO,kBAAa,GAAG,IAAI,4CAAO,EAAgB;QAClD,sDAAsD;QAC9C,yBAAoB,GAAG,IAAI,GAAG,EAAkB;QAEhD,oBAAe,GAAG,IAAI,CAAC,uBAAuB,EAAE;QAGpD,iCAAiC;QACjC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;YACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,CAAC,CAAC;IACN,CAAC;IAEM,OAAO,CAAC,GAAW;QACtB,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC;SACnC;aAAM;YACH,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,IAAI;SACzF;IACL,CAAC;IAEM,OAAO,CAAC,GAAW;QACtB,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI;SAC5C;aAAM;YACH,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC;SAC5C;IACL,CAAC;IAEM,OAAO,CAAC,GAAW,EAAE,KAAa;QACrC,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI;gBACA,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC;aACnC;YAAC,OAAO,KAAK,EAAE;gBACZ,uFAAuF;gBACvF,IAAI,KAAK,CAAC,IAAI,KAAK,oBAAoB,EAAE;oBACrC,MAAM,KAAK;iBACd;aACJ;SACJ;aAAM;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC;YACnD,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;YACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,YAAY,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAC5F;SACJ;IACL,CAAC;IAEM,UAAU,CAAC,GAAW;QACzB,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC;SAC/B;aAAM;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC;YACnD,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,YAAY,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAChG;SACJ;IACL,CAAC;IAEO,uBAAuB;QAC3B,wGAAwG;QACxG,MAAM,OAAO,GAAG,MAAM,CAAC,YAAY;QACnC,IAAI;YACA,MAAM,CAAC,GAAG,kBAAkB;YAC5B,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;YACrB,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,OAAO,IAAI;SACd;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CACH,KAAK,YAAY,YAAY;gBAC7B,4BAA4B;gBAC5B,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE;oBACd,UAAU;oBACV,KAAK,CAAC,IAAI,KAAK,IAAI;oBACnB,yDAAyD;oBACzD,4BAA4B;oBAC5B,KAAK,CAAC,IAAI,KAAK,oBAAoB;oBACnC,UAAU;oBACV,KAAK,CAAC,IAAI,KAAK,4BAA4B,CAAC;gBAChD,0EAA0E;gBAC1E,OAAO,CAAC,MAAM,KAAK,CAAC,CACvB;SACJ;IACL,CAAC;CACJ;;AAtFY,cAAc;IAP1B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;IACF;;;OAGG;GACU,cAAc,CAsF1B;AAtF0B;;;;;;;;;;;;;ACV3B;AAAe,0GAA2C,0BAA0B,mIAAmI,E;;;;;;;;;;;;;;;;;;;ACA7I;AAC8B;IAY3F,qBAAqB,mCAArB,qBAAqB;IAKvB,WAAW,CAAC,OAAsB;QACrC,IAAI,OAAO,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY;YACnC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,SAAS,EAAE;aACnB;SACJ;IACL,CAAC;IAEM,QAAQ,CAAC,OAAwB;QACpC,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;YAC7C,OAAO,IAAI;SACd;QACD,MAAM,QAAQ,GAAG,yDAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC7C,IAAI,QAAQ,KAAK,IAAI,EAAE;YACnB,OAAO,IAAI;SACd;QACD,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK;QACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;IAC1F,CAAC;IAEM,yBAAyB,CAAC,EAAc;QAC3C,IAAI,CAAC,SAAS,GAAG,EAAE;IACvB,CAAC;CACJ;;kBA5BI,mDAAK;;AADG,qBAAqB;IAVjC,+DAAS,CAAC;QACP,QAAQ,EAAE,0DAA0D;QACpE,SAAS,EAAE;YACP;gBACI,OAAO,EAAE,4DAAa;gBACtB,WAAW,EAAE,uBAAqB;gBAClC,KAAK,EAAE,IAAI;aACd;SACJ;KACJ,CAAC;GACW,qBAAqB,CA6BjC;AA7BiC;;;;;;;;;;;;;ACblC;AAAe,oKAAqG,8NAA8N,E;;;;;;;;;;;;ACAlV;AAAe,uVAAwR,+BAA+B,sDAAsD,uBAAuB,uGAAuG,oCAAoC,6BAA6B,8BAA8B,iGAAiG,2BAA2B,6BAA6B,8BAA8B,gNAAgN,gCAAgC,mRAAmR,yCAAyC,iCAAiC,yBAAyB,mIAAmI,mBAAmB,iCAAiC,8BAA8B,2IAA2I,2BAA2B,iCAAiC,8BAA8B,6GAA6G,gCAAgC,8VAA8V,0CAA0C,qCAAqC,qCAAqC,yHAAyH,mCAAmC,qCAAqC,0CAA0C,yHAAyH,gCAAgC,mXAAmX,iCAAiC,sDAAsD,+BAA+B,0MAA0M,+BAA+B,kFAAkF,oEAAoE,GAAG,8BAA8B,qLAAqL,+BAA+B,kFAAkF,wFAAwF,4BAA4B,8BAA8B,kKAAkK,kCAAkC,2DAA2D,gDAAgD,0dAA0d,yCAAyC,wCAAwC,uCAAuC,uGAAuG,iDAAiD,4LAA4L,E;;;;;;;;;;;;;;;;;;;;ACA3uK;AACpB;AAEe;AAEW;IAavD,YAAY,SAAZ,YAAY;IAGrB,YAAoB,OAAuB,EAAU,IAAgB;QAAjD,YAAO,GAAP,OAAO,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAF7D,iBAAY,GAAsC,IAAI;IAEU,CAAC;IAElE,KAAK,CAAC,UAAwB,EAAE;QACnC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,MAAM,IAAI,GAAuC,EAAE;YACnD,MAAM,cAAc,GAAG,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;YACtF,MAAM,qBAAqB,GACvB,OAAO,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,YAAa,CAAC,EAAE,CAAC;YAClG,IAAI,cAAc,EAAE;gBAChB,IAAI,CAAC,KAAK,GAAG,cAAc;aAC9B;YACD,IAAI,qBAAqB,EAAE;gBACvB,IAAI,CAAC,YAAY,GAAG,qBAAqB;aAC5C;YACD,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;aACnC;YACD,IAAI,OAAO,CAAC,MAAM,EAAE;gBAChB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM;aAC/B;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI;iBACxB,IAAI,CAAiB,QAAQ,EAAE,IAAI,EAAE;gBAClC,OAAO,EAAE,OAAO,CAAC,aAAa;oBAC1B,CAAC,CAAC,IAAI,gEAAW,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,aAAa,EAAE,CAAC;oBAC1D,CAAC,CAAC,SAAS;aAClB,CAAC;iBACD,IAAI,CACD,4DAAK,EAAE,EACP,+DAAQ,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,YAAY,GAAG,IAAI;YAC5B,CAAC,CAAC,CACL;SACR;QACD,OAAO,IAAI,CAAC,YAAY;IAC5B,CAAC;IAEM,OAAO,CAAC,UAAwB,EAAE;QACrC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,8DAAO,CAAC,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;IACnH,CAAC;CACJ;;YAvDQ,+DAAc;YALd,+DAAU;;AAkBN,YAAY;IAHxB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,YAAY,CA0CxB;AA1CwB;;;;;;;;;;;;;AClBzB;AAAe,2OAA4K,aAAa,sBAAsB,E;;;;;;;;;;;;;;;;;;;;;ACAjK;AACnB;AACc;AACQ;AACC;IAKpD,wBAAwB,SAAxB,wBAAwB;IAKjC,YAAoB,OAAuB,EAAU,IAAgB;QAAjD,YAAO,GAAP,OAAO,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAJ9D,yBAAoB,GAAG,IAAI,kDAAa,CAAS,CAAC,CAAC;QACnD,WAAM,GAAG,IAAI,4CAAO,EAAQ;QAC3B,gBAAW,GAAG,IAAI,4CAAO,EAAQ;QAGrC,kDAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,8DAAa,CAAC,KAAK,CAAC,CAAC,CAAC;aACpG,IAAI,CACD,gEAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EACxC,8DAAO,CAAC,IAAI,CAAC,EAAE,CACX,IAAI;YACA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE,QAAQ,EAAE;gBACtC,OAAO,EAAE,UAAU;gBACnB,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;aAClD,CAAC;YACJ,CAAC,CAAC,+CAAE,CAAC,IAAI,CAAC,CACjB,EACD,0DAAG,CAAC,QAAQ,CAAC,EAAE,CACX,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC,CAAC,CAAC,CAAC,CACnG,CACJ;aACA,SAAS,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC;QACzC,CAAC,CAAC;IACV,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;IAC3B,CAAC;CACJ;;YAnCQ,+DAAc;YAJd,+DAAU;;AASN,wBAAwB;IAHpC,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,wBAAwB,CA8BpC;AA9BoC;;;;;;;;;;;;;;;;;;;;ACTK;AAOD;AACX;IAgBjB,aAAa,SAAb,aAAa;;QACd,gBAAW,GAAG,IAAI,4CAAO,EAAS;QAClC,gBAAW,GAAG,CAAC;QACf,gBAAW,GAA2C;YAC1D,KAAK,EAAE,sEAAK;YACZ,OAAO,EAAE,oFAAmB;YAC5B,OAAO,EAAE,8EAAa;YACtB,IAAI,EAAE,6EAAY;SACrB;QACD,8DAA8D;QACvD,gBAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;IAwBxD,CAAC;IAtBU,GAAG,CAAC,IAAe,EAAE,OAAe,EAAE,KAAc;QACvD,KAAK,GAAG,KAAK,IAAI,gBAAgB;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAClB,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE;YACtB,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAC5B,IAAI;YACJ,OAAO;YACP,KAAK;SACR,CAAC;IACN,CAAC;IACM,IAAI,CAAC,OAAe,EAAE,KAAc;QACvC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC;IACpC,CAAC;IACM,OAAO,CAAC,OAAe,EAAE,KAAc;QAC1C,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC;IACvC,CAAC;IACM,OAAO,CAAC,OAAe,EAAE,KAAc;QAC1C,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC;IACvC,CAAC;IACM,KAAK,CAAC,OAAe,EAAE,KAAc;QACxC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;IACrC,CAAC;CACJ;AAlCY,aAAa;IAHzB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,aAAa,CAkCzB;AAlCyB;;;;;;;;;;;;;;;;;;;;;;;;;ACxBe;AACmD;AACtD;AACE;AACF;AACE;AAC2C;IAMtE,0BAA0B,wCAA1B,0BAA0B;IAC5B,QAAQ,CAAC,OAAwB;QACpC,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,MAAM,IAAI,GAAG,uGAAgB,CAAC,OAAO,CAAC,KAAK,CAAC;YAC5C,IAAI,CAAC,gEAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;gBAC1B,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE;aAC/B;YACD,IAAI,iEAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE;gBAClD,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE;aAC/B;YACD,IAAI,gEAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,iEAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;gBACnD,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE;aAChC;SACJ;QACD,OAAO,IAAI;IACf,CAAC;CACJ;AAhBY,0BAA0B;IAJtC,+DAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,4BAA0B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAChG,CAAC;GACW,0BAA0B,CAgBtC;AAhBsC;;;;;;;;;;;;;;;;;;;;ACZE;IAM5B,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAJ7B,+DAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,sFAAuC;KAC1C,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;ACNqC;AACA;AACJ;IAOlD,4BAA4B,SAA5B,4BAA4B;IACrC,YAAoB,aAAmC,EAAU,gBAAkC;QAA/E,kBAAa,GAAb,aAAa,CAAsB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAEhG,QAAQ;QACX,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,EAAE,gFAAsB,CAAC;IACxF,CAAC;CACJ;;YAbQ,4EAAoB;YAFD,8DAAgB;;AAS/B,4BAA4B;IALxC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,QAAQ,EAAE,EAAE;KACf,CAAC;IACF,2GAA2G;GAC9F,4BAA4B,CAMxC;AANwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTC;AACG;AACT;AACJ;AACgB;AACZ;AACsB;AAEY;AACN;AACA;AACJ;IAG/C,YAAY,SAAZ,YAAa,SAAQ,2DAAyB;IAwEvD,YACc,KAAmB,EACrB,eAAgC,EAChC,OAAuB;QAE/B,KAAK,CAAC,KAAK,CAAC;QAJF,UAAK,GAAL,KAAK,CAAc;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAChC,YAAO,GAAP,OAAO,CAAgB;QA1EnC,mEAAmE;QAC5D,cAAS,GAAiE,0DAAa,CAC1F,IAAI,CAAC,SAAS,EAAE,EAChB,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,EAChC,IAAI,CAAC,OAAO,CAAC,UAAU,CAC1B,CAAC,IAAI,CACF,0DAAG,CAAC,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE;YAChC,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,iCACnC,MAAM,KACT,KAAK,EAAE,oFAAe,CAClB,MAAM,CAAC,gBAAgB,EACvB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAE,EACpE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAE,CAC9E,EACD,QAAQ,EAAE,IAAI,mDAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC7D,CAAC,CAAC,IAAI,mDAAS,CACT,oFAAe,CACX,MAAM,CAAC,gBAAgB,EACvB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAE,EACpE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,CAAE,CACxD,CACJ,CAAC,OAAO,CAAC,CAAC,CAAC;oBACd,CAAC,CAAC,MAAM,IACd,CAAC;YAEH,4CAA4C;YAC5C,IAAI,wEAAW,CAAC,OAAO,KAAK,OAAO,EAAE;gBACjC,KAAK,MAAM,YAAY,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;oBAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC,EAAE;wBAChE,WAAW,CAAC,IAAI,CAAC;4BACb,OAAO,EAAE,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;4BACvC,KAAK,EAAE,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;4BACrC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC;yBACjE,CAAC;qBACZ;iBACJ;aACJ;iBAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;gBACtF,oEAAoE;gBACpE,WAAW,CAAC,IAAI,CAAC;oBACb,OAAO,EAAE,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;oBACvC,KAAK,EAAE,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;oBACrC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;iBAChF,CAAC;aACZ;YAED,uCAAuC;YACvC,OAAO,sDAAO,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,EAAE,wBAAC,MAAM,CAAC,QAAQ,0CAAE,IAAI,CAAC,WAAW,KAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QACzF,CAAC,CAAC,CACL;QAED,wDAAwD;QACjD,sBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAC1C,0DAAG,CAAC,OAAO,CAAC,EAAE;YACV,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,IAAI,UAAU,GAAG,CAAC;gBAClB,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;oBAC3B,MAAM,aAAa,GAAG,IAAI,mDAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChE,IAAI,aAAa,EAAE;wBACf,UAAU,EAAE;qBACf;oBACD,OAAO,CAAC,CAAC,aAAa,IAAI,OAAO,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,CAAC;gBAC/D,CAAC,CAAC;aACL;YACD,OAAO,OAAO;QAClB,CAAC,CAAC,CACL;QAEM,kBAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CACtC,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACjH;IAQD,CAAC;CACJ;;YAlFsB,4DAAY;YAD1B,6EAAe;YAFf,+EAAc;;AAMV,YAAY;IADxB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,YAAY,CA+ExB;AA/EwB;;;;;;;;;;;;;;;;;;;;ACd0B;AAEW;AACtB;IAG3B,uBAAuB,SAAvB,uBAAuB;IACzB,SAAS,CAAC,KAAU,EAAE,cAAc,GAAG,KAAK,EAAE,SAAS,GAAG,KAAK;QAClE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,OAAO,KAAK;SACf;QACD,OAAO,4EAAmB,CAAC,iEAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,cAAc,EAAE,SAAS,EAAE,CAAC;IAC9E,CAAC;CACJ;AAPY,uBAAuB;IADnC,0DAAI,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,CAAC;GACzB,uBAAuB,CAOnC;AAPmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNyB;AACD;AACpB;AACqB;AACF;AACH;AACE;AACpB;AAE2D;AACrB;IAM/D,sBAAsB,SAAtB,sBAAsB;IAS/B,YACW,OAAuB,EACtB,IAAgB,EACjB,MAAc,EACb,iBAA2C;QAH5C,YAAO,GAAP,OAAO,CAAgB;QACtB,SAAI,GAAJ,IAAI,CAAY;QACjB,WAAM,GAAN,MAAM,CAAQ;QACb,sBAAiB,GAAjB,iBAAiB,CAA0B;QAZhD,cAAS,GAAG,sCAAS;QACrB,eAAU,GAAG,2EAAU;QACvB,UAAK,GAAW,EAAE;QAClB,UAAK,GAAG,CAAC;QACT,gBAAW,GAAG,wEAAW,CAAC,WAAW;QACpC,kBAAa,GAAG,IAAI,iDAAY,EAAE;QAClC,eAAU,GAAG,IAAI,4CAAO,EAAQ;IAOrC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,0DAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;aAClD,IAAI,CACD,mEAAY,CAAC,GAAG,CAAC,EACjB,gEAAS,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,UAAU,IAAI,CAAC,EAAE,QAAQ,EAAE;YACtD,MAAM,EAAE,IAAI,+DAAU,EAAE;iBACnB,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC;iBACpB,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC;iBACrB,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC;SACnC,CAAC,CACL,CACJ;aACA,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI;YACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;QAC3B,CAAC,CAAC,CACT;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7F,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IAC1B,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;CACJ;;YAhDQ,gFAAc;YAVd,+DAAU;YAEV,sDAAM;YAON,qGAAwB;;AAOpB,sBAAsB;IAJlC,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,2FAA4C;KAC/C,CAAC;GACW,sBAAsB,CA0ClC;AA1CkC;;;;;;;;;;;;;AChBnC;AAAe,qWAAsS,2BAA2B,iLAAiL,iCAAiC,kCAAkC,SAAS,yBAAyB,4EAA4E,2gBAA2gB,yBAAyB,mJAAmJ,qCAAqC,GAAG,4BAA4B,oGAAoG,gBAAgB,qFAAqF,+CAA+C,yMAAyM,gDAAgD,6KAA6K,iCAAiC,2BAA2B,E;;;;;;;;;;;;;;;;;;;;ACAtlE;AACP;AAEN;AAEgB;IAGvC,iBAAiB,SAAjB,iBAAiB;IAC1B,YAAsB,KAAsB,EAAU,IAAgB;QAAhD,UAAK,GAAL,KAAK,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEnE,iBAAiB;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,aAAa,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAC3F,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;QACjC,CAAC,CAAC,CACL;IACL,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;IACvD,CAAC;CACJ;;YAjBQ,iEAAe;YALf,+DAAU;;AAQN,iBAAiB;IAD7B,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,iBAAiB,CAc7B;AAd6B;;;;;;;;;;;;;ACR9B;AAAe,uTAAwP,E;;;;;;;;;;;;ACAvQ;AAAe,41BAA6xB,yDAAyD,2TAA2T,kCAAkC,oHAAoH,wEAAwE,6BAA6B,yKAAyK,oCAAoC,kVAAkV,mCAAmC,kRAAkR,6BAA6B,2WAA2W,4BAA4B,wRAAwR,oCAAoC,iYAAiY,iDAAiD,4KAA4K,0DAA0D,oRAAoR,uUAAuU,+BAA+B,kbAAkb,4EAA4E,8ZAA8Z,+BAA+B,oRAAoR,4CAA4C,2aAA2a,kCAAkC,sPAAsP,0DAA0D,6TAA6T,uUAAuU,+BAA+B,seAAse,4CAA4C,6aAA6a,kCAAkC,qUAAqU,yCAAyC,uaAAua,+BAA+B,2QAA2Q,gCAAgC,wNAAwN,0CAA0C,wXAAwX,4BAA4B,MAAM,GAAG,6BAA6B,oOAAoO,sCAAsC,4WAA4W,iCAAiC,oRAAoR,oCAAoC,qUAAqU,+BAA+B,kHAAkH,6BAA6B,yKAAyK,+BAA+B,wUAAwU,gCAAgC,oOAAoO,gCAAgC,2UAA2U,iCAAiC,kRAAkR,6BAA6B,6WAA6W,4BAA4B,8IAA8I,+BAA+B,yJAAyJ,uCAAuC,4TAA4T,8BAA8B,uPAAuP,oCAAoC,+TAA+T,mCAAmC,4MAA4M,wCAAwC,mUAAmU,+BAA+B,4MAA4M,uCAAuC,+TAA+T,8BAA8B,iSAAiS,uCAAuC,iUAAiU,gCAAgC,6PAA6P,oCAAoC,wTAAwT,+BAA+B,sGAAsG,mCAAmC,2DAA2D,gEAAgE,qFAAqF,iNAAiN,iCAAiC,sZAAsZ,4CAA4C,+YAA+Y,8BAA8B,yTAAyT,6DAA6D,iuBAAiuB,0CAA0C,wVAAwV,mCAAmC,0HAA0H,0DAA0D,6KAA6K,0UAA0U,4BAA4B,+aAA+a,4CAA4C,0aAA0a,iCAAiC,oRAAoR,0CAA0C,saAAsa,+BAA+B,oRAAoR,yCAAyC,kaAAka,4BAA4B,oMAAoM,sEAAsE,mLAAmL,6UAA6U,kCAAkC,qbAAqb,kDAAkD,kbAAkb,mCAAmC,oRAAoR,qDAAqD,sbAAsb,oCAAoC,oMAAoM,gEAAgE,gLAAgL,uUAAuU,+BAA+B,kbAAkb,kDAAkD,mbAAmb,kCAAkC,oRAAoR,+CAA+C,6aAA6a,+BAA+B,oRAAoR,6CAA6C,yaAAya,+BAA+B,oRAAoR,mDAAmD,icAAic,iDAAiD,oRAAoR,kDAAkD,mbAAmb,oCAAoC,4LAA4L,oCAAoC,+DAA+D,+DAA+D,gLAAgL,0UAA0U,iCAAiC,kbAAkb,iDAAiD,ibAAib,mCAAmC,iVAAiV,2DAA2D,qcAAqc,6CAA6C,oRAAoR,mDAAmD,qbAAqb,qCAAqC,qUAAqU,+CAA+C,6aAA6a,iCAAiC,oRAAoR,gDAAgD,+aAA+a,kCAAkC,sPAAsP,gEAAgE,gRAAgR,mUAAmU,iCAAiC,kbAAkb,iDAAiD,ibAAib,mCAAmC,oRAAoR,4CAA4C,mbAAmb,8BAA8B,oRAAoR,4CAA4C,uaAAua,8BAA8B,sPAAsP,oEAAoE,kRAAkR,0UAA0U,mCAAmC,obAAob,8CAA8C,yaAAya,8BAA8B,+UAA+U,E;;;;;;;;;;;;;;;;;;;ACAlhxC;AACI;AAC1E,MAAM,aAAa,GAAG,mBAAO,CAAC,uCAA2B,CAAC;IAM7C,yBAAyB,uCAAzB,yBAAyB;;QAKlB,oBAAe,GAAG,IAAI,0DAAY,EAAU;IAOhE,CAAC;IALU,QAAQ,CAAC,OAAwB;QACpC,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC;QAClC,OAAO,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;IAC1E,CAAC;CACJ;;+BAVI,mDAAK;8BAEL,oDAAM;;AAJE,yBAAyB;IAJrC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,2BAAyB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC/F,CAAC;GACW,yBAAyB,CAYrC;AAZqC;;;;;;;;;;;;;;;;;;;;;ACRU;AAEP;IAM5B,sBAAsB,SAAtB,sBAAsB;;QACxB,eAAU,GAAG,qDAAU;IAOlC,CAAC;CAAA;;mBANI,mDAAK;sBAEL,mDAAK;oBAEL,mDAAK;;AANG,sBAAsB;IAJlC,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,2FAA4C;KAC/C,CAAC;GACW,sBAAsB,CAQlC;AARkC;;;;;;;;;;;;;;;;;;ACRO;IAK7B,aAAa,SAAb,aAAa;IAGf,QAAQ,CAAC,IAAY;QACxB,IAAI;YACA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACrB,OAAO,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;SACtC;QAAC,WAAM;YACJ,OAAO,KAAK;SACf;gBAAS;YACN,IAAI,CAAC,UAAU,EAAE;SACpB;IACL,CAAC;IAED;;;OAGG;IACK,UAAU,CAAC,IAAY;QAC3B,qDAAqD;QACrD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC;QAClD,yBAAyB;QACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM;QACrC,kBAAkB;QAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;QAChC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG;QACjC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;QAChC,0CAA0C;QAC1C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU;QACzC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS;QACpC,+CAA+C;QAC/C,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC;QAC7G,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI;QAC1C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI;QAC1B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;QACtB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;IAClE,CAAC;IAEO,UAAU;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI;SACvB;IACL,CAAC;CACJ;AA9CY,aAAa;IAHzB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,aAAa,CA8CzB;AA9CyB;;;;;;;;;;;;;;;;;;;;;;ACLsB;IAOnC,sBAAsB,SAAtB,sBAAsB;CAElC;;oBADI,mDAAK;;AADG,sBAAsB;IALlC,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,2FAA4C;;KAE/C,CAAC;GACW,sBAAsB,CAElC;AAFkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AAC4C;AACxC;AACF;AACC;AACQ;AACD;AACoB;AACvB;AACyB;AACf;AACa;AACb;AACK;AACT;IAMnD,YAAY,SAAZ,YAAY;IAIrB,YACW,OAAuB,EACvB,WAAwB,EACxB,SAA2B,EAC1B,QAAyB,EACzB,SAAiC,EACjC,WAA+B,EAC/B,QAAyB,EACzB,MAAc,EACd,QAAkB,EAClB,iBAAoC,EACpC,cAA8B,EACT,UAA+B;QAXrD,YAAO,GAAP,OAAO,CAAgB;QACvB,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAkB;QAC1B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,cAAS,GAAT,SAAS,CAAwB;QACjC,gBAAW,GAAX,WAAW,CAAoB;QAC/B,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QACT,eAAU,GAAV,UAAU,CAAqB;QAdxD,kBAAa,GAAG,IAAI,iDAAY,EAAE;QAgBtC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAChC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC;QAE9B,MAAM,WAAW,GAAG,SAAS,CAAC,cAAc,EAAE;QAC9C,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;QAE9D,MAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QACrD,IAAI,gBAAgB,EAAE;YAClB,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC;SAClC;IACL,CAAC;IAEM,QAAQ;QACX,IAAI,yEAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;SACzB;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,6DAAa,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACpF,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE;gBAC/B,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;aAC7B;QACL,CAAC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACrC,IAAI,KAAK,CAAC,IAAI,KAAK,+EAAa,CAAC,KAAK,EAAE;gBACpC,IAAI,CAAC,OAAO,GAAG,kDAAK,CAChB,qDAAQ,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,IAAI,CACpB,gEAAS,CAAC,CAAC,CAAC,EACZ,gEAAS,CAAC,GAAG,EAAE,CAAC,qDAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CACvE,EACD,qDAAQ,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CACxB,gEAAS,CAAC,CAAC,CAAC,EACZ,gEAAS,CAAC,GAAG,EAAE,CAAC,qDAAQ,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAC1E,CACJ,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;aAC/B;iBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,+EAAa,CAAC,MAAM,EAAE;gBAC5C,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;oBACtC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;iBAC7B;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,EAAE;oBAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;iBACnC;aACJ;QACL,CAAC,CAAC,CACL;QACD,wDAAwD;QACxD,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;SACnD;IACL,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAGM,QAAQ;QACX,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;IAC1B,CAAC;IAEM,UAAU;QACb,OAAO,CACH,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAC9B,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CACxF;IACL,CAAC;IAEM,WAAW;QACd,OAAO,CACH,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAC9B,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CACxF;IACL,CAAC;IAEM,UAAU;QACb,OAAO,CACH,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;YAC9B,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAClG;IACL,CAAC;CACJ;;YA7GQ,gFAAc;YAHd,wEAAW;YAJX,oEAAgB;YAMhB,kFAAe;YADf,iGAAsB;YAFtB,8FAAkB;YAKlB,kFAAe;YAVA,sDAAM;YACrB,mEAAQ;YAUR,uFAAiB;YACjB,8EAAc;4CAsBd,oDAAM,SAAC,yDAAW;;;uBA2DtB,0DAAY,SAAC,eAAe;;AA3EpB,YAAY;IAJxB,+DAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,gFAAiC;KACpC,CAAC;GACW,YAAY,CAoGxB;AApGwB;;;;;;;;;;;;;ACpBzB;AAAe,yGAA0C,kKAAkK,msBAAmsB,sDAAsD,mDAAmD,qCAAqC,qCAAqC,y5BAAy5B,sDAAsD,mDAAmD,qCAAqC,qCAAqC,yWAAyW,eAAe,yIAAyI,E;;;;;;;;;;;;;;;;;;;;;;;;ACA7mF;AACkB;AACkD;AAC/D;AACV;AACF;IAO7B,2BAA2B,SAA3B,2BAA2B;IAcpC,YAAoB,IAAgB,EAAS,SAA2B;QAApD,SAAI,GAAJ,IAAI,CAAY;QAAS,cAAS,GAAT,SAAS,CAAkB;QAVjE,cAAS,GAAG,KAAK;QACjB,kBAAa,GAAG,8EAAa;QAC7B,iBAAY,GAAG,6EAAY;QAC3B,cAAS,GAAG,0EAAS;QACrB,iBAAY,GAAG,6EAAY;QAC3B,iBAAY,GAAG,6EAAY;QAE1B,0BAAqB,GAAG,IAAI,4CAAO,EAAQ;QAC3C,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAEiC,CAAC;IAErE,QAAQ;QACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,qBAAqB;aACrB,IAAI,CACD,gEAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,kBAAkB,IAAI,CAAC,WAAW,CAAC,WAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CACrG;aACA,SAAS,CAAC,WAAW,CAAC,EAAE;YACrB,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW;QAC9C,CAAC,CAAC,CACT;QACD,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE;IACrC,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;CACJ;;YA5CQ,+DAAU;YAGV,oEAAgB;;;0BAUpB,mDAAK;;AADG,2BAA2B;IAJvC,+DAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,gGAAiD;KACpD,CAAC;GACW,2BAA2B,CAgCvC;AAhCuC;;;;;;;;;;;;;ACZxC;AAAe,wJAAyF,kLAAkL,iJAAiJ,aAAa,wCAAwC,cAAc,sQAAsQ,iDAAiD,+GAA+G,8NAA8N,uGAAuG,aAAa,ycAAyc,gCAAgC,qJAAqJ,sCAAsC,yNAAyN,6BAA6B,qFAAqF,yCAAyC,sLAAsL,eAAe,qFAAqF,WAAW,4cAA4c,0BAA0B,qGAAqG,mDAAmD,2FAA2F,E;;;;;;;;;;;;;;;;;;ACAltG;AAC6B;IAO1D,YAAY,SAAZ,YAAa,SAAQ,2DAAyB;IACvD;QACI,KAAK,EAAE;IACX,CAAC;CACJ;;AAJY,YAAY;IAFxB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;IAClC,mEAAW,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;GACpB,YAAY,CAIxB;AAJwB;;;;;;;;;;;;;ACRzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACN;AAG9B,MAAM,KAAK,GAAG,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC7C,MAAM,KAAK,GAAG,kCAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;AAExD,SAAS,gBAAgB,CAAC,QAAmB,EAAE,MAAM,GAAG,CAAC;IAC5D,OAAO,QAAQ,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE;AACrE,CAAC;AAEM,SAAS,eAAe,CAC3B,MAAuB,EACvB,YAAuB,EACvB,eAA0B,EAC1B,SAAgB,EAChB,QAAQ,GAAG,IAAI;IAEf,IAAI,YAAY,GAAG,qBAAqB,CAAC,YAAY,EAAE,eAAe,CAAC;IACvE,IAAI,YAAY,CAAC,IAAI,KAAK,eAAe,CAAC,IAAI,IAAI,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE;QAC/E,IAAI,QAAQ,EAAE;YACV,YAAY,GAAG,IAAI,mDAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC9F;aAAM;YACH,YAAY,GAAG,IAAI,mDAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,mDAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC/F;KACJ;IACD,OAAO,IAAI,mDAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;AAClE,CAAC;AAEM,SAAS,qBAAqB,CAAC,YAAuB,EAAE,eAA0B;IACrF,IAAI,CAAC,eAAe,IAAI,CAAC,YAAY,EAAE;QACnC,OAAO,IAAI,mDAAS,CAAC,CAAC,CAAC;KAC1B;IACD,OAAO,IAAI,mDAAS,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,YAAY,CAAC;AACrF,CAAC;;;;;;;;;;;;;AClCD;AAAe,4kBAA6gB,E;;;;;;;;;;;;;;;;;;;;;;;ACAld;AAC5C;AAC4B;AAEA;IAM7C,mBAAmB,SAAnB,mBAAmB;IAkB5B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAZzC,WAAM,GAAG,KAAK;QAEd,WAAM,GAAG,KAAK;QAEd,iBAAY,GAAG,EAAE;QAEjB,YAAO,GAAG,wEAAW,CAAC,OAAO;QAC7B,gBAAW,GAAG,wEAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE;IAKf,CAAC;IAEpD,IAAW,YAAY;QACnB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,kCAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE;SACzG;QACD,OAAO,IAAI,CAAC,aAAa;IAC7B,CAAC;IACD,IAAW,YAAY;QACnB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,kCAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE;SACzG;QACD,OAAO,IAAI,CAAC,aAAa;IAC7B,CAAC;IAED,IAAW,SAAS;;QAChB,OAAO,eAAe,UAAI,CAAC,IAAI,0CAAE,EAAE,aAAa,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;IAClF,CAAC;IAEM,WAAW,CAAC,OAAsB;QACrC,IAAI,OAAO,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY;SACxC;IACL,CAAC;IAED,IAAW,MAAM;QACb,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY;IAChH,CAAC;CACJ;;YApDQ,sEAAa;;;mBAOjB,mDAAK;mBAEL,mDAAK;qBAEL,mDAAK;qBAEL,mDAAK;2BAEL,mDAAK;;AATG,mBAAmB;IAJ/B,+DAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,wFAAyC;KAC5C,CAAC;GACW,mBAAmB,CA8C/B;AA9C+B;;;;;;;;;;;;;ACVhC;AAAe,+NAAgK,sCAAsC,iPAAiP,4CAA4C,0SAA0S,wCAAwC,uSAAuS,8CAA8C,wGAAwG,qCAAqC,4KAA4K,E;;;;;;;;;;;;;;;;;;ACA/5C;AACsB;IAG5D,mBAAmB,SAAnB,mBAAmB;IAC5B,YAAoB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAAG,CAAC;IAExC,SAAS,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC;IAC/D,CAAC;CACJ;;YATQ,sEAAY;;AAGR,mBAAmB;IAD/B,0DAAI,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;GACrB,mBAAmB,CAM/B;AAN+B;;;;;;;;;;;;;;;;;;;ACJ+C;AAC1C;IAKxB,cAAc,SAAd,cAAc;IAIvB,YAAoB,EAAc,EAAU,MAAc;QAAtC,OAAE,GAAF,EAAE,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEvD,WAAW;QACd,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ;qBACf,YAAY,EAAE;qBACd,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;qBACb,SAAS,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE;gBACjC,CAAC,CAAC;aACT;SACJ;IACL,CAAC;CACJ;;YAxBmB,wDAAU;YAAS,oDAAM;;;oBAOxC,mDAAK;;AADG,cAAc;IAH1B,+DAAS,CAAC;QACP,QAAQ,EAAE,SAAS;KACtB,CAAC;GACW,cAAc,CAkB1B;AAlB0B;;;;;;;;;;;;;ACN3B;AAAe,2GAA4C,4BAA4B,6MAA6M,oCAAoC,qCAAqC,+CAA+C,iCAAiC,wHAAwH,mCAAmC,oCAAoC,+CAA+C,gCAAgC,iJAAiJ,iLAAiL,mCAAmC,opBAAopB,yCAAyC,oIAAoI,mDAAmD,mMAAmM,kCAAkC,6oBAA6oB,yCAAyC,yGAAyG,mDAAmD,kPAAkP,oCAAoC,+BAA+B,iCAAiC,krBAAkrB,mDAAmD,iMAAiM,+BAA+B,sjBAAsjB,QAAQ,0KAA0K,QAAQ,iRAAiR,yCAAyC,iOAAiO,qCAAqC,moBAAmoB,eAAe,GAAG,+BAA+B,mFAAmF,eAAe,GAAG,+BAA+B,2TAA2T,yCAAyC,sMAAsM,qCAAqC,w/BAAw/B,yCAAyC,0NAA0N,iCAAiC,mhBAAmhB,+BAA+B,iPAAiP,yCAAyC,gHAAgH,qCAAqC,gHAAgH,4CAA4C,iHAAiH,sCAAsC,gLAAgL,oCAAoC,+wBAA+wB,yCAAyC,wSAAwS,8CAA8C,qlBAAqlB,yCAAyC,yJAAyJ,oDAAoD,inBAAinB,yCAAyC,kKAAkK,6DAA6D,grBAAgrB,yCAAyC,qMAAqM,iDAAiD,gkBAAgkB,oBAAoB,mFAAmF,oBAAoB,sQAAsQ,yCAAyC,mLAAmL,mDAAmD,qqBAAqqB,yCAAyC,qOAAqO,+CAA+C,kkBAAkkB,+BAA+B,ySAAyS,yCAAyC,6MAA6M,wDAAwD,8jBAA8jB,+BAA+B,sSAAsS,yCAAyC,2MAA2M,yDAAyD,0gBAA0gB,+BAA+B,oQAAoQ,yCAAyC,yNAAyN,qDAAqD,mrBAAmrB,yCAAyC,yLAAyL,qDAAqD,kpCAAkpC,4BAA4B,mtBAAmtB,2BAA2B,iSAAiS,yCAAyC,iPAAiP,oCAAoC,2kBAA2kB,yCAAyC,sMAAsM,6BAA6B,qrBAAqrB,yCAAyC,uLAAuL,uDAAuD,ksBAAksB,yCAAyC,yOAAyO,qCAAqC,mqBAAmqB,eAAe,GAAG,+BAA+B,mFAAmF,eAAe,GAAG,+BAA+B,mVAAmV,yCAAyC,8MAA8M,qCAAqC,yiCAAyiC,yCAAyC,wOAAwO,4DAA4D,u3BAAu3B,yCAAyC,8MAA8M,yDAAyD,whBAAwhB,+BAA+B,4SAA4S,yCAAyC,gPAAgP,iCAAiC,4nBAA4nB,yCAAyC,6LAA6L,qDAAqD,8vBAA8vB,yCAAyC,sIAAsI,kDAAkD,gLAAgL,oDAAoD,yPAAyP,mDAAmD,knBAAknB,yCAAyC,+gBAA+gB,iCAAiC,wLAAwL,kDAAkD,8kBAA8kB,yCAAyC,6KAA6K,kEAAkE,0lCAA0lC,4BAA4B,0rBAA0rB,2BAA2B,qSAAqS,yCAAyC,2KAA2K,qCAAqC,+BAA+B,mCAAmC,6BAA6B,E;;;;;;;;;;;;;;;;;;;;ACAt8qC;AACZ;IAO5D,iBAAiB,SAAjB,iBAAiB;;QAEnB,UAAK,GAAW,EAAE;QAET,gBAAW,GAAG,IAAI,0DAAY,EAAU;QAIjD,cAAS,GAAG,IAAI;QAEhB,cAAS,GAAG,IAAI;QAEhB,cAAS,GAAG,IAAI;QAEP,aAAQ,GAAG,IAAI,0DAAY,EAAS;QAM7C,kBAAa,GAAG,8EAAa;QAC7B,YAAO,GAAG,wEAAO;QAEjB,eAAU,GAAG,KAAK;IAiB7B,CAAC;IAfU,eAAe;QAClB,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;aAC5B;QACL,CAAC,CAAC;IACN,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,SAAS,GAAG,IAAI;IACzB,CAAC;IAEM,OAAO;QACV,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7G,CAAC;CACJ;;oBAvCI,mDAAK;0BAEL,oDAAM;4BAEN,mDAAK;wBAEL,mDAAK;wBAEL,mDAAK;wBAEL,mDAAK;uBAEL,oDAAM;8BAEN,mDAAK;yBAOL,mDAAK;;AAtBG,iBAAiB;IAJ7B,+DAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,qFAAsC;KACzC,CAAC;GACW,iBAAiB,CAwC7B;AAxC6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRkD;AAC1B;AACG;AACqB;AACjB;AACjB;AAC0B;AACN;AACpB;AACW;AACT;AACK;AACU;AACmB;AAC3B;AACyB;AAEvE,SAAS,0BAA0B,CAAC,WAAwB;IAC/D,OAAO,IAAI,8EAAmB,CAAC,IAAI,+DAAU,CAAC,WAAW,CAAC,EAAE,eAAe,EAAE,WAAW,GAAG,wDAAS,CAAC,KAAK,CAAC;AAC/G,CAAC;IAsCY,SAAS,SAAT,SAAS;CAAG;AAAZ,SAAS;IApCrB,8DAAQ,CAAC;QACN,YAAY,EAAE,CAAC,4DAAY,CAAC;QAC5B,OAAO,EAAE;YACL,uEAAa;YACb,4FAAuB;YACvB,0DAAW,CAAC,OAAO,CAAC;gBAChB,IAAI,EAAE,IAAI;aACb,CAAC;YACF,qEAAgB;YAChB,mEAAY;YACZ,8FAAmB;YACnB,iEAAU;YACV,qEAAgB;YAChB,mEAAe,CAAC,OAAO,CAAC;gBACpB,MAAM,EAAE;oBACJ,OAAO,EAAE,mEAAe;oBACxB,UAAU,EAAE,0BAA0B;oBACtC,IAAI,EAAE,CAAC,gEAAW,CAAC;iBACtB;aACJ,CAAC;YACF,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE;gBAC3C,OAAO,EAAE,IAAI;gBACb,0DAA0D;gBAC1D,+CAA+C;gBAC/C,oBAAoB,EAAE,0BAA0B;aACnD,CAAC;SACL;QACD,SAAS,EAAE;YACP;gBACI,OAAO,EAAE,0DAAY;gBACrB,QAAQ,EAAE,2EAAe;aAC5B;YACD,4FAAqB;SACxB;QACD,SAAS,EAAE,CAAC,4DAAY,CAAC;KAC5B,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACzDgD;AAEvB;AACa;IAM/C,yBAAyB,SAAzB,yBAAyB;IAiBlC,YAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAfnC,gBAAW,GAAiB,EAAE;QAErB,sBAAiB,GAAG,IAAI,0DAAY,EAAgB;QAE7D,uBAAkB,GAAiB,CAAC,eAAe,EAAE,eAAe,EAAE,gBAAgB,CAAC;QACvF,uBAAkB,GAAiB;YACtC,OAAO;YACP,aAAa;YACb,UAAU;YACV,QAAQ;YACR,aAAa;YACb,cAAc;YACd,QAAQ;SACX;IAE4C,CAAC;IAEvC,mBAAmB,CAAC,MAAkB,EAAE,OAAgB;QAC3D,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;SAChC;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,aAAa,KAAK,MAAM,CAAC;SACxF;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;IACjD,CAAC;IAEM,aAAa,CAAC,OAAmB,EAAE,OAAgB;QACtD,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;SACjC;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,aAAa,KAAK,OAAO,CAAC;SACzF;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;IACjD,CAAC;IAEM,kBAAkB,CAAC,UAAsB;QAC5C,OAAO,2DAAa,CAAC,UAAU,CAAC;IACpC,CAAC;CACJ;;YA9CQ,wEAAc;;;0BAOlB,mDAAK;gCAEL,oDAAM;;AAHE,yBAAyB;IAJrC,+DAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,8FAA+C;KAClD,CAAC;GACW,yBAAyB,CAwCrC;AAxCqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT0B;AACuD;AAC/D;AAChB;AACI;AACE;AACsB;AAYjC;AACqC;AACnB;AACA;AACb;AACqC;AACT;AAC5B;AACsC;AACrB;AACwB;AACL;AACA;AAClC;AACkB;AACoE;AACxC;AACtC;AACwC;AACR;AACoB;AACR;AAClB;AACT;AACA;AACA;AAC6B;AACX;AAC6B;AACjB;AAChC;AACH;AACM;AACK;AACvB;AACC;AACoB;AACxB;AACC;AACN;AACyB;AACiB;AAC9B;AACgD;AAC7B;AACkB;AAC3C;AACkC;AACP;AACgB;AACQ;AACpD;AACe;AACjB;AAC0C;AAChC;AACN;AACH;AAC2B;AACiB;AACN;AAC/B;AACA;AACG;AAanC;AACuD;AACd;AAE9D,MAAM,YAAY,GAAG;IACjB,4FAAqB;IACrB,+FAAsB;IACtB,uEAAiB;IACjB,0FAAoB;IACpB,0FAAoB;IACpB,wDAAU;IACV,8IAA+B;IAC/B,sGAAwB;IACxB,uEAA0B;IAC1B,wEAA2B;IAC3B,gGAAsB;IACtB,oEAAuB;IACvB,4GAA0B;IAC1B,oHAA4B;IAC5B,qGAA6B;IAC7B,0FAAoB;IACpB,iFAAmB;IACnB,iFAAiB;IACjB,iFAAiB;IACjB,mGAAuB;IACvB,8GAA0B;IAC1B,qEAAwB;IACxB,sEAAyB;IACzB,+EAAiB;IACjB,4EAAoB;IACpB,uFAAmB;IACnB,mEAAa;IACb,uFAAmB;IACnB,yFAAiB;IACjB,gEAAc;IACd,iEAAc;IACd,qFAAuB;IACvB,sEAAyB;IACzB,8DAAa;IACb,iFAAsB;IACtB,kEAAqB;IACrB,kEAAqB;IACrB,mEAAsB;IACtB,wEAA2B;IAC3B,kGAAsB;IACtB,qEAAwB;IACxB,oEAAgB;IAChB,oHAA4B;IAC5B,uFAAyB;IACzB,yGAAyB;IACzB,gGAAsB;IACtB,yGAAyB;IACzB,6DAAY;IACZ,4EAAmB;IACnB,2DAAW;IACX,+DAAa;IACb,gEAAc;IACd,4DAAY;IACZ,iHAAqB;IACrB,wGAAwB;IACxB,kGAAsB;IACtB,mEAAa;IACb,sEAAiB;IACjB,0FAAoB;IACpB,4EAAgB;IAChB,+GAA2B;IAC3B,gIAAgC;IAChC,wGAAwB;IACxB,wDAAU;IACV,8DAAa;IACb,6DAAY;IACZ,qEAAgB;CACnB;AAED,MAAM,OAAO,GAAG;IACZ,4DAAmB;IACnB,8EAAkB;IAClB,0DAAW;IACX,4DAAY;IACZ,oEAAc;IACd,sFAAuB;IACvB,uDAAS;IACT,2EAAgB;IAChB,4EAAiB;IACjB,yEAAc;IACd,8EAAmB;IACnB,+EAAoB;IACpB,6EAAkB;IAClB,2EAAgB;IAChB,6EAAkB;IAClB,4EAAiB;IACjB,kFAAiB;IACjB,mEAAiB;IACjB,yEAAuB;IACvB,8EAAmB;IACnB,gEAAe;IACf,oEAAe;CAClB;IA8BY,YAAY,SAAZ,YAAY;CAAG;AAAf,YAAY;IA5BxB,8DAAQ,CAAC;QACN,YAAY,EAAE,CAAC,GAAG,YAAY,CAAC;QAC/B,SAAS,EAAE;YACP;gBACI,OAAO,EAAE,sEAAiB;gBAC1B,QAAQ,EAAE,kFAAuB;gBACjC,KAAK,EAAE,IAAI;aACd;YACD;gBACI,OAAO,EAAE,sEAAiB;gBAC1B,QAAQ,EAAE,0EAAuB;gBACjC,KAAK,EAAE,IAAI;aACd;YACD,wDAAQ;YACR;gBACI,OAAO,EAAE,gEAAgB;gBACzB,QAAQ,EAAE,oEAAoB;aACjC;YACD;gBACI,OAAO,EAAE,kEAAiB;gBAC1B,QAAQ,EAAE;oBACN,iBAAiB,EAAE,GAAG,EAAE,CAAC,0IAAsB;iBAClD;aACJ;SACJ;QACD,OAAO,EAAE,CAAC,uDAAa,CAAC,OAAO,EAAE,EAAE,GAAG,OAAO,CAAC;QAC9C,OAAO,EAAE,CAAC,GAAG,YAAY,EAAE,GAAG,OAAO,EAAE,uDAAa,CAAC;KACxD,CAAC;GACW,YAAY,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7N+D;AACgB;AAChD;AACK;AACiD;AACxC;AAC9B;AACwB;AACgC;AACV;AACG;AAC9B;AAE3D,IAAY,KAEX;AAFD,WAAY,KAAK;IACb,4BAAmB;AACvB,CAAC,EAFW,KAAK,KAAL,KAAK,QAEhB;AAMD;;GAEG;IAMU,aAAa,SAAb,aAAa;IAyCtB,YACc,IAAgB,EAChB,QAAkB,EAClB,cAAiC,EACjC,KAAqB,EACxB,MAAc,EACd,OAAuB,EACvB,YAAiC;QAN9B,SAAI,GAAJ,IAAI,CAAY;QAChB,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAmB;QACjC,UAAK,GAAL,KAAK,CAAgB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;QACvB,iBAAY,GAAZ,YAAY,CAAqB;QA/CrC,UAAK,GAAW,KAAK,CAAC,OAAO;QAG7B,WAAM,GAAG,EAAE;QAEX,cAAS,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAEhD,WAAM,GAAG,CAAC;QACV,UAAK,GAAG,CAAC;QAET,gBAAW,GAAU,EAAE;QACvB,gBAAW,GAAG,IAAI,4CAAO,EAAQ;QACjC,oBAAe,GAAG,IAAI,4CAAO,EAAQ;QACrC,gBAAW,GAAG,IAAI,4CAAO,EAAQ;QACjC,eAAU,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC;QAChD,6BAAwB,GAAG,IAAI;QAC/B,uCAAkC,GAAG,IAAI;QAEzC,eAAU,GAAG,uDAAU;QAEvB,WAAM,GAAG,uEAAM;QACf,aAAQ,GAAG,2EAAQ;QACnB,gBAAW,GAAG,4EAAW;QACzB,kBAAa,GAAG,8EAAa;QAC7B,eAAU,GAAG,2EAAU;QACvB,gBAAW,GAAG,4EAAW;QAUtB,iBAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAChC,iBAAY,GAAe,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAClD,iBAAY,GAAU,EAAE;QACxB,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAUzC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY;QAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY;QAC9B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAC/B,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;oBAClD,wCAAwC;oBACxC,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;wBAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC;qBACrE;iBACJ;aACJ;SACJ;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAC1C,iEAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAC5B,kEAAU,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;YAC3B,OAAO,uDAAU,CAAC,GAAG,CAAC;QAC1B,CAAC,CAAC,EACF,2DAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,CAAC,KAAK;gBACN,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;oBACrD,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAE;oBAC1C,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;YACxC,MAAM,WAAW,GAAmD;gBAChE,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS;gBAClD,OAAO,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS;gBACvE,KAAK,EAAE,CAAC,sDAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;gBACnG,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,SAAS;gBAChC,KAAK,EAAE,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;aAC/D;YACD,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC/C,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjD,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,sDAAO,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;wBAC5E,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBAChD,CAAC,CAAC,SAAS;iBAClB;aACJ;YACD,mEAAmE;YACnE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QACjC,CAAC,CAAC,EACF,2DAAG,CAAC,QAAQ,CAAC,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAK,CAAC,MAAM,CAAC;QAC7D,CAAC,CAAC,EACF,2DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAC/D,2DAAG,CAAC,GAAG,EAAE;YACL,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;QAC/B,CAAC,CAAC,CACL;QACD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,IAAI,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBACvB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAE;aACxC;YACD,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;aACzD;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACZ,IAAI,CAAC,IAAI,GAAG,CAAC;aAChB;YACD,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACtB,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC;aAC1D;YACD,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gBACrB,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAE,CAAU;aACjE;YACD,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gBACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACnE;YACD,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;oBACjB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACjE,gDAAgD;oBAChD,IAAI,IAAI,CAAC,kCAAkC,EAAE;wBACzC,IAAI,CAAC,wBAAwB,GAAG,KAAK;qBACxC;iBACJ;aACJ;QACL,CAAC,CAAC;IACN,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,IAAI;QACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,MAAM,EAAE;YACrC,OAAO,EAAE,UAAU;YACnB,MAAM,EAAE,IAAI,CAAC,kBAAkB,EAAE;SACpC,CAAC;IACN,CAAC;IAEM,kBAAkB,CAAC,WAA+B,EAAE;QACvD,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAC/G,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC3B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAClD;SACJ;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,4EAA4E;YAC5E,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACjE;QACD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,EAAE;YAC5C,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;SAC3C;QACD,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YAC/C,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC9D,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE;gBACzB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC;aACvC;SACJ;QACD,OAAO,MAAM;IACjB,CAAC;IAED,qCAAqC;IAC9B,QAAQ,CAAC,CAAa,EAAE,IAAgB,EAAE,UAA2B,EAAE;QAC1E,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC;SAC3D;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,kBAC/C,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,eAAe,IACzB,OAAO,EACZ;QACF,KAAK,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACjD,IAAI,KAAK,CAAC,iBAAiB,CAAC,MAAM,EAAE;YAChC,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE;gBAC1C,KAAK,CAAC,KAAK,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YAC3B,CAAC,CAAC;SACL;QACD,IAAI,KAAK,CAAC,iBAAiB,CAAC,QAAQ,EAAE;YAClC,KAAK,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;gBAC5C,KAAK,CAAC,KAAK,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YAC3B,CAAC,CAAC;SACL;IACL,CAAC;IAEM,aAAa,CAAC,WAAqB;QACtC,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,WAAW,EAAE;YACpC,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,YAAY;iBACZ,IAAI,CAAC;gBACF,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE,8HAA8H;gBACpI,WAAW,EAAE,KAAK;gBAClB,YAAY,EAAE,SAAS;gBACvB,UAAU,EAAE,IAAI;gBAChB,WAAW,EAAE,SAAS;aACzB,CAAC;iBACD,IAAI,CAAC,8DAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,kFAAkB,CAAC,SAAS,CAAC,CAAC;iBAC/D,SAAS,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,YAAY,EAAE;YACvB,CAAC,CAAC,CACT;SACJ;aAAM;YACH,IAAI,CAAC,YAAY,EAAE;SACtB;IACL,CAAC;IAEM,YAAY;QACf,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,IAAI;aACJ,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;YAClE,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,MAAM,EAAE,mEAAmE;aAC9E,CAAC;YACF,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACvB,CAAC;aACD,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE;gBACvD,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC;aACnD;iBAAM;gBACH,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACtD,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;gBACxC,IAAI,CAAC,IAAI,GAAG,IAAI;gBAChB,MAAM,kBAAkB,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC;gBACtE,IAAI,CAAC,QAAQ,GAAG,kBAAkB;oBAC9B,CAAC,CAAC,kBAAkB,CAAC,SAAS,CACxB,kBAAkB,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAC3C,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAChC;oBACH,CAAC,CAAC,aAAa;gBACnB,IAAI,CAAC,KAAK,EAAE;gBACZ,UAAU,CAAC,GAAG,EAAE;oBACZ,8DAA8D;oBAC9D,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC;gBACpC,CAAC,EAAE,GAAG,CAAC;aACV;QACL,CAAC,CAAC,CACT;IACL,CAAC;IAED,4BAA4B;IACrB,MAAM,CAAC,IAAa;QACvB,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC,IAAI,GAAG,IAAI;SACnB;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK;QAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE;IAC/B,CAAC;IAED;;;;OAIG;IACI,IAAI,CAAC,KAAe,EAAE,MAAM,GAAG,KAAK;QACvC,6CAA6C;QAC7C,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;YAChC,OAAM;SACT;QACD,yDAAyD;QACzD,MAAM,KAAK,GAAG,wDAAS,CAAC,IAAI,CAAC,KAAK,EAAE,sDAAO,CAAC,KAAK,CAAC,CAAC;QACnD,iCAAiC;QACjC,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,mDAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,MAAM,EAAE;YACpD,KAAK,GAAG,CAAC,GAAG,KAAK,EAAE,KAAK,CAAC;SAC5B;aAAM;YACH,KAAK,GAAG,CAAC,GAAG,KAAK,EAAE,MAAM,CAAC;SAC7B;QAED,IAAI,CAAC,MAAM,EAAE;YACT,sBAAsB;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY;SAC9D;aAAM;YACH,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBACd,0CAA0C;gBAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpB,qDAAqD;oBACrD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;iBAC9B;qBAAM;oBACH,8CAA8C;oBAC9C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK;iBAC5B;aACJ;iBAAM;gBACH,wCAAwC;gBACxC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;aACzB;SACJ;QACD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAClB,CAAC;IAEM,eAAe,CAAC,KAAe;QAClC,OAAO,CAAC,CAAC,mDAAI,CAAC,IAAI,CAAC,KAAK,EAAE,sDAAO,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;IAEM,mBAAmB,CAAC,KAAe;QACtC,MAAM,YAAY,GAAG,mDAAI,CAAC,IAAI,CAAC,KAAK,EAAE,sDAAO,CAAC,KAAK,CAAC,CAAC;QACrD,OAAO,mDAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAEM,aAAa,CAAC,KAAY;QAC7B,OAAO,sDAAO,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC;IAC3C,CAAC;IAEM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY;IAC5B,CAAC;IAES,eAAe;QACrB,OAAO,kDAAK,CAAC,+CAAE,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oEAAY,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC;IACjH,CAAC;IAES,OAAO,CAAC,IAAS;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;IACnD,CAAC;IAEe,WAAW,CAAC,WAA2D;;YACnF,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO;YAC7B,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE;gBAC3B,UAAU,EAAE,IAAI,CAAC,KAAK;gBACtB,WAAW;gBACX,mBAAmB,EAAE,OAAO;aAC/B,CAAC;YACF,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;QAC9B,CAAC;KAAA;IAEO,gBAAgB,CAAC,KAAe;QACpC,MAAM,OAAO,GAA8C,EAAE;QAC7D,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;YACnB,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;YAChC,OAAO,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;SACjC;QACD,OAAO,OAAO;IAClB,CAAC;IAEO,gBAAgB,CAAC,KAAgD;QACrE,MAAM,OAAO,GAAa,EAAE;QAC5B,KAAK,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACjC,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;gBACxD,SAAQ;aACX;YACD,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;SAC1E;QACD,OAAO,OAAO;IAClB,CAAC;CACJ;;YAhYQ,+DAAU;YAKV,mEAAQ;YAJiB,+DAAiB;YAC1C,8DAAc;YAAE,sDAAM;YAStB,yEAAc;YADM,mFAAmB;;AAmBnC,aAAa;IALzB,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,eAAe,EAAE,qEAAuB,CAAC,MAAM;QAC/C,QAAQ,EAAE,EAAE;KACf,CAAC;GACW,aAAa,CAmWzB;AAnWyB;;;;;;;;;;;;;;;;;;;;AC7Be;AAC+D;IAM3F,yBAAyB,uCAAzB,yBAAyB;IAC3B,QAAQ,CAAC,OAAwB;QACpC,MAAM,QAAQ,GAAG,yDAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC7C,IAAI,QAAQ,KAAK,IAAI,EAAE;YACnB,OAAO,IAAI;SACd;QACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAClC,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE;SAClC;QACD,OAAO,IAAI;IACf,CAAC;CACJ;AAXY,yBAAyB;IAJrC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,2BAAyB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC/F,CAAC;GACW,yBAAyB,CAWrC;AAXqC;;;;;;;;;;;;;;;;;;;;ACPmC;IAO5D,aAAa,SAAb,aAAa;;QAEN,YAAO,GAAG,YAAY;IAC1C,CAAC;CAAA;;oBAFI,mDAAK;sBACL,mDAAK;;AAFG,aAAa;IALzB,+DAAS,CAAC;QACP,QAAQ,EAAE,MAAM;QAChB,iFAAkC;QAClC,eAAe,EAAE,qEAAuB,CAAC,MAAM;KAClD,CAAC;GACW,aAAa,CAGzB;AAHyB;;;;;;;;;;;;;ACP1B;AAAe,wLAAyH,kCAAkC,gEAAgE,6BAA6B,kFAAkF,gCAAgC,gEAAgE,mTAAmT,kFAAkF,wCAAwC,gEAAgE,wUAAwU,kJAAkJ,qSAAqS,kFAAkF,4CAA4C,gEAAgE,uVAAuV,kFAAkF,wCAAwC,gEAAgE,2UAA2U,yIAAyI,sCAAsC,gEAAgE,2CAA2C,uIAAuI,gCAAgC,gEAAgE,0CAA0C,kFAAkF,mCAAmC,gEAAgE,mCAAmC,kFAAkF,oCAAoC,gEAAgE,uHAAuH,kFAAkF,+CAA+C,gEAAgE,wDAAwD,kFAAkF,uDAAuD,gEAAgE,qDAAqD,kFAAkF,wCAAwC,gEAAgE,iDAAiD,6DAA6D,E;;;;;;;;;;;;;;;;;;;;ACAr+I;AACmD;AAClC;IAM7C,2BAA2B,yCAA3B,2BAA2B;IAC7B,QAAQ,CAAC,OAAwB;QACpC,IAAI,CAAC,qEAAe,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,6DAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE;YAC/F,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE;SACpC;QACD,OAAO,IAAI;IACf,CAAC;CACJ;AAPY,2BAA2B;IAJvC,+DAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,6BAA2B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KACjG,CAAC;GACW,2BAA2B,CAOvC;AAPuC;;;;;;;;;;;;;;;;;;;ACRE;AAGyB;IAGtD,qBAAqB,SAArB,qBAAqB;IAC9B,YAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;IAAG,CAAC;IACxC,OAAO;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,UAAU;IAClF,CAAC;CACJ;;YARQ,+EAAc;;AAGV,qBAAqB;IADjC,gEAAU,EAAE;GACA,qBAAqB,CAKjC;AALiC;;;;;;;;;;;;;;;;;;;ACNiB;AACe;IAGrD,YAAY,SAAZ,YAAY;IACrB,YAAoB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAAG,CAAC;IAExC,SAAS,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC;IACxD,CAAC;CACJ;;YATQ,sEAAY;;AAGR,YAAY;IADxB,0DAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;GACd,YAAY,CAMxB;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;ACJiB;AACW;AAChB;AACM;AACK;AAE+C;AAmB/F,IAAY,kBAIX;AAJD,WAAY,kBAAkB;IAC1B,6CAAuB;IACvB,6CAAuB;IACvB,6CAAuB;AAC3B,CAAC,EAJW,kBAAkB,KAAlB,kBAAkB,QAI7B;IAKY,mBAAmB,SAAnB,mBAAmB;IAC5B,YAAoB,KAAe;QAAf,UAAK,GAAL,KAAK,CAAU;IAAG,CAAC;IAGhC,IAAI,CAAC,OAAiC;QACzC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,2GAA0B,EAAE;YACtD,WAAW,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YACxD,IAAI,EAAE,IAAI;SACb,CAAC;QACF,MAAM,aAAa,GAAG,KAAK,CAAC,iBAA+C;QAC3E,2DAAY,CAAC,aAAa,EAAE,OAAO,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,CACzD,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAC/D;QACD,MAAM,SAAS,GAAG,CAAC,MAA0B,EAAqD,EAAE,CAChG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM;QAC/D,OAAO,iDAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAC1B,0DAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,EACpG,iEAAU,CAAC,GAAG,EAAE,CAAC,+CAAE,CAAC,SAAS,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAChE;IACL,CAAC;CACJ;;YArDQ,mEAAQ;;AAiCJ,mBAAmB;IAH/B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,mBAAmB,CAoB/B;AApB+B;;;;;;;;;;;;;AClChC;AAAe,8SAA+O,yDAAyD,E;;;;;;;;;;;;;;;;;;;ACApQ;AACf;IAGvB,aAAa,SAAb,aAAa;IACf,SAAS,CAAC,IAAY,EAAE,KAAa,EAAE,aAAqB,CAAC;QAChE,OAAO,IAAI,mDAAS,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;IAChH,CAAC;CACJ;AAJY,aAAa;IADzB,0DAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;GACf,aAAa,CAIzB;AAJyB;;;;;;;;;;;;;;;;;;;;ACJ+D;AACjB;IAY3D,oBAAoB,kCAApB,oBAAoB;IAG7B,YAAoB,QAAmB,EAAU,OAAmB;QAAhD,aAAQ,GAAR,QAAQ,CAAW;QAAU,YAAO,GAAP,OAAO,CAAY;QAgC5D,cAAS,GAAG,CAAC,CAAM,EAAE,EAAE;YAC3B,oBAAoB;QACxB,CAAC;IAlCsE,CAAC;IAEjE,WAAW;QACd,gBAAgB;IACpB,CAAC;IAEM,UAAU,CAAC,KAAU;QACxB,MAAM,eAAe,GAAG,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK;QAC1E,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,EAAE,eAAe,CAAC;IACnF,CAAC;IAGM,OAAO,CAAC,KAAU;QACrB,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;YAC1B,IAAI,CAAC,SAAS,GAAG,KAAK;YACtB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC;YACrE,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;SAC9C;IACL,CAAC;IAEM,gBAAgB,CAAC,EAAuB;QAC3C,IAAI,CAAC,SAAS,GAAG,EAAE;IACvB,CAAC;IAEM,iBAAiB;QACpB,qBAAqB;IACzB,CAAC;IAEM,gBAAgB,CAAC,UAAmB;QACvC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC;IACjF,CAAC;CAKJ;;YAnDwD,uDAAS;YAA9C,wDAAU;;;sBA2BzB,0DAAY,SAAC,OAAO,EAAE,CAAC,qBAAqB,CAAC;;AAdrC,oBAAoB;IAVhC,+DAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,SAAS,EAAE;YACP;gBACI,OAAO,EAAE,gEAAiB;gBAC1B,WAAW,EAAE,sBAAoB;gBACjC,KAAK,EAAE,IAAI;aACd;SACJ;KACJ,CAAC;GACW,oBAAoB,CAsChC;AAtCgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbQ;AACD;AAC8B;AACY;AAC5B;AACnB;AACwB;AACC;AACF;IAQ7C,sBAAsB,SAAtB,sBAAsB;IAM/B,YACW,WAA2B,EAC1B,MAAc,EACd,WAAwB,EACxB,OAAuB,EACvB,MAAqB,EACtB,SAA2B;QAL3B,gBAAW,GAAX,WAAW,CAAgB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAe;QACtB,cAAS,GAAT,SAAS,CAAkB;QAX/B,wBAAmB,GAAG,oFAAmB;QAEzC,oBAAe,GAAG,KAAK;QACtB,kBAAa,GAAG,IAAI,iDAAY,EAAE;IASvC,CAAC;IAES,gBAAgB;;YACzB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC1B,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;KAAA;IAEY,WAAW;;YACpB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YACxB,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC;KAAA;IAEM,MAAM;QACT,IAAI,CAAC,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CACjE,GAAG,EAAE;YACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;QACtF,CAAC,EACD,GAAG,EAAE;YACD,IAAI,CAAC,eAAe,GAAG,KAAK;QAChC,CAAC,CACJ,CACJ;IACL,CAAC;CACJ;;YAnDQ,yEAAc;YAFd,sDAAM;YAKN,uEAAW;YACX,wEAAc;YACd,uEAAa;YAJb,oEAAgB;;AAYZ,sBAAsB;IAJlC,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,4FAA6C;KAChD,CAAC;GACW,sBAAsB,CAsClC;AAtCkC;AAwC5B,SAAS,iBAAiB,CAAC,QAAkB,EAAE,KAAoB;IACtE,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,sBAAsB,EAAE;QAChD,WAAW,EAAE,eAAe;KAC/B,CAAC;IACF,KAAK,CAAC,iBAAiB,CAAC,KAAK,GAAG,KAAK;IACrC,OAAO,KAAK;AAChB,CAAC;;;;;;;;;;;;;AC9DD;AAAe,6SAA8O,wCAAwC,2BAA2B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxR;AACiB;AACyB;AACpB;AACH;AAC8B;AACkB;AAChD;AACyC;AACb;AACf;AACS;AAC5B;AACJ;AACU;IAkB9C,UAAU,SAAV,UAAU;CAAG;AAAb,UAAU;IAhBtB,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,wEAAe;YACf,wEAAe;YACf,wHAA4B;YAC5B,sGAAsB;YACtB,iHAAyB;YACzB,mEAAa;YACb,yEAAe;YACf,+FAAoB;YACpB,qGAAyB;SAC5B;QACD,OAAO,EAAE,CAAC,wEAAe,EAAE,wEAAe,EAAE,mEAAa,EAAE,yEAAe,CAAC;QAC3E,SAAS,EAAE,CAAC,sFAAkB,EAAE,+DAAW,CAAC;QAC5C,OAAO,EAAE,CAAC,kEAAY,EAAE,0EAAc,EAAE,2FAAkB,CAAC;KAC9D,CAAC;GACW,UAAU,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChC0B;AAC0D;AAEtE;AAC+D;AAElD;AACE;IAMvC,oBAAoB,SAApB,oBAAoB;IAsC7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAlCpB,kBAAa,GAAG,IAAI,0DAAY,EAAY;QAIrD,YAAO,GAAG,KAAK;QACtB,6FAA6F;QAEtF,eAAU,GAAG,IAAI;QAEjB,aAAQ,GAAG,KAAK;QAEhB,qBAAgB,GAAG,IAAI;QAGvB,0BAAqB,GAAG,gEAAqB;QAC7C,cAAS,GAAG,KAAK;QAGjB,uBAAkB,GAAG,IAAI,0DAAY,EAAU;QAC/C,iBAAY,GAAsB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CACjE,2EAAoB,EAAE,EACtB,mEAAY,CAAC,GAAG,CAAC,EACjB,gEAAS,CAAC,IAAI,CAAC,EAAE,CACb,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;YACnB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,SAAS,EAAE;gBAC5B,MAAM,EAAE;oBACJ,MAAM,EAAE,IAAI;iBACf;aACJ,CAAC;YACJ,CAAC,CAAC,+CAAE,CAAC,EAAE,CAAC,CACf,EACD,iEAAU,CAAC,GAAG,EAAE,CAAC,+CAAE,CAAC,EAAE,CAAC,CAAC,CAC3B;IAEsC,CAAC;IAEjC,eAAe;QAClB,UAAU,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QACzC,CAAC,CAAC;IACN,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,EAAS;SAC3B;QACD,IAAI,CAAC,gBAAgB,EAAE;IAC3B,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,SAAS,GAAG,IAAI;IACzB,CAAC;IAEM,OAAO;QACV,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;IAC5B,CAAC;IAEM,UAAU,CAAC,KAAU;QACxB,IAAI,KAAK,IAAI,KAAK,CAAC,qBAAqB,IAAI,KAAK,CAAC,qBAAqB,CAAC,SAAS,EAAE;YAC/E,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,qBAAqB,CAAC,SAAS;SAC5D;QACD,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI;YACpB,IAAI,CAAC,IAAI;iBACJ,GAAG,CAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC;iBACrC,IAAI,CACD,+DAAQ,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,QAAQ,GAAG,KAAK;YACzB,CAAC,CAAC,CACL;iBACA,SAAS,CAAC,OAAO,CAAC,EAAE;gBACjB,MAAM,OAAO,GAAG,CAAC,IAAY,EAAE,EAAE,CAC7B,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,SAAc,EAAE,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACvF,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI;gBAChD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI;gBAClF,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,OAAO,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI;gBAC3F,IAAI,CAAC,OAAO,CAAC,KAAK;oBACd,CAAC,OAAO,CAAC,6BAA6B,CAAC,IAAI,OAAO,CAAC,6BAA6B,CAAC,CAAC,SAAS,CAAC;wBAC5F,IAAI;gBACR,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI;gBACpF,IAAI,CAAC,gBAAgB,EAAE;gBACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACzC,CAAC,CAAC;SACT;aAAM,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI;YACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;SACxC;IACL,CAAC;IAEM,gBAAgB;QACnB,IAAI,CAAC,YAAY,GAAG,sEAAgB,CAAC,IAAI,CAAC,OAAO,CAAC;IACtD,CAAC;CACJ;;YA7GQ,+DAAU;;;sBAcd,mDAAK;4BAEL,oDAAM;qBAEN,mDAAK;sBAEL,mDAAK;yBAGL,mDAAK;uBAEL,mDAAK;+BAEL,mDAAK;mBAEL,uDAAS,SAAC,aAAa;;AAhBf,oBAAoB;IAJhC,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,yFAA0C;KAC7C,CAAC;GACW,oBAAoB,CAgGhC;AAhGgC;;;;;;;;;;;;;ACbjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACR;AACA;AACM;AACE;AACE;AACJ;AACF;AACQ;AACV;AACW;;;;;;;;;;;;;;;;;;;;ACVrC;AAC+D;IAY3F,wBAAwB,sCAAxB,wBAAwB;IAC1B,QAAQ,CAAC,OAAwB;QACpC,MAAM,QAAQ,GAAG,yDAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC7C,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC7C,OAAO,IAAI;SACd;QACD,wCAAwC;QACxC,OAAO,6CAA6C,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;IACtG,CAAC;CACJ;AATY,wBAAwB;IAVpC,+DAAS,CAAC;QACP,QAAQ,EAAE,mEAAmE;QAC7E,SAAS,EAAE;YACP;gBACI,OAAO,EAAE,4DAAa;gBACtB,WAAW,EAAE,0BAAwB;gBACrC,KAAK,EAAE,IAAI;aACd;SACJ;KACJ,CAAC;GACW,wBAAwB,CASpC;AAToC;;;;;;;;;;;;;;;;;;;;;;ACbY;AACP;AAEW;AAEiB;AACxB;IAGjC,cAAc,SAAd,cAAc;IACvB,YAAsB,KAAmB,EAAU,OAAuB,EAAU,IAAgB;QAA9E,UAAK,GAAL,KAAK,CAAc;QAAU,YAAO,GAAP,OAAO,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjG,iBAAiB;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAC/B,2DAAI,CAAC,CAAC,CAAC,EACP,gEAAS,CAAC,IAAI,CAAC,EAAE,CACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,UAAU,IAAI,CAAC,EAAE,UAAU,EAAE;YACjD,MAAM,EAAE;gBACJ,KAAK,EAAE,IAAI;aACd;SACJ,CAAC,CACL,EACD,0DAAG,CAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;QAC3B,CAAC,CAAC,CACL;IACL,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;IACvD,CAAC;CACJ;;YAzBQ,2DAAY;YADZ,+EAAc;YALd,+DAAU;;AASN,cAAc;IAD1B,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;GACtB,cAAc,CAsB1B;AAtB0B;;;;;;;;;;;;;ACT3B;AAAe,oGAAqC,oFAAoF,eAAe,uCAAuC,saAAsa,aAAa,+FAA+F,0EAA0E,GAAG,+BAA+B,keAAke,gFAAgF,oEAAoE,UAAU,yBAAyB,8CAA8C,E;;;;;;;;;;;;;;;;;;;;;ACAn9C;AAC0C;AAE7C;IAMhC,iBAAiB,SAAjB,iBAAiB;;QAInB,YAAO,GAAG,IAAI;QACd,cAAS,GAAG,0EAAS;QACrB,kBAAa,GAAG,8EAAa;QAC7B,kBAAa,GAAG,8EAAa;QAC7B,gBAAW,GAAG,yDAAW;IACpC,CAAC;CAAA;;mBARI,mDAAK;sBAEL,mDAAK;;AAHG,iBAAiB;IAJ7B,+DAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,sFAAuC;KAC1C,CAAC;GACW,iBAAiB,CAS7B;AAT6B;;;;;;;;;;;;;ACT9B;AAAe,8HAA+D,SAAS,sHAAsH,+HAA+H,gBAAgB,iQAAiQ,4BAA4B,+JAA+J,cAAc,oiBAAoiB,8BAA8B,gQAAgQ,eAAe,yPAAyP,cAAc,0BAA0B,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr1D;AAEL;AACH;AACxB;AACU;AACQ;AACyB;AACtB;IAM3C,6BAA6B,SAA7B,6BAA6B;IAYtC,YAAmB,KAAqB,EAAU,YAA0B,EAAU,OAAuB;QAA1F,UAAK,GAAL,KAAK,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,YAAO,GAAP,OAAO,CAAgB;QAJtG,sBAAiB,GAAG,KAAK;QACzB,cAAS,GAAG,KAAK;QACjB,gBAAW,GAAG,4EAAW;IAEgF,CAAC;IAE1G,QAAQ;QACX,sDAAsD;QACtD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI;SAChC;IACL,CAAC;IAEM,SAAS;QACZ,OAAO,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK;IACvD,CAAC;IAEM,eAAe;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,OAAO,IAAI,CAAC,YAAY;aACnB,OAAO,CAAC;YACL,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ;YACjE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3E,aAAa,EAAE,IAAI,CAAC,aAAa;SACpC,CAAC;aACD,IAAI,CACD,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,SAAS,GAAG,KAAK;QAC1B,CAAC,CAAC,EACF,iEAAU,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,KAAK,CAAC,IAAI,KAAK,qBAAqB,EAAE;gBACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI;gBAC7B,IAAI,CAAC,KAAK,GAAG,SAAS;aACzB;iBAAM;gBACH,IAAI,CAAC,KAAK,GAAG,yDAAU,CACnB,KAAK,CAAC,IAAI,KAAK,uBAAuB;oBAClC,CAAC,CAAC,0CAA0C;oBAC5C,CAAC,CAAC,KAAK,CAAC,OAAO,CACtB;aACJ;YACD,OAAO,uDAAU,CAAC,KAAK,CAAC;QAC5B,CAAC,CAAC,CACL;IACT,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC5E,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,QAAQ,GAAG,SAAS;QACzB,IAAI,CAAC,aAAa,GAAG,SAAS;QAC9B,IAAI,CAAC,KAAK,GAAG,SAAS;QACtB,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;SAChC;IACL,CAAC;CACJ;;YA7EQ,yEAAc;YAKd,oEAAY;YADZ,wEAAc;;;2BAQlB,uDAAS,SAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;oBAI1C,mDAAK;;AALG,6BAA6B;IAJzC,+DAAS,CAAC;QACP,QAAQ,EAAE,wBAAwB;QAClC,yFAA0C;KAC7C,CAAC;GACW,6BAA6B,CAkEzC;AAlEyC;;;;;;;;;;;;;ACd1C;AAAe,2iCAA4+B,+BAA+B,uIAAuI,0OAA0O,qCAAqC,+UAA+U,yBAAyB,MAAM,UAAU,wBAAwB,80CAA80C,4BAA4B,w6BAAw6B,iBAAiB,iEAAiE,cAAc,8KAA8K,wCAAwC,6JAA6J,wJAAwJ,iIAAiI,6BAA6B,+BAA+B,qFAAqF,E;;;;;;;;;;;;;;;;;ACA55J;IAGtC,gBAAgB,SAAhB,gBAAgB;IAClB,SAAS,CAAC,KAAU;QACvB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,OAAO,KAAK;SACf;QACD,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,yBAAyB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACvF,CAAC;CACJ;AAPY,gBAAgB;IAD5B,0DAAI,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;GAClB,gBAAgB,CAO5B;AAP4B;;;;;;;;;;;;;ACH7B;AAAe,yKAA0G,aAAa,0DAA0D,8BAA8B,wBAAwB,gEAAgE,wBAAwB,8DAA8D,2CAA2C,GAAG,iBAAiB,GAAG,mBAAmB,sFAAsF,qCAAqC,8EAA8E,gCAAgC,6BAA6B,E;;;;;;;;;;;;;;;;;;;ACA7rB;AACM;IAKnC,eAAe,6BAAf,eAAe;IAIxB,YAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAE3B,MAAM;QACT,mCAAmC;QACnC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC;QACpD,IAAI,CAAC,MAAM,EAAE;YACT,OAAM;SACT;QACD,IAAI,MAAM,CAAC,UAAU,GAAG,iBAAe,CAAC,aAAa,EAAE;YACnD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBACxB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,OAAO;gBACtC,MAAM,CAAC,OAAO,GAAG,SAAS,iBAAe,CAAC,aAAa,mBAAmB;aAC7E;SACJ;aAAM;YACH,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACvB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB;gBACtC,IAAI,CAAC,gBAAgB,GAAG,SAAS;aACpC;SACJ;IACL,CAAC;CACJ;AAvB0B,6BAAa,GAAG,GAAG;;YANrC,8DAAI;;AAKA,eAAe;IAH3B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,eAAe,CAwB3B;AAxB2B;;;;;;;;;;;;;ACN5B;AAAe,6FAA8B,0BAA0B,+rBAA+rB,uCAAuC,iLAAiL,uCAAuC,6CAA6C,GAAG,aAAa,2IAA2I,6BAA6B,4GAA4G,kCAAkC,GAAG,aAAa,wVAAwV,uCAAuC,2KAA2K,wCAAwC,6CAA6C,GAAG,aAAa,2IAA2I,6BAA6B,6GAA6G,kCAAkC,GAAG,aAAa,oEAAoE,E;;;;;;;;;;;;;;;;;;;ACAx3E;AAE1C,IAAY,eAGX;AAHD,WAAY,eAAe;IACvB,8BAAW;IACX,2CAAwB;AAC5B,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;AAED,IAAY,aAGX;AAHD,WAAY,aAAa;IACrB,6BAAY;IACZ,4CAA2B;AAC/B,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;IAGY,WAAW,SAAX,WAAW;;QACb,cAAS,GAAoB,eAAe,CAAC,MAAM;QAEnD,YAAO,GAAkB,aAAa,CAAC,OAAO;IAKzD,CAAC;IAHG,IAAW,KAAK;QACZ,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;IACnD,CAAC;CACJ;AARY,WAAW;IADvB,gEAAU,EAAE;GACA,WAAW,CAQvB;AARuB;;;;;;;;;;;;;ACbxB;AAAe,sHAAuD,4BAA4B,wKAAwK,oCAAoC,8LAA8L,qBAAqB,2BAA2B,qCAAqC,kIAAkI,6BAA6B,4fAA4f,yCAAyC,6HAA6H,qBAAqB,yCAAyC,2BAA2B,4HAA4H,6BAA6B,odAAod,yCAAyC,sKAAsK,qBAAqB,6CAA6C,qCAAqC,iDAAiD,iCAAiC,yJAAyJ,6BAA6B,yiBAAyiB,0EAA0E,ugBAAugB,yCAAyC,wIAAwI,qBAAqB,sBAAsB,6BAA6B,kIAAkI,6BAA6B,ydAAyd,yCAAyC,sIAAsI,qBAAqB,6CAA6C,mBAAmB,uEAAuE,iCAAiC,yJAAyJ,6BAA6B,0qBAA0qB,qBAAqB,2BAA2B,2BAA2B,kIAAkI,6BAA6B,4fAA4f,yCAAyC,kMAAkM,mEAAmE,ulBAAulB,8DAA8D,mEAAmE,iEAAiE,sFAAsF,yGAAyG,oBAAoB,sDAAsD,qQAAqQ,0CAA0C,wJAAwJ,qBAAqB,kCAAkC,6BAA6B,kJAAkJ,6BAA6B,+mBAA+mB,yCAAyC,sJAAsJ,qBAAqB,uCAAuC,mCAAmC,kJAAkJ,6BAA6B,kpBAAkpB,yCAAyC,4OAA4O,0CAA0C,GAAG,gCAAgC,0dAA0d,E;;;;;;;;;;;;ACAvkW;AAAe,yOAA0K,GAAG,QAAQ,wOAAwO,iDAAiD,qLAAqL,oCAAoC,6HAA6H,yCAAyC,+HAA+H,wDAAwD,qFAAqF,E;;;;;;;;;;;;;;;;;;;;ACA/jC;AACiB;IAM7C,eAAe,SAAf,eAAe;;QACjB,SAAI,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACvC,gBAAW,GAAG,wEAAW,CAAC,WAAW;QACrC,kBAAa,GAAG,MAAM,CAAC,eAAe;IAUjD,CAAC;IARU,aAAa;QAChB,QAAQ,wEAAW,CAAC,OAAO,EAAE;YACzB,KAAK,WAAW;gBACZ,OAAO,KAAK;YAChB;gBACI,OAAO,IAAI;SAClB;IACL,CAAC;CACJ;AAbY,eAAe;IAJ3B,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,mFAAoC;KACvC,CAAC;GACW,eAAe,CAa3B;AAbqC;;;;;;;;;;;;;;;;;;;;;ACnOgD;AACR;AACkB;IAO7C,aAAa,SAAb,aAAa;IActB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAb3B,YAAO,GAAG,wEAAW,CAAC,OAAO;QAC7B,gBAAW,GAAG,wEAAW,CAAC,WAAW;QAIrC,yBAAoB,GAAG,KAAK;QAE5B,kBAAa,GAAG,IAAI;QAEpB,gBAAW,GAAG,KAAK;QAEnB,kBAAa,GAAG,EAAE;IAEY,CAAC;IAE/B,WAAW,CAAC,KAAiB,EAAE,MAAc;QAChD,KAAK,CAAC,cAAc,EAAE;QAEtB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;SAC1D;IACL,CAAC;CACJ;;YA/BQ,sDAAM;;;mBAWV,mDAAK;mCAEL,mDAAK;4BAEL,mDAAK;0BAEL,mDAAK;4BAEL,mDAAK;;AAXG,aAAa;IAJzB,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,iFAAkC;KACrC,CAAC;GACW,aAAa,CAuBzB;AAvByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgB;AACwB;AACZ;AACiB;AACjB;AACc;AACE;AACE;AACF;AACF;AACM;IAG7D,kBAAkB,SAAlB,kBAAkB;IAI3B,YACW,OAAuB,EACtB,MAAqB,EACrB,MAAoB,EACpB,YAA0B,EAC1B,MAAqB,EACrB,QAAkB,EACnB,SAA2B;QAN3B,YAAO,GAAP,OAAO,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAc;QACpB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QACnB,cAAS,GAAT,SAAS,CAAkB;QAV/B,mBAAc,GAAG,IAAI,oDAAe,CAAS,CAAC,CAAC,CAAC;IAWpD,CAAC;IAEG,IAAI;QACP,IAAI,KAA8B;QAClC,kDAAK,CAAC,+CAAE,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,qDAAQ,CAAC,KAAK,CAAC,CAAC;aAC/D,IAAI,CACD,6DAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,EACjD,0DAAG,CAAC,GAAG,EAAE;YACL,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE;YACzD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;YACrD,IAAI,WAAW,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE;gBAC7B,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wFAAyB,EAAE;oBAClD,WAAW,EAAE,eAAe;iBAC/B,CAAC;gBACF,MAAM,OAAO,GAAG,GAAG,EAAE,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;gBACzC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC;aACtC;QACL,CAAC,CAAC,EACF,6DAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAAC,EACxD,+DAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CACvC;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;QAC5G,CAAC,CAAC;IACV,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;QAC/F,CAAC,CAAC;IACN,CAAC;CACJ;;YAjDQ,sFAAc;YADd,oFAAa;YADb,kFAAY;YAIZ,mFAAY;YADZ,oFAAa;YAPb,mEAAQ;YACR,oEAAgB;;AAWZ,kBAAkB;IAD9B,gEAAU,EAAE;GACA,kBAAkB,CA2C9B;AA3C8B;;;;;;;;;;;;;;;;;;;;;;;ACb+C;AAExB;AACnB;AAGoB;IAM1C,+BAA+B,SAA/B,+BAA+B;IAwBxC,YAAmB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAlBvC,YAAO,GAAG,KAAK;QAEf,aAAQ,GAAG,KAAK;QAEhB,eAAU,GAAG,IAAI;QASjB,0BAAqB,GAAG,gEAAqB;QAC7C,gCAA2B,GAAG,IAAI;QAClC,cAAS,GAAG,KAAK;QACjB,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAEQ,CAAC;IAE3C,QAAQ;QACX,IAAI,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE;YAC1C,IAAI,CAAC,2BAA2B,GAAG,KAAK;SAC3C;IACL,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAC/B,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE;SACzC;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;SAChC;QACD,IAAI,IAAI,CAAC,2BAA2B,EAAE;YAClC,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE;SAC5C;QACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;YAC5B,uCAAuC;YACvC,oBAAoB,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB;YACrG,yBAAyB,EAAE,IAAI,CAAC,2BAA2B;gBACvD,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,yBAAyB;YAChD,uBAAuB,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB;SAC9G,CAAC;IACN,CAAC;IAEM,OAAO;QACV,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;QAC7B,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAC/B,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE;SAC3D;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;SAClD;QACD,IAAI,IAAI,CAAC,2BAA2B,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE;YACvE,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE;SAC9D;QACD,OAAO,KAAK;IAChB,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QACjB,IAAI,IAAI,CAAC,wBAAwB,EAAE;YAC/B,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,EAAE;YAC1C,IAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,KAAK;SAClD;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE;YACjC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,KAAK;SACzC;QACD,IAAI,IAAI,CAAC,2BAA2B,EAAE;YAClC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,EAAE;YAC7C,IAAI,CAAC,2BAA2B,CAAC,SAAS,GAAG,KAAK;SACrD;IACL,CAAC;IAED,iCAAiC;IAE1B,qBAAqB;QACxB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,EAAE;YACrC,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,KAAK,EAAE;gBAClC,OAAO,MAAM;aAChB;SACJ;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,QAAQ,EAAE;YACtC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE;IAC/D,CAAC;IAEM,SAAS;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,KAAK,CAAC;IACrF,CAAC;IAEM,aAAa;QAChB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,EAAE;YACrC,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,KAAK,EAAE;gBAClC,OAAO,KAAK;aACf;YACD,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,KAAK,EAAE;gBAClC,OAAO,KAAK;aACf;YACD,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,KAAK,EAAE;gBAClC,OAAO,WAAW;aACrB;SACJ;QACD,OAAO,YAAY;IACvB,CAAC;IAEM,iBAAiB;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IACxG,CAAC;IAEM,qBAAqB;QACxB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,EAAE;YACrC,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,KAAK,EAAE;gBAClC,OAAO,QAAQ;aAClB;YACD,IAAI,IAAI,CAAC,eAAe,EAAE,KAAK,KAAK,EAAE;gBAClC,OAAO,cAAc;aACxB;SACJ;QACD,OAAO,gBAAgB;IAC3B,CAAC;IAEO,eAAe;;QACnB,OAAO,WAAI,CAAC,QAAQ,0CAAE,IAAI,YAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,0CAAE,IAAI;IACjE,CAAC;CACJ;;YAtJQ,oEAAgB;;;0BAWpB,mDAAK;uBAEL,mDAAK;sBAEL,mDAAK;uBAEL,mDAAK;yBAEL,mDAAK;mBAEL,uDAAS,SAAC,wBAAwB;uCAElC,uDAAS,SAAC,0BAA0B;8BAEpC,uDAAS,SAAC,iBAAiB;0CAE3B,uDAAS,SAAC,6BAA6B;;AAjB/B,+BAA+B;IAJ3C,+DAAS,CAAC;QACP,QAAQ,EAAE,0BAA0B;QACpC,qGAAsD;KACzD,CAAC;GACW,+BAA+B,CA4I3C;AA5I2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZK;AAC6B;AAChB;AAClC;AAC0B;AACN;AACyB;IAQ5D,0BAA0B,SAA1B,0BAA0B;IAsBnC,YAAoB,eAAgC,EAAU,IAAgB;QAA1D,oBAAe,GAAf,eAAe,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAlB9D,mBAAc,GAAG,IAAI,0DAAY,EAAa;QAIvD,0BAAqB,GAAG,KAAK;QAE7B,sBAAiB,GAAwC,EAAE,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE;QAEvF,SAAI,GAAoC,MAAM;QAE9C,kBAAa,GAAgB,EAAE;QAC/B,oBAAe,GAAgB,EAAE;QAEjC,gBAAW,GAAG,4EAAW;QAExB,eAAU,GAAG,IAAI,4CAAO,EAAQ;QAChC,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAEuC,CAAC;IAE3E,QAAQ;QACX,IAAI,CAAC,eAAe;aACf,YAAY,CAAC,KAAK,CAAC;aACnB,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAI,CAAC,CAAC;QAExC,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,UAAU;aACV,IAAI,CACD,gEAAS,CAAC,GAAG,EAAE,CACX,qDAAQ,CAAuC;YAC3C,IAAI,CAAC,eAAe;iBACf,SAAS,CAAC;gBACP,QAAQ,EAAE;oBACN,MAAM,CAAC,EAAE;wBACL,QAAQ,IAAI,CAAC,IAAI,EAAE;4BACf,KAAK,sBAAsB;gCACvB,OAAO,MAAM,CAAC,IAAI,KAAK,KAAK,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM;4BAC1D;gCACI,OAAO,MAAM,CAAC,IAAI,KAAK,KAAK;yBACnC;oBACL,CAAC;iBACJ;aACJ,CAAC;iBACD,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,IAAI,KAAK,sBAAsB;gBAChC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,uBAAuB,EAAE;oBACnD,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;iBACpD,CAAC;gBACJ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;SAC9F,CAAC,CACL,CACJ;aACA,SAAS,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,EAAE;YAC/B,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAC9C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,CAC3D;YACD,IAAI,CAAC,eAAe,GAAG,kDAAG,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC;QAC9D,CAAC,CAAC,CACT;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IAC1B,CAAC;IAEM,cAAc,CAAC,IAAY;QAC9B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,WAAW,EAAE;IACtB,CAAC;IAEM,yBAAyB,CAAC,QAAmB;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC;QAC7E,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC9C,CAAC;IAEM,eAAe;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/F,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IAC1B,CAAC;IAEM,eAAe,CAAC,QAA+B;QAClD,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,EAAE;SACZ;QACD,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,MAAM,QAAQ,CAAC,IAAI,EAAE;IAC7F,CAAC;IAEO,sBAAsB,CAAC,IAAY;QACvC,IAAI,CAAC,eAAe;aACf,YAAY,CAAC,IAAI,CAAC;aAClB,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtC,CAAC,CAAC;IACV,CAAC;CACJ;;YA7GQ,kFAAe;YANf,+DAAU;;;uBAed,mDAAK;6BAEL,oDAAM;mBAEN,mDAAK;oCAEL,mDAAK;gCAEL,mDAAK;mBAEL,mDAAK;;AAXG,0BAA0B;IALtC,+DAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,gGAAiD;;KAEpD,CAAC;GACW,0BAA0B,CAqGtC;AArGsC;;;;;;;;;;;;;ACdvC;AAAe,iOAAkK,uCAAuC,oDAAoD,2CAA2C,wBAAwB,4KAA4K,uCAAuC,oDAAoD,2CAA2C,8CAA8C,uMAAuM,4BAA4B,qCAAqC,0BAA0B,sVAAsV,6DAA6D,yBAAyB,yDAAyD,E;;;;;;;;;;;;ACAt7C;AAAe,oIAAqE,E;;;;;;;;;;;;ACApF;AAAe,+HAAgE,6FAA6F,aAAa,uFAAuF,oDAAoD,aAAa,WAAW,iCAAiC,4GAA4G,gDAAgD,aAAa,WAAW,oCAAoC,+FAA+F,aAAa,qDAAqD,4DAA4D,0CAA0C,QAAQ,uEAAuE,8EAA8E,0CAA0C,8BAA8B,E;;;;;;;;;;;;;;;;;;;ACAzhC;AACO;AACiB;IAOnD,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAL9B,8DAAQ,CAAC;QACN,YAAY,EAAE,CAAC,6EAAqB,CAAC;QACrC,OAAO,EAAE,CAAC,6EAAqB,CAAC;QAChC,OAAO,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACT/B;AAAe,0QAA2M,oCAAoC,qCAAqC,+CAA+C,iCAAiC,wHAAwH,mCAAmC,oCAAoC,+CAA+C,gCAAgC,2JAA2J,8NAA8N,yBAAyB,sGAAsG,gDAAgD,sBAAsB,ukBAAukB,yBAAyB,oKAAoK,8BAA8B,sbAAsb,E;;;;;;;;;;;;ACAv5E;AAAe,8JAA+F,E;;;;;;;;;;;;;;;;;;;ACApC;AAC8B;IAY3F,qBAAqB,mCAArB,qBAAqB;IAKvB,WAAW,CAAC,OAAsB;QACrC,IAAI,OAAO,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY;YACnC,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,SAAS,EAAE;aACnB;SACJ;IACL,CAAC;IAEM,QAAQ,CAAC,OAAwB;QACpC,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;YAC7C,OAAO,IAAI;SACd;QACD,MAAM,QAAQ,GAAG,yDAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC7C,IAAI,QAAQ,KAAK,IAAI,EAAE;YACnB,OAAO,IAAI;SACd;QACD,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK;QACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;IAC1F,CAAC;IAEM,yBAAyB,CAAC,EAAc;QAC3C,IAAI,CAAC,SAAS,GAAG,EAAE;IACvB,CAAC;CACJ;;kBA5BI,mDAAK;;AADG,qBAAqB;IAVjC,+DAAS,CAAC;QACP,QAAQ,EAAE,0DAA0D;QACpE,SAAS,EAAE;YACP;gBACI,OAAO,EAAE,4DAAa;gBACtB,WAAW,EAAE,uBAAqB;gBAClC,KAAK,EAAE,IAAI;aACd;SACJ;KACJ,CAAC;GACW,qBAAqB,CA6BjC;AA7BiC;;;;;;;;;;;;;ACblC;AAAe,mFAAoB,iDAAiD,WAAW,uCAAuC,gDAAgD,sEAAsE,+BAA+B,gBAAgB,E;;;;;;;;;;;;;;;;;;;;ACA1P;AACoD;AAC3D;AACiB;IAI9C,oBAAoB,SAApB,oBAAoB;IAG7B,YAAoB,wBAAkD,EAAU,IAAgB;QAA5E,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAE7F,kBAAkB,CAAC,gBAAkC,EAAE,sBAAiC;QAC3F,IAAI,eAAoC;QACxC,kDAAK,CAAC,+CAAE,CAAC,SAAS,CAAC,EAAE,qDAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;aACrC,IAAI,CACD,gEAAS,CAAC,GAAG,EAAE,CACX,IAAI,CAAC,IAAI;aACJ,GAAG,CAAU,0BAA0B,EAAE;YACtC,OAAO,EAAE,EAAE,yBAAyB,EAAE,MAAM,EAAE;SACjD,CAAC;aACD,IAAI;QACD,gBAAgB;QAChB,iEAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EACpB,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,IAAK,OAAO,CAAC,KAAgB,CAAC,CACvD,CACR,CACJ;aACA,SAAS,CAAC,OAAO,CAAC,EAAE;YACjB,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;gBAC1B,sBAAsB;gBACtB,OAAM;aACT;YACD,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,OAAO;YAC9B,IAAI,CAAC,OAAO,GAAG,OAAO;YACtB,IAAI,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;gBAC5B,iGAAiG;gBACjG,MAAM,gBAAgB,GAClB,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,sBAAsB,CAAC;gBACjF,MAAM,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC;gBAC1E,oDAAoD;gBACpD,eAAe,GAAG,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;aAChE;iBAAM,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,eAAe,EAAE;gBACzC,eAAe,CAAC,OAAO,EAAE;gBACzB,eAAe,GAAG,SAAS;aAC9B;QACL,CAAC,CAAC;IACV,CAAC;CACJ;;YA/CQ,sEAAwB;YADxB,+DAAU;;AAON,oBAAoB;IADhC,gEAAU,EAAE;GACA,oBAAoB,CAyChC;AAzCgC;;;;;;;;;;;;;;;;;;;;ACPe;AACwD;IAM3F,yBAAyB,uCAAzB,yBAAyB;IAI3B,QAAQ,CAAC,OAAwB;;QACpC,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,IAAI;SACd;QACD,sDAAsD;QACtD,MAAM,QAAQ,GAAG,yDAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC7C,+CAA+C;QAC/C,MAAM,UAAU,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,EAAqB,CAAC;QAChF,IAAI,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC1C,OAAO,IAAI;SACd;QACD,MAAM,OAAO,SAAG,OAAO,CAAC,KAAK,0CAAE,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;QACvD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,EAAE;YAC1C,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE;SAClC;QACD,OAAO,IAAI;IACf,CAAC;CACJ;;sBApBI,mDAAK;;AADG,yBAAyB;IAJrC,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,2BAAyB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;KAC/F,CAAC;GACW,yBAAyB,CAqBrC;AArBqC;;;;;;;;;;;;;ACPtC;AAAe,2TAA4P,cAAc,gPAAgP,eAAe,iEAAiE,iBAAiB,2CAA2C,E;;;;;;;;;;;;;;;;;;;;ACArmB;IAOnC,oBAAoB,SAApB,oBAAoB;CAGhC;;kBAFI,mDAAK;;AADG,oBAAoB;IAJhC,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,yFAA0C;KAC7C,CAAC;GACW,oBAAoB,CAGhC;AAHgC;AAK1B,SAAS,SAAS,CAAC,QAAkB;IACxC,OAAO,CAAC,GAAW,EAAE,EAAE;QACnB,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE;YACpD,WAAW,EAAE,cAAc;YAC3B,IAAI,EAAE,IAAI;SACb,CAAC,CACD;QAAC,WAAW,CAAC,iBAA0C,CAAC,GAAG,GAAG,GAAG;IACtE,CAAC;AACL,CAAC;;;;;;;;;;;;;ACpBD;AAAe,2GAA4C,4BAA4B,oJAAoJ,qBAAqB,WAAW,UAAU,iBAAiB,sEAAsE,iDAAiD,UAAU,+OAA+O,0BAA0B,gYAAgY,oBAAoB,8cAA8c,yCAAyC,6HAA6H,qBAAqB,WAAW,UAAU,+BAA+B,2DAA2D,gCAAgC,iCAAiC,+HAA+H,UAAU,8HAA8H,6BAA6B,qQAAqQ,qBAAqB,WAAW,UAAU,SAAS,6BAA6B,4HAA4H,UAAU,qJAAqJ,6BAA6B,8WAA8W,iCAAiC,uJAAuJ,qBAAqB,WAAW,UAAU,YAAY,wEAAwE,4HAA4H,UAAU,iKAAiK,6BAA6B,oXAAoX,iCAAiC,4LAA4L,qBAAqB,WAAW,UAAU,UAAU,8BAA8B,4HAA4H,UAAU,yJAAyJ,6BAA6B,sUAAsU,iCAAiC,uJAAuJ,qBAAqB,WAAW,UAAU,YAAY,gCAAgC,yDAAyD,UAAU,qUAAqU,0BAA0B,yYAAyY,iCAAiC,kEAAkE,E;;;;;;;;;;;;;;;;;;;;;;;ACA7qM;AACa;AAC1B;AAC0B;AACP;AACiB;IAKpD,eAAe,SAAf,eAAe;IAGxB,YAAY,OAAuB,EAAE,MAAc,EAAU,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAFjF,cAAS,GAAG,KAAK;QAGrB,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,EAAE;QACvD,IAAI,CAAC,IAAI,EAAE;QACX,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,qEAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;gBACnF,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;gBACvD,IAAI,KAAK,CAAC,IAAI,KAAK,8DAAa,CAAC,KAAK,EAAE;oBACpC,MAAM,CAAC,gBAAgB,iDAChB,MAAM,CAAC,gBAAgB,KAC1B,OAAO,EAAE,IAAI,CAAC,EAAE,EAChB,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAC9C,MAAM,EAAE;4BACJ,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,SAAS;yBACvB,KAEG,mDAAI,CAAC,IAAI,EAAE,CAAC,eAAe,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAS,CACpE;oBACD,IAAI,CAAC,MAAM,EAAE;iBAChB;qBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,8DAAa,CAAC,MAAM,EAAE;oBAC5C,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,IAAI,EAAE;iBACd;YACL,CAAC,CAAC;YACF,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,6DAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,6DAAa,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;gBAC/E,IAAI,CAAC,MAAM,EAAE;YACjB,CAAC,CAAC;SACL;IACL,CAAC;IAEM,IAAI;QACP,IAAI,MAAM,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAClB,oBAAoB;gBACpB,CAAC;gBAAA,CAAC;oBACE,IAAI,CAAC,GAAG,MAAM;oBACd,IAAI,EAAE,GAAG,CAAC,CAAC,QAAQ;oBACnB,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;wBAC1B,EAAE,CAAC,oBAAoB,CAAC;wBACxB,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,gBAAgB,CAAC;qBACnC;yBAAM;wBACH,IAAI,CAAC,GAAG,QAAQ;wBAChB,IAAI,CAAC,GAAQ;4BACT,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;wBAClB,CAAC;wBACD,CAAC,CAAC,CAAC,GAAG,EAAE;wBACR,CAAC,CAAC,CAAC,GAAG,UAAU,IAAS;4BACrB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;wBAClB,CAAC;wBACD,CAAC,CAAC,QAAQ,GAAG,CAAC;wBACd,MAAM,CAAC,GAAG,GAAG,EAAE;4BACX,IAAI,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC;4BACjC,CAAC,CAAC,IAAI,GAAG,iBAAiB;4BAC1B,CAAC,CAAC,KAAK,GAAG,IAAI;4BACd,CAAC,CAAC,GAAG,GAAG,qCAAqC,MAAM,CAAC,eAAe,EAAE;4BACrE,IAAI,CAAC,GAAG,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;4BAC3C,CAAC,CAAC,UAAW,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;wBACpC,CAAC;wBACD,IAAK,CAAS,CAAC,WAAW,EAAE;4BACxB,CAAC;4BAAC,CAAS,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;yBACvC;6BAAM;4BACH,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC;yBACvC;qBACJ;gBACL,CAAC,CAAC,EAAE;gBACJ,mBAAmB;aACtB;YACD,IAAI,CAAC,SAAS,GAAG,IAAI;YACrB,MAAM,CAAC,QAAS,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,eAAe,EAAE,CAAC;SAC/D;IACL,CAAC;IAEM,UAAU,CAAC,KAAa,EAAE,IAAU;QACvC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,CAAC,QAAS,CAAC,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC;SAC9C;IACL,CAAC;IAEM,QAAQ;QACX,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,CAAC,gBAAgB,GAAG,EAAE;YAC5B,MAAM,CAAC,QAAS,CAAC,UAAU,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,KAAK;SACzB;IACL,CAAC;IAEM,MAAM,CAAC,OAA6D;QACvE,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,CAAC,QAAS,CAAC,QAAQ,EAAE,OAAO,CAAC;SACtC;IACL,CAAC;IAEM,IAAI;QACP,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,CAAC,QAAS,CAAC,MAAM,CAAC;SAC3B;IACL,CAAC;IAEM,IAAI;QACP,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,CAAC,QAAS,CAAC,MAAM,CAAC;SAC3B;IACL,CAAC;IAEM,iBAAiB,CAAC,mBAA4B;QACjD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,MAAM,CAAC,QAAS,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;SAC1D;IACL,CAAC;CACJ;;YAxHQ,+DAAc;YAJC,sDAAM;YAGrB,6DAAa;;AAMT,eAAe;IAH3B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,eAAe,CAmH3B;AAnH2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVkC;AACyD;AAC/D;AACU;AACb;AACC;AACP;AAC4B;AAE9B;AAEP;AACW;AACyC;AAC9B;AACF;AACuB;IAMpE,yBAAyB,SAAzB,yBAA0B,SAAQ,8DAAoB;IAoC/D,YACI,IAAgB,EAChB,QAAkB,EAClB,cAAiC,EACjC,KAAqB,EACrB,MAAc,EACd,OAAuB,EACvB,YAAiC,EACzB,MAAqB,EACtB,SAA2B;QAElC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC;QAHnE,WAAM,GAAN,MAAM,CAAe;QACtB,cAAS,GAAT,SAAS,CAAkB;QAzC/B,gBAAW,GAAG,MAAM;QAEpB,eAAU,GAAG,IAAI;QAEjB,cAAS,GAAG,IAAI;QAEhB,YAAO,GAAG,IAAI;QAEd,YAAO,GAAG,IAAI;QAEd,cAAS,GAAG,IAAI;QAMP,aAAQ,GAAG,IAAI,0DAAY,EAAQ;QAK5C,gBAAW,GAAG,KAAK;QAEnB,UAAK,GAAW,EAAE;QAGlB,gBAAW,GAAG,0DAAW;QACzB,eAAU,GAAG,mDAAY;QACzB,YAAO,GAAG,wEAAO;QACjB,WAAM,GAAG,uEAAM;IAetB,CAAC;IAEM,QAAQ;QACX,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ;QAC5C,KAAK,CAAC,QAAQ,EAAE;IACpB,CAAC;IAEM,WAAW;QACd,KAAK,CAAC,WAAW,EAAE;IACvB,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,MAAM,EAAE;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;YACjB,OAAM;SACT;QACD,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,MAAM,EAAE;aACR,IAAI,CACD,+DAAQ,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,WAAW,GAAG,KAAK;QAC5B,CAAC,CAAC,CACL;aACA,SAAS,CAAC,OAAO,CAAC,EAAE;YACjB,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE;gBACjC,IAAI,CAAC,MAAM,CAAC,KAAK,CACb,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6DAA6D,CAAC,CACxF;gBACD,OAAM;aACT;iBAAM,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;aACtE;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;QACxB,CAAC,CAAC,CACT;IACL,CAAC;IAEM,MAAM,CAAC,OAA2B;QACrC,OAAO,qDAAQ,CACX,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC3B,MAAM,OAAO,GAAG;gBACZ,aAAa,EAAE,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC5C,cAAc,EAAE,IAAI,CAAC,IAAI;gBACzB,YAAY,EAAE,MAAM;aAChB;YACR,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE;gBAC5B,OAAO,CAAC,gBAAgB,CAAC,GAAG,OAAO,CAAC,OAAO;aAC9C;YACD,OAAO,IAAI,CAAC,IAAI;iBACX,IAAI,CAAQ,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE;gBAC5B,OAAO,EAAE,IAAI,gEAAW,CAAC,OAAO,CAAC;aACpC,CAAC;iBACD,IAAI,CACD,0DAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAC9B,iEAAU,CAAC,GAAG,EAAE,CAAC,+CAAE,CAAC,KAAK,CAAC,CAAC,CAC9B;QACT,CAAC,CAAC,CACL,CAAC,IAAI,CACF,0DAAG,CAAC,OAAO,CAAC,EAAE;YACV,yCAAyC;YACzC,MAAM,iBAAiB,GAAa,EAAE;YACtC,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;gBAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACxB,SAAQ;iBACX;gBACD,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAW,CAAC;aAC9C;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEhF,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACvB,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAE,MAAM,CAAC,CAAC,CAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACzF,CAAC,CAAC,CACL;IACL,CAAC;IAEM,UAAU,CAAC,IAAW;QACzB,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,YAAY;aACZ,IAAI,CAAC;YACF,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAC3B,yCAAyC,CAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6BAA6B,CAAC,EAAE;YAC/D,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,eAAe,CAAC;YACpD,YAAY,EAAE,QAAQ;SACzB,CAAC;aACD,IAAI,CACD,6DAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,kFAAkB,CAAC,SAAS,CAAC,EACzD,8DAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CACrE;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,CAAC;QACnF,CAAC,CAAC,CACT;IACL,CAAC;IAEM,aAAa,CAAC,IAAW;QAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+FAAqB,EAAE;YACvD,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,eAAe;SAC/B,CAAC;QACF,MAAM,iBAAiB,GAAG,QAAQ,CAAC,iBAA0C;QAC7E,iBAAiB,CAAC,IAAI,GAAG,IAAI;QAC7B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,CAAC;YAAC,iBAA2C,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;SACjE;QACD,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE;QACpB,CAAC,CAAC;IACN,CAAC;IAEM,MAAM;QACT,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;SACzB;IACL,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;IAClC,CAAC;CACJ;;YAjMQ,+DAAU;YAIV,mEAAQ;YAHR,+DAAiB;YACjB,8DAAc;YAAE,sDAAM;YAYtB,yEAAc;YADM,mFAAmB;YAEvC,uEAAa;YAVb,oEAAgB;;;mBAkBpB,mDAAK;0BAEL,mDAAK;yBAEL,mDAAK;wBAEL,mDAAK;sBAEL,mDAAK;sBAEL,mDAAK;wBAEL,mDAAK;sBAEL,mDAAK;8BAEL,mDAAK;uBAEL,oDAAM;uBAGN,uDAAS,SAAC,UAAU;;AAtBZ,yBAAyB;IAJrC,+DAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,8FAA+C;KAClD,CAAC;GACW,yBAAyB,CA2KrC;AA3KqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBoC;AACd;AACpB;AACwB;AACV;AACK;AACY;AAEiB;AACZ;IAM/D,4BAA4B,SAA5B,4BAA4B;IAOrC,YACY,IAAgB,EACjB,OAAuB,EACvB,oBAA0C,EACzC,MAAc,EACf,SAA2B;QAJ1B,SAAI,GAAJ,IAAI,CAAY;QACjB,YAAO,GAAP,OAAO,CAAgB;QACvB,yBAAoB,GAApB,oBAAoB,CAAsB;QACzC,WAAM,GAAN,MAAM,CAAQ;QACf,cAAS,GAAT,SAAS,CAAkB;QAV/B,WAAM,GAAG,uEAAM;QACf,UAAK,GAAG,sEAAK;QACZ,eAAU,GAAG,IAAI,4CAAO,EAAQ;QAChC,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAQvC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,0DAAa,CAAC,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;aACzF,IAAI,CACD,mEAAY,CAAC,GAAG,CAAC,EACjB,gEAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,UAAU,IAAI,CAAC,EAAE,gBAAgB,EAAE;YAC7D,MAAM,EAAE,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC;SACjD,CAAC,CACL,CACJ;aACA,SAAS,CAAC,aAAa,CAAC,EAAE;YACvB,IAAI,CAAC,aAAa,GAAG,aAAa;QACtC,CAAC,CAAC,CACT;QACD,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,EAAE;QAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IAC1B,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,aAAa;QAChB,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,OAAO,CAAC,UAAU;aAClB,IAAI,CACD,2DAAI,CAAC,CAAC,CAAC,EACP,8DAAO,CAAC,IAAI,CAAC,EAAE,CACX,IAAI,CAAC,IAAI,CAAC,IAAI,CACV,UAAU,IAAI,CAAC,EAAE,gBAAgB,EACjC;YACI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC;YACrC,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,eAAe;SAC1B,EACD;YACI,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,sBAAsB,EAAE,CAAC;SACvE,CACJ,CACJ,CACJ;aACA,SAAS,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;YACtB,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,EAAE;QAChD,CAAC,CAAC,CACT;IACL,CAAC;IAEY,IAAI,CAAC,YAA0B;;YACxC,IAAI,YAAY,CAAC,OAAO,EAAE;gBACtB,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aAC9E;iBAAM,IAAI,YAAY,CAAC,WAAW,EAAE;gBACjC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;aAC7E;iBAAM,IAAI,YAAY,CAAC,UAAU,EAAE;gBAChC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,EAAE,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aACpF;iBAAM;gBACH,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;aACjD;QACL,CAAC;KAAA;IAEM,oBAAoB,CAAC,OAAgB;QACxC,MAAM,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC;QACzF,IAAI,CAAC,OAAO,IAAI,mBAAmB,CAAC,MAAM,EAAE;YACxC,IAAI,CAAC,aAAa,EAAE;SACvB;IACL,CAAC;CACJ;;YAjGQ,+DAAU;YASV,gFAAc;YADd,2FAAoB;YANpB,sDAAM;YAEN,oEAAgB;;AAWZ,4BAA4B;IAJxC,+DAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,iGAAkD;KACrD,CAAC;GACW,4BAA4B,CAkFxC;AAlFwC;;;;;;;;;;;;;ACfzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACvB;AACM;AACO;AAET;AAIjC,SAAS,gBAAgB,CAAC,IAAY;IACzC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AACrE,CAAC;AAEM,SAAS,iBAAiB,CAAC,UAAkB;IAChD,OAAO,IAAI,mDAAS,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;AAC/D,CAAC;AAED;;;GAGG;AACI,SAAS,oBAAoB,CAAC,OAAe;;IAChD,mBAAO,qDAAU,CAAC,OAAO,CAAC,0CAAE,mBAAmB,CAAC,CAAC,oCAAK,EAAE;AAC5D,CAAC;AAEM,SAAS,SAAS,CAAI,KAAQ;IACjC,OAAO,KAAK,CAAC,KAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;AAC7C,CAAC;AAEM,SAAS,WAAW,CAAI,KAAQ;IACnC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;AAChC,CAAC;AAEM,SAAS,WAAW,CAAC,IAAmB;IAC3C,OAAO,IAAI,CAAC,CAAC,CAAC,wDAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACzD,CAAC;AAEM,SAAS,MAAM,CAAC,KAAsB;IACzC,OAAO,IAAI,mDAAS,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;AACxC,CAAC;AAEM,SAAS,mBAAmB,CAAC,KAAa;IAC7C,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;AAC/G,CAAC;AAED;;GAEG;AACI,SAAS,uBAAuB,CAAC,MAAW;IAC/C,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC5B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC;KAC5C;IACD,MAAM,GAAG,qDAAM,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,CAAC;IACpE,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;QACtB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;YAC5B,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;gBACxC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;oBAC1B,OAAO,uBAAuB,CAAC,IAAI,CAAC;iBACvC;gBACD,OAAO,IAAI;YACf,CAAC,CAAC;SACL;aAAM,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;YACxC,MAAM,CAAC,GAAG,CAAC,GAAG,uBAAuB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACrD;KACJ;IACD,OAAO,MAAM;AACjB,CAAC;AAEM,SAAS,iBAAiB,CAAC,IAAY,EAAE,OAAgB;IAC5D,OAAO,CACH,OAAO,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACrE,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CACxF;AACL,CAAC;AAEM,SAAS,gBAAgB,CAAC,OAMhC;IACG,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI;AACvE,CAAC;AAEM,SAAS,aAAa,CAAC,OAAe,EAAE,IAAY;IACvD,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,MAAM,EAAE,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC;IAC5C,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM;IACzB,OAAO,CAAC,EAAE,EAAE;QACR,EAAE,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;KACnC;IACD,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC;AACnC,CAAC;AAEM,MAAM,aAAa,GAAoC;IAC1D,eAAe,EAAE,OAAO;IACxB,eAAe,EAAE,OAAO;IACxB,gBAAgB,EAAE,QAAQ;IAC1B,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;IACd,WAAW,EAAE,aAAa;IAC1B,QAAQ,EAAE,UAAU;IACpB,YAAY,EAAE,cAAc;IAC5B,MAAM,EAAE,QAAQ;IAChB,aAAa,EAAE,aAAa;CAC/B;AAEM,SAAS,0BAA0B,CAAC,WAAwB;IAC/D,IAAI,IAAI,mDAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QACzC,OAAO,MAAM;KAChB;IACD,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;QAC1B,OAAO,QAAQ;KAClB;IACD,OAAO,MAAM;AACjB,CAAC;AAEM,SAAS,iBAAiB,CAAC,IAAU;IACxC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACnC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE;QAC/B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACjB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QAC1B,CAAC;QACD,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE;YACrB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC;AACN,CAAC;AAEM,SAAS,OAAO,CAAC,KAAa;IACjC,OAAO,4DAAa,CAAC,KAAK,CAAC;AAC/B,CAAC;AAEM,SAAS,eAAe,CAAC,KAAa,EAAE,MAAiC;IAC5E,MAAM,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,GAAG,CAAC;IACjD,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK;IAC/E,OAAO,CACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QAClB,QAAQ,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAC/F;AACL,CAAC;AAEM,SAAS,WAAW,CAAC,MAAc;IACtC,OAAO,gEAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC;AACnE,CAAC;AAEM,SAAS,uBAAuB,CAAC,OAAiB;IACrD,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,EAAE;KACZ;IAED,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,OAAO;IAE7E,MAAM,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,qDAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;IAE3D,OAAO,GAAG,YAAY,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GACvF,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,EAC1B,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE;AACvE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1J2B;AACgC;AACH;AA0Bd;AAWF;AACa;AACnB;AACI;AACmB;AACe;AACZ;IAchD,aAAa,SAAb,aAAa;IAwCtB,YACW,OAAuB,EACtB,MAAc,EACd,WAAwB,EACzB,SAA2B;QAH3B,YAAO,GAAP,OAAO,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACzB,cAAS,GAAT,SAAS,CAAkB;QA3C/B,uBAAkB,GAAG,mFAAkB;QACvC,cAAS,GAAG,4EAAS;QACrB,iBAAY,GAAG,6EAAY;QAC3B,WAAM,GAAG,yEAAM;QACf,sBAAiB,GAAG,oFAAiB;QACrC,cAAS,GAAG,4EAAS;QACrB,YAAO,GAAG,0EAAO;QACjB,UAAK,GAAG,wEAAK;QACb,WAAM,GAAG,yEAAM;QACf,YAAO,GAAG,0EAAO;QACjB,WAAM,GAAG,yEAAM;QACf,aAAQ,GAAG,2EAAQ;QACnB,WAAM,GAAG,yEAAM;QACf,iBAAY,GAAG,6EAAY;QAC3B,WAAM,GAAG,yEAAM;QACf,mBAAc,GAAG,iFAAc;QAC/B,iBAAY,GAAG,+EAAY;QAC3B,cAAS,GAAG,4EAAS;QACrB,mBAAc,GAAG,iFAAc;QAC/B,WAAM,GAAG,yEAAM;QACf,gBAAW,GAAG,8EAAW;QACzB,cAAS,GAAG,4EAAS;QACrB,kBAAa,GAAG,gFAAa;QAC7B,YAAO,GAAG,wEAAO;QACjB,gBAAW,GAAG,4EAAW;QACzB,kBAAa,GAAG,gFAAa;QAC7B,eAAU,GAAG,6EAAU;QACvB,WAAM,GAAG,uEAAM;QACf,YAAO,GAAG,wEAAO;QACjB,eAAU,GAAG,2EAAU;QACvB,UAAK,GAAG,sEAAK;QACb,cAAS,GAAG,4EAAS;QACrB,gBAAW,GAAG,8EAAW;QAEzB,YAAO,GAAG,yEAAW,CAAC,OAAO;QAE5B,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAQvC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,MAAM,CAAC,MAAM;aACb,IAAI,CAAC,6DAAM,CAAC,CAAC,KAAK,EAA4B,EAAE,CAAC,KAAK,YAAY,+DAAe,CAAC,CAAC;aACnF,SAAS,CAAC,CAAC,KAAsB,EAAE,EAAE;YAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG;QAC/B,CAAC,CAAC,CACT;IACL,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,QAAQ,CAAC,KAAa,EAAE,MAAM,GAAG,KAAK;QACzC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC;IAC9C,CAAC;IAEM,MAAM,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC,UAAU,KAAK,IAAI;IACnC,CAAC;IAEM,UAAU,CAAC,IAAY;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;IACjE,CAAC;IAEM,cAAc;QACjB,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,8DAAe,CAAC,MAAM;IACvD,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW;IAC3B,CAAC;IAED,IAAW,UAAU,CAAC,KAAyB;QAC3C,IAAI,CAAC,KAAK,EAAE;YACR,IAAI,CAAC,WAAW,GAAG,SAAS;YAC5B,OAAM;SACT;QACD,IAAI,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC5B,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC3C;QACD,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACvB,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;SAC7B;QACD,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,SAAS;IACjD,CAAC;CACJ;;YA9GQ,gFAAc;YA1CG,sDAAM;YA2CvB,0DAAW;YALX,oEAAgB;;AAmBZ,aAAa;IAZzB,+DAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,iFAAkC;QAClC,UAAU,EAAE;YACR,mEAAO,CAAC,YAAY,EAAE;gBAClB,iEAAc,CAAC,OAAO,EAAE,iEAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;gBACjD,iEAAc,CAAC,MAAM,EAAE,iEAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC9C,sEAAmB,CAAC,QAAQ,EAAE,mEAAO,CAAC,eAAe,CAAC,CAAC;gBACvD,sEAAmB,CAAC,QAAQ,EAAE,mEAAO,CAAC,gBAAgB,CAAC,CAAC;aAC3D,CAAC;SACL;KACJ,CAAC;GACW,aAAa,CA+FzB;AA/FyB;;;;;;;;;;;;;ACjE1B;AAAe,4KAA6G,gCAAgC,wBAAwB,E;;;;;;;;;;;;;;;;;;;;;;ACApI;AACM;AACI;AAEQ;IAMrD,gCAAgC,SAAhC,gCAAgC;IAiBzC,YAAmB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAhBvC,YAAO,GAAG,wEAAW,CAAC,OAAO;QAM7B,gBAAW,GAAG,KAAK;QAEnB,eAAU,GAAG,IAAI;QAEjB,iBAAY,GAAG,KAAK;QAEpB,eAAU,GAAG,KAAK;QAElB,8BAAyB,GAAG,8EAAyB;IAEX,CAAC;IAElD,iCAAiC;IAE1B,qBAAqB;;QACxB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,EAAE;YACrC,IAAI,WAAI,CAAC,WAAW,CAAC,QAAQ,0CAAE,IAAI,MAAK,KAAK,EAAE;gBAC3C,OAAO,MAAM;aAChB;SACJ;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,QAAQ,EAAE;YACtC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE;SAC9D;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE;IAC/D,CAAC;IAEM,SAAS;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,CAAC;IAC7F,CAAC;IAEM,aAAa;QAChB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,EAAE;YACrC,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC1C,OAAO,KAAK;aACf;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC1C,OAAO,KAAK;aACf;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC1C,OAAO,WAAW;aACrB;SACJ;QACD,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE;IAC3D,CAAC;IAEM,iBAAiB;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAK,CAAC;IACjH,CAAC;IAEM,qBAAqB;QACxB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,OAAO,EAAE;YACrC,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC1C,OAAO,QAAQ;aAClB;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC1C,OAAO,cAAc;aACxB;SACJ;QACD,OAAO,gBAAgB;IAC3B,CAAC;CACJ;;YA5EQ,oEAAgB;;;0BAWpB,mDAAK;0BAEL,mDAAK;0BAEL,mDAAK;yBAEL,mDAAK;2BAEL,mDAAK;yBAEL,mDAAK;;AAZG,gCAAgC;IAJ5C,+DAAS,CAAC;QACP,QAAQ,EAAE,2BAA2B;QACrC,sGAAuD;KAC1D,CAAC;GACW,gCAAgC,CAmE5C;AAnE4C;;;;;;;;;;;;;ACV7C;AAAe,+TAAgQ,qEAAqE,0KAA0K,0OAA0O,wCAAwC,gEAAgE,kCAAkC,mEAAmE,6CAA6C,yFAAyF,mDAAmD,sBAAsB,6BAA6B,UAAU,yBAAyB,kKAAkK,0CAA0C,6TAA6T,kCAAkC,oqBAAoqB,wSAAwS,aAAa,0DAA0D,aAAa,KAAK,0CAA0C,qXAAqX,E;;;;;;;;;;;;;;;;;;ACAhoG;AACkB;IAGxD,iBAAiB,SAAjB,iBAAiB;IACnB,SAAS,CAAC,KAAgC;QAC7C,IAAI,CAAC,KAAK,IAAI,CAAC,qEAAe,CAAC,KAAK,CAAC,EAAE;YACnC,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;SAC5B;QACD,OAAO,yEAAmB,CAAC,KAAK,CAAC;IACrC,CAAC;CACJ;AAPY,iBAAiB;IAD7B,0DAAI,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;GACnB,iBAAiB,CAO7B;AAP6B;;;;;;;;;;;;;;;;;;;;ACJY;AAEQ;IAKrC,aAAa,2BAAb,aAAa;IAWtB,YAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAa,CAAC,gBAAgB,CAAC;YACjE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAa,CAAC,gBAAgB,CAAE;YACvD,CAAC,CAAC,GAAG;IACb,CAAC;IAXD,IAAW,SAAS,CAAC,KAAa;QAC9B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC;IACxE,CAAC;IACD,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,GAAG,EAAE;IAC/B,CAAC;IAMM,MAAM;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;IACpC,CAAC;IACM,YAAY,CAAC,IAAU;QAC1B,OAAO,eAAe,IAAI,CAAC,EAAE,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE;IACnE,CAAC;CACJ;AArB2B,8BAAgB,GAAG,uBAAuB;;YAN7D,+DAAc;;AAKV,aAAa;IAHzB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,aAAa,CAsBzB;AAtByB;;;;;;;;;;;;;;;;;;;;;;;ACPsB;AACM;AAEK;AACD;IAM7C,4BAA4B,SAA5B,4BAA4B;IAIrC,YAAoB,MAAqB,EAAU,WAAwB,EAAS,SAA2B;QAA3F,WAAM,GAAN,MAAM,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAS,cAAS,GAAT,SAAS,CAAkB;QADxG,oBAAe,GAAG,KAAK;IACoF,CAAC;IAE5G,MAAM;QACT,IAAI,CAAC,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CACzD,GAAG,EAAE;YACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;QACtF,CAAC,EACD,GAAG,EAAE;YACD,IAAI,CAAC,eAAe,GAAG,KAAK;QAChC,CAAC,CACJ;IACL,CAAC;CACJ;;YAvBQ,sEAAa;YADb,uEAAW;YAFX,oEAAgB;;;mBAUpB,mDAAK;;AADG,4BAA4B;IAJxC,+DAAS,CAAC;QACP,QAAQ,EAAE,uBAAuB;QACjC,kGAAmD;KACtD,CAAC;GACW,4BAA4B,CAiBxC;AAjBwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCnB;AAC4C;AACZ;AAClB;AAC2C;AAC3C;AACsB;AACe;AACT;AAEJ;IAa/C,uBAAuB,SAAvB,uBAAuB;IA8ChC,YACY,eAAgC,EAChC,YAA0B,EAC1B,OAAuB,EACxB,SAA2B;QAH1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,YAAO,GAAP,OAAO,CAAgB;QACxB,cAAS,GAAT,SAAS,CAAkB;QA9CtB,mBAAc,GAAG,IAAI,0DAAY,CAAY,IAAI,CAAC;QAE3D,gBAAW,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,wBAAwB,CAAC,EAAE;QAEnE,aAAQ,GAAG,KAAK;QAEhB,aAAQ,GAAG,KAAK;QAIhB,YAAO,GAAG,KAAK;QAEf,kBAAa,GAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC;QAUlD,kBAAa,GAAG,KAAK;QAIrB,gBAAW,GAAG,KAAK;QAEnB,oBAAe,GAAG,KAAK;QAEvB,YAAO,GAAG,wEAAW,CAAC,OAAO;QAU5B,kBAAa,GAAG,IAAI,iDAAY,EAAE;QAQtC,IAAI,CAAC,QAAQ,GAAG,IAAI,oDAAe,CAAC;YAChC,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;SAClC,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,0DAAa,CAC1B,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,EAChC,IAAI,CAAC,YAAY,CAAC,SAAS,EAC3B,IAAI,CAAC,QAAQ,CAChB,CAAC,IAAI,CACF,0DAAG,CAAC,CAAC,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAE;YACpC,IAAI,QAAQ;YACZ,QAAQ,GAAG,UAAU;iBAChB,MAAM,CAAC,QAAQ,CAAC,EAAE;gBACf,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBACzD,OAAO,KAAK;iBACf;gBACD,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACtD,IAAI,QAAQ,CAAC,WAAW,KAAK,SAAS,EAAE;oBACpC,KAAK,GAAG,KAAK,IAAI,QAAQ,CAAC,WAAW,KAAK,QAAQ,CAAC,WAAW;iBACjE;gBACD,IAAI,QAAQ,CAAC,QAAQ,KAAK,SAAS,EAAE;oBACjC,KAAK,GAAG,KAAK,IAAI,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ;iBAC3D;gBACD,IAAI,QAAQ,CAAC,YAAY,KAAK,SAAS,EAAE;oBACrC,KAAK,GAAG,KAAK,IAAI,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY;iBACnE;gBACD,OAAO,KAAK;YAChB,CAAC,CAAC;iBACD,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACZ,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC;gBACnE,MAAM,OAAO,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBACxD,MAAM,aAAa,GAAG,MAAM;oBACxB,CAAC,CAAC,IAAI,mDAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAE,MAAc,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;oBACjF,CAAC,CAAC,CAAC;gBACP,uCACO,QAAQ,KACX,OAAO,EAAE,IAAI,mDAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,EAClE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAC3C,aAAa,IAChB;YACL,CAAC,CAAC;iBACD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,mDAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAE9F,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAClB,QAAQ,GAAG,UAAU;qBAChB,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;qBAC3F,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,iCACV,QAAQ,KACX,OAAO,EAAE,MAAM,EACf,QAAQ,EAAE,MAAM,EAChB,aAAa,EAAE,MAAM,IACvB,CAAC;aACV;YAED,OAAO,QAAQ;QACnB,CAAC,CAAC,CACL;IACL,CAAC;IAEM,WAAW;;QACd,UAAI,CAAC,QAAQ,0CAAE,IAAI,CAAC;YAChB,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;SAClC,EAAC;IACN,CAAC;IAEM,kBAAkB;QACrB,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChC,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC7B,IAAI,CAAC,QAAQ;oBACT,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;wBACnF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC;wBAChD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC;wBAChD,QAAQ,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC1C;QACL,CAAC,CAAC,CACL;IACL,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,iBAAiB,CAAC,CAAY,EAAE,CAAY;QAC/C,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;IAC5B,CAAC;CACJ;;YAhKQ,kFAAe;YACf,0EAAY;YAEZ,yEAAc;YARd,oEAAgB;;;uBAsBpB,mDAAK;6BAEL,oDAAM;0BAEN,mDAAK;uBAEL,mDAAK;uBAEL,mDAAK;mBAEL,mDAAK;sBAEL,mDAAK;4BAEL,mDAAK;0BAEL,mDAAK;uBAEL,mDAAK;2BAEL,mDAAK;uBAEL,mDAAK;4BAEL,mDAAK;4BAEL,uDAAS,SAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;0BAE3C,mDAAK;8BAEL,mDAAK;;AA/BG,uBAAuB;IAXnC,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,4FAA6C;QAC7C,aAAa,EAAE;YACX;gBACI,OAAO,EAAE,+DAAgB;gBACzB,UAAU,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM;gBACtC,IAAI,EAAE,CAAC,CAAC,IAAI,sDAAQ,EAAE,EAAE,IAAI,sDAAQ,EAAE,EAAE,qDAAM,CAAC,CAAC;aACnD;SACJ;KACJ,CAAC;GACW,uBAAuB,CAgJnC;AAhJmC;;;;;;;;;;;;;;;;;;;;AClCI;AACiB;AACA;IAO5C,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAL1B,8DAAQ,CAAC;QACN,YAAY,EAAE,CAAC,sEAAiB,CAAC;QACjC,OAAO,EAAE,CAAC,sEAAiB,CAAC;QAC5B,OAAO,EAAE,CAAC,kEAAY,CAAC;KAC1B,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;ACTa;AACiC;AACF;AACO;AAE9E,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,GAAG,EAAE,CAAC,woEAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC;KAClF;IACD;QACI,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CAAC,2TAAkC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC;KACxF;IACD;QACI,IAAI,EAAE,WAAW;QACjB,YAAY,EAAE,GAAG,EAAE,CAAC,0sCAAsC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC;KAC9F;IACD;QACI,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CAAC,+gBAAkC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC;KACxF;IACD;QACI,IAAI,EAAE,cAAc;QACpB,YAAY,EAAE,GAAG,EAAE,CAAC,ieAA4C,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC;KACvG;IACD;QACI,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,GAAG,EAAE,CAAC,0NAAoC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC;KAC3F;IACD;QACI,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,GAAG,EAAE,CAAC,8WAAwC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC;KAChG;IACD;QACI,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,GAAG,EAAE,CAAC,swBAAwC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC;KAChG;IACD;QACI,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,GAAG,EAAE,CAAC,uhBAAoC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC;KAC3F;IACD;QACI,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CAAC,4mBAAkC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC;KACxF;IACD;QACI,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,GAAG,EAAE,CAAC,0nBAAoC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC;KAC3F;IACD;QACI,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,GAAG,EAAE,CAAC,knBAAoC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC;KAC3F;IACD;QACI,IAAI,EAAE,cAAc;QACpB,YAAY,EAAE,GAAG,EAAE,CACf,urDAAsD,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,qBAAqB,CAAC;KACpG;IACD;QACI,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,GAAG,EAAE,CAAC,wiDAAkD,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,oBAAoB,CAAC;KAC/G;IACD;QACI,IAAI,EAAE,cAAc;QACpB,YAAY,EAAE,GAAG,EAAE,CAAC,uoDAA0C,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC;KACnG;IACD;QACI,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,GAAG,EAAE,CAAC,ySAA4B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC;KAC/E;IACD;QACI,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,GAAG,EAAE,CAAC,wMAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC;KAClF;IACD;QACI,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,GAAG,EAAE,CAAC,kPAA4C,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC;KACvG;IACD;QACI,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CAAC,qKAAkC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC;KACxF;IACD;QACI,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,GAAG,EAAE,CAAC,yJAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC;KAClF;IACD;QACI,IAAI,EAAE,eAAe;QACrB,YAAY,EAAE,GAAG,EAAE,CAAC,yMAA8C,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,mBAAmB,CAAC;KAC1G;IACD;QACI,IAAI,EAAE,YAAY;QAClB,YAAY,EAAE,GAAG,EAAE,CAAC,mfAAkD,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,oBAAoB,CAAC;KAC/G;IACD;QACI,IAAI,EAAE,cAAc;QACpB,OAAO,EAAE,CAAC,2FAAqB,CAAC;QAChC,YAAY,EAAE,GAAG,EAAE,CAAC,koCAA4C,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC;KACvG;IACD;QACI,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,GAAG,EAAE,CAAC,yZAAoC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC;KAC3F;IACD,uBAAuB;IACvB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,UAAU,EAAE,OAAO;KACtB;IACD,sCAAsC;IACtC;QACI,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,oFAAiB;KAC/B;CACJ;IAQY,gBAAgB,SAAhB,gBAAgB;CAAG;AAAnB,gBAAgB;IAN5B,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,kBAAkB,EAAE,iEAAiB,EAAE,yBAAyB,EAAE,SAAS,EAAE,CAAC;SAChH;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;AC3G7B;AAAA;AAAA;AAAuD;AAEhD,MAAM,IAAI;IAmCb,YAAY,IAAoB;QAC5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;QACzB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,mEAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAChE;IACL,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;AC3D0F;AAC/B;AAEkB;IA+BjE,eAAe,SAAf,eAAe;IAIxB,YAAoB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAHlC,WAAM,GAAY,EAAE;IAGiB,CAAC;IAEtC,QAAQ;QACX,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC/D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC;IACN,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE;IACxC,CAAC;IAEM,IAAI,CAAC,KAAY;QACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,EAC7C,CAAC,CACJ;IACL,CAAC;IAEM,SAAS,CAAC,KAAY;QACzB,IAAI,KAAK,CAAC,OAAO,EAAE;YACf,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC;SAC9B;IACL,CAAC;IAEM,UAAU,CAAC,KAAY;QAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACrB,KAAK,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAC5D,CAAC;CACJ;;YAjEe,6EAAa;;AA+BhB,eAAe;IA7B3B,+DAAS,CAAC;QACP,QAAQ,EAAE,QAAQ;QAClB,mFAAoC;QACpC,UAAU,EAAE;YACR,mEAAO,CAAC,UAAU,EAAE;gBAChB,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAAC,CAAC;gBACtD,sEAAU,CAAC,QAAQ,EAAE;oBACjB,mEAAO,CACH,GAAG,EACH,qEAAS,CAAC;wBACN,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;wBAChE,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;wBAChE,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;qBAC/D,CAAC,CACL;iBACJ,CAAC;gBACF,sEAAU,CAAC,QAAQ,EAAE;oBACjB,mEAAO,CACH,GAAG,EACH,qEAAS,CAAC;wBACN,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;wBAC5D,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,mBAAmB,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;wBAClE,iEAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;qBAClE,CAAC,CACL;iBACJ,CAAC;aACL,CAAC;SACL;KACJ,CAAC;GACW,eAAe,CAkC3B;AAlC2B;;;;;;;;;;;;;AClC5B;AAAe,2MAA4I,8CAA8C,gPAAgP,6BAA6B,4CAA4C,uBAAuB,2BAA2B,4CAA4C,6BAA6B,0CAA0C,2BAA2B,2BAA2B,qEAAqE,sEAAsE,GAAG,+BAA+B,6CAA6C,2CAA2C,0GAA0G,qCAAqC,qEAAqE,6EAA6E,GAAG,+BAA+B,6CAA6C,yCAAyC,sEAAsE,sDAAsD,8BAA8B,8CAA8C,0CAA0C,mHAAmH,6BAA6B,4CAA4C,uBAAuB,2BAA2B,+CAA+C,6BAA6B,0CAA0C,2BAA2B,2BAA2B,qEAAqE,sEAAsE,GAAG,+BAA+B,6CAA6C,2CAA2C,8KAA8K,8CAA8C,sDAAsD,sGAAsG,gBAAgB,+CAA+C,kFAAkF,4GAA4G,gBAAgB,kDAAkD,0SAA0S,mBAAmB,sDAAsD,8DAA8D,+BAA+B,2PAA2P,oBAAoB,sDAAsD,8DAA8D,gCAAgC,qLAAqL,4FAA4F,oIAAoI,+CAA+C,8BAA8B,oBAAoB,kGAAkG,0CAA0C,gCAAgC,oBAAoB,gGAAgG,wCAAwC,iCAAiC,oBAAoB,sJAAsJ,wCAAwC,2KAA2K,WAAW,0BAA0B,8BAA8B,yCAAyC,wHAAwH,wCAAwC,6BAA6B,wCAAwC,mBAAmB,0CAA0C,4FAA4F,wCAAwC,6BAA6B,wCAAwC,mBAAmB,yCAAyC,gOAAgO,cAAc,8HAA8H,qbAAqb,aAAa,wFAAwF,eAAe,uCAAuC,E;;;;;;;;;;;;;;;;;;ACA9iN;AACc;IAGpD,WAAW,SAAX,WAAW;IACpB,YAAoB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAAG,CAAC;IAExC,SAAS,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC;IACvD,CAAC;CACJ;;YATQ,sEAAY;;AAGR,WAAW;IADvB,0DAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;GACb,WAAW,CAMvB;AANuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJyB;AACA;AACK;AAClB;AACS;AACH;AAEkB;AAkB5D,IAAK,eASJ;AATD,WAAK,eAAe;IAChB,uEAAoD;IACpD,uEAAoD;IACpD,uEAAoD;IACpD,uEAAoD;IACpD,uEAAoD;IACpD,gEAA6C;IAC7C,wEAAqD;IACrD,sEAAmD;AACvD,CAAC,EATI,eAAe,KAAf,eAAe,QASnB;IAMY,wBAAwB,SAAxB,wBAAwB;IAmBjC,YAAsB,IAAgB,EAAS,OAAuB,EAAS,SAA2B;QAApF,SAAI,GAAJ,IAAI,CAAY;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAkB;QAlBnG,aAAQ,GAAoB;YAC/B,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;YACZ,aAAa,EAAE,IAAI;YACnB,EAAE,EAAE,IAAI;YACR,kBAAkB,EAAE,IAAI;YACxB,cAAc,EAAE,IAAI;YACpB,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,IAAI;YACZ,kBAAkB,EAAE,IAAI;YACxB,oBAAoB,EAAE,IAAI;YAC1B,iBAAiB,EAAE,IAAI;YACvB,aAAa,EAAE,IAAI;YACnB,cAAc,EAAE,IAAI;SACvB;QAEO,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAEmE,CAAC;IAEvG,QAAQ;QACX,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,OAAO,CAAC,UAAU;aAClB,IAAI,CACD,gEAAS,CAAC,IAAI,CAAC,EAAE,CACb,qDAAQ,CAAmC;YACvC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,UAAU,IAAI,CAAC,EAAE,eAAe,EAAE;gBACpD,MAAM,EAAE;oBACJ,YAAY,EAAE,KAAK;iBACtB;aACJ,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,UAAU,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,eAAe,CAAC;SAC7E,CAAC,CACL,CACJ;aACA,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,eAAe,CAAC,EAAE,EAAE;YACnC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,IAAI;YAC/D,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,IAAI;YAEhG,IAAI,CAAC,eAAe,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE,cAAc,CAAC;aACzE;iBAAM;gBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,OAAO,EAAE,cAAc,CAAC;aACpF;QACL,CAAC,CAAC,CACT;IACL,CAAC;IAEM,kBAAkB,CACrB,WAAgC,EAChC,QAAqB,EACrB,cAA2B;QAE3B,QAAQ,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,YAAY,EAAE;YAC/B,KAAK,eAAe,CAAC,WAAW;gBAC5B,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,GAAG;oBACX,aAAa,EAAE,KAAK;oBACpB,EAAE,EAAE,MAAM;oBACV,kBAAkB,EAAE,MAAM;oBAC1B,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,GAAG;oBACZ,MAAM,EAAE,GAAG;oBACX,kBAAkB,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI;oBACtD,oBAAoB,EAAE,QAAQ;oBAC9B,iBAAiB,EAAE,OAAO;oBAC1B,aAAa,EAAE,MAAM;oBACrB,cAAc;iBACjB;YACL,KAAK,eAAe,CAAC,WAAW;gBAC5B,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,GAAG;oBACX,aAAa,EAAE,KAAK;oBACpB,EAAE,EAAE,MAAM;oBACV,kBAAkB,EAAE,MAAM;oBAC1B,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,MAAM;oBACf,MAAM,EAAE,MAAM;oBACd,kBAAkB,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI;oBACtD,oBAAoB,EAAE,QAAQ;oBAC9B,iBAAiB,EAAE,OAAO;oBAC1B,aAAa,EAAE,MAAM;oBACrB,cAAc;iBACjB;YACL,KAAK,eAAe,CAAC,WAAW;gBAC5B,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,GAAG;oBACX,aAAa,EAAE,KAAK;oBACpB,EAAE,EAAE,MAAM;oBACV,kBAAkB,EAAE,MAAM;oBAC1B,cAAc,EAAE,GAAG;oBACnB,OAAO,EAAE,GAAG;oBACZ,MAAM,EAAE,GAAG;oBACX,kBAAkB,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI;oBACtD,oBAAoB,EAAE,QAAQ;oBAC9B,iBAAiB,EAAE,OAAO;oBAC1B,aAAa,EAAE,MAAM;oBACrB,cAAc;iBACjB;YACL,KAAK,eAAe,CAAC,WAAW;gBAC5B,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,IAAI;oBACZ,aAAa,EAAE,GAAG;oBAClB,EAAE,EAAE,MAAM;oBACV,kBAAkB,EAAE,IAAI;oBACxB,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,GAAG;oBACZ,MAAM,EAAE,GAAG;oBACX,kBAAkB,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI;oBACtD,oBAAoB,EAAE,QAAQ;oBAC9B,iBAAiB,EAAE,OAAO;oBAC1B,aAAa,EAAE,MAAM;oBACrB,cAAc;iBACjB;YACL,KAAK,eAAe,CAAC,WAAW;gBAC5B,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,GAAG;oBACX,aAAa,EAAE,KAAK;oBACpB,EAAE,EAAE,MAAM;oBACV,kBAAkB,EAAE,MAAM;oBAC1B,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,MAAM;oBACf,MAAM,EAAE,MAAM;oBACd,kBAAkB,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI;oBACtD,oBAAoB,EAAE,QAAQ;oBAC9B,iBAAiB,EAAE,OAAO;oBAC1B,aAAa,EAAE,MAAM;oBACrB,cAAc;iBACjB;YACL,KAAK,eAAe,CAAC,IAAI;gBACrB,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,GAAG;oBACX,aAAa,EAAE,KAAK;oBACpB,EAAE,EAAE,MAAM;oBACV,kBAAkB,EAAE,GAAG;oBACvB,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,GAAG;oBACZ,MAAM,EAAE,GAAG;oBACX,kBAAkB,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI;oBACtD,oBAAoB,EAAE,QAAQ;oBAC9B,iBAAiB,EAAE,OAAO;oBAC1B,aAAa,EAAE,MAAM;oBACrB,cAAc;iBACjB;YACL,KAAK,eAAe,CAAC,UAAU;gBAC3B,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,GAAG;oBACX,aAAa,EAAE,KAAK;oBACpB,EAAE,EAAE,MAAM;oBACV,kBAAkB,EAAE,MAAM;oBAC1B,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,GAAG;oBACZ,MAAM,EAAE,GAAG;oBACX,kBAAkB,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI;oBACtD,oBAAoB,EAAE,QAAQ;oBAC9B,iBAAiB,EAAE,OAAO;oBAC1B,aAAa,EAAE,MAAM;oBACrB,cAAc;iBACjB;YACL,KAAK,eAAe,CAAC,YAAY;gBAC7B,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,GAAG;oBACX,aAAa,EAAE,KAAK;oBACpB,EAAE,EAAE,MAAM;oBACV,kBAAkB,EAAE,MAAM;oBAC1B,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,GAAG;oBACZ,MAAM,EAAE,GAAG;oBACX,kBAAkB,EAAE,WAAW,CAAC,cAAc,IAAI,IAAI;oBACtD,oBAAoB,EAAE,QAAQ;oBAC9B,iBAAiB,EAAE,OAAO;oBAC1B,aAAa,EAAE,MAAM;oBACrB,cAAc;iBACjB;YACL;gBACI,OAAO;oBACH,QAAQ;oBACR,MAAM,EAAE,IAAI;oBACZ,aAAa,EAAE,IAAI;oBACnB,EAAE,EAAE,IAAI;oBACR,kBAAkB,EAAE,IAAI;oBACxB,cAAc,EAAE,IAAI;oBACpB,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,IAAI;oBACZ,kBAAkB,EAAE,IAAI;oBACxB,oBAAoB,EAAE,IAAI;oBAC1B,iBAAiB,EAAE,IAAI;oBACvB,aAAa,EAAE,IAAI;oBACnB,cAAc,EAAE,IAAI;iBACvB;SACR;IACL,CAAC;IAEM,SAAS,CAAC,GAAW;QACxB,OAAO,IAAI,mDAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;IACtC,CAAC;IAEM,aAAa,CAAC,IAA2B;QAC5C,IAAI,MAAM,GAAG,EAAE;QACf,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAS;QACvC,IACI,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC;YACvD,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EACxD;YACE,IAAI,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACzC,MAAM,IAAI,IAAI,mDAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM;aACzD;YACD,IAAI,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC1F,MAAM,IAAI,KAAK;aAClB;YACD,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC/C,MAAM,IAAI,IAAI,mDAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;aACpE;SACJ;aAAM;YACH,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE;SAC/D;QACD,OAAO,MAAM;IACjB,CAAC;CACJ;;YA3QQ,+DAAU;YAOV,wEAAc;YALd,oEAAgB;;AAsCZ,wBAAwB;IAJpC,+DAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,8FAA+C;KAClD,CAAC;GACW,wBAAwB,CAmOpC;AAnOoC;;;;;;;;;;;;;;;;;;;ACxCK;AAC6B;IAO1D,eAAe,SAAf,eAAgB,SAAQ,2DAA4B;IAC7D;QACI,KAAK,EAAE;IACX,CAAC;CACJ;;AAJY,eAAe;IAF3B,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;IAClC,mEAAW,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;GACtC,eAAe,CAI3B;AAJ2B;;;;;;;;;;;;;;;;;;;;;;;ACR4E;AAC9D;AACE;AACQ;AACK;AACE;IAG9C,uBAAuB,SAAvB,uBAAuB;IAEhC,YAAoB,OAAuB,EAAU,MAAqB;QAAtD,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;QAD1D,uBAAkB,GAAG,CAAC,QAAQ,CAAC;IAC8B,CAAC;IAEvE,SAAS,CAAC,GAAqB,EAAE,IAAiB;QACrD,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CACrB,gEAAS,CAAC,GAAG,EAAE;YACX,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,GAAG,EAAE,EAAE;gBACnF,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,+DAAQ,CAAC,GAAG,EAAE,CAAC,0CAAK,CAAC,CAAC;aAC1D;YACD,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,IAAI,gEAAW,EAAE;YAC9C,IAAI,GAAG,CAAC,GAAG,KAAK,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;gBACvF,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aACzE;YACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;QACtE,CAAC,CAAC,CACL;IACL,CAAC;CACJ;;YArBQ,wEAAc;YADd,sEAAa;;AAIT,uBAAuB;IADnC,gEAAU,EAAE;GACA,uBAAuB,CAkBnC;AAlBmC;;;;;;;;;;;;;;;;;;ACRe;IAGtC,YAAY,SAAZ,YAAY;IACd,SAAS,CAAC,KAAgC,EAAE,QAAQ,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,KAAK;QACvF,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,EAAE;SACZ;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE;YACrB,OAAO,KAAK;SACf;QACD,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;QAC5B,IAAI,QAAQ,EAAE;YACV,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;YACxC,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;gBAClB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC;gBAClC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;oBACjC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC5C;aACJ;SACJ;QACD,OAAO,KAAK,GAAG,IAAI;IACvB,CAAC;CACJ;AApBY,YAAY;IADxB,0DAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;GACd,YAAY,CAoBxB;AApBwB;;;;;;;;;;;;;;;;;;;;ACHuB;IAOnC,sBAAsB,SAAtB,sBAAsB;CAGlC;;mBAFI,mDAAK;;AADG,sBAAsB;IAJlC,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,2FAA4C;KAC/C,CAAC;GACW,sBAAsB,CAGlC;AAHkC;;;;;;;;;;;;;;;;;;;;;;;;;;ACPM;AACkB;AACL;AACkB;AACJ;AACG;AACA;IAG1D,yBAAyB,SAAzB,yBAAyB;IAClC,YACW,WAA2B,EAC1B,aAA4B,EAC5B,MAAqB,EACtB,OAAuB,EACtB,YAA0B,EAC3B,SAA2B;QAL3B,gBAAW,GAAX,WAAW,CAAgB;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;QACtB,YAAO,GAAP,OAAO,CAAgB;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC3B,cAAS,GAAT,SAAS,CAAkB;IACnC,CAAC;IAEG,MAAM;QACT,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QAClF,CAAC,CAAC;IACN,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC;QAC/F,CAAC,CAAC;IACN,CAAC;CACJ;;YA7BQ,yEAAc;YAId,6EAAa;YACb,6EAAa;YAHb,sFAAc;YACd,kFAAY;YAFZ,oEAAgB;;AAOZ,yBAAyB;IADrC,+DAAS,CAAC,EAAE,QAAQ,EAAE,oBAAoB,EAAE,+FAAgD,EAAE,CAAC;GACnF,yBAAyB,CAqBrC;AArBqC;;;;;;;;;;;;;;;;;;;;;ACT4B;AACE;IAOvD,iBAAiB,SAAjB,iBAAkB,SAAQ,gFAAiB;CAAG;AAA9C,iBAAiB;IAL7B,+DAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,sFAAuC;QACvC,eAAe,EAAE,qEAAuB,CAAC,MAAM;KAClD,CAAC;GACW,iBAAiB,CAA6B;AAA7B;;;;;;;;;;;;;ACP9B;AAAA;AAAA;AAAmC;AAE5B,MAAM,OAAO;IAKhB,YAAY,OAAiB,EAAc;QACvC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;QACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,GAAG,IAAI,gDAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,GAAG,IAAI,gDAAI,CAAC,IAAI,CAAC,WAAW,CAAC;SAChD;IACL,CAAC;CACJ;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AAC4B;AACP;AAC/B;AACQ;AAE5C,SAAS,iBAAiB;IACtB,+BAA+B;IAC/B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,gCAAgC,CAAC;IACxD,OAAO,CAAC,GAAG,CACP,qKAAqK,EACrK,kBAAkB,CACrB;IACD,OAAO,CAAC,GAAG,CAAC,uEAAuE,EAAE,eAAe,CAAC;IACrG,8BAA8B;AAClC,CAAC;AAED,CAAC;AAAC,MAAc,CAAC,IAAI,GAAG,GAAG,EAAE;IACzB,sCAAsC;IACtC,OAAO,CAAC,GAAG,CAAC,iEAAiE,EAAE,aAAa,CAAC;AACjG,CAAC;AAED,mDAAS,CAAC,MAAM,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;AAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;IACf,oEAAc,EAAE;IAChB,2EAAmB,EAAE;IACrB,iBAAiB,EAAE;CACtB;AAED,MAAM,OAAO,GAAG,oEAAY,EAAE;AAE9B,MAAM,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;AAEpE,gGAAsB,CAAC,SAAS,CAAC;KAC5B,eAAe,CAAC,yDAAS,CAAC;IAC3B,sCAAsC;KACrC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;ACpCzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { CopyIconComponent } from '../copy-icon/copy-icon.component'\nimport { CopierService } from '../services/copier.service'\n\n@Component({\n    selector: 'copy-btn',\n    templateUrl: 'copy-btn.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CopyButtonComponent extends CopyIconComponent {\n    @Input()\n    public disabled: boolean\n\n    constructor(copier: CopierService, changeDetector: ChangeDetectorRef, public translate: TranslateService) {\n        super(copier, changeDetector)\n    }\n}\n","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"mt-5 row justify-content-center\\\">\\n        <div class=\\\"col-md-12 col-24\\\">\\n            <h1>🧐 404!</h1>\\n            <h4 class=\\\"pt-3\\\">{{ 'common.you-lost' | translate }}</h4>\\n            <p>\\n                {{ 'common.the-page' | translate }}\\n            </p>\\n            <a class=\\\"btn btn-outline-secondary\\\" [routerLink]=\\\"['/dashboard']\\\">{{ 'common.back' | translate }}</a>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \".dropdown-toggle::after {\\n  content: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2N1cnJlbmN5LXNlbGVjdC10YWIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0FBQ0YiLCJmaWxlIjoiY3VycmVuY3ktc2VsZWN0LXRhYi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wZG93bi10b2dnbGU6OmFmdGVyIHtcbiAgY29udGVudDogbm9uZTtcbn1cbiJdfQ== */\";","import { Directive, Input } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\n\n@Directive({\n    selector: '[customValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true }],\n})\nexport class CustomValidatorDirective implements Validator {\n    @Input()\n    public customValidator: (value: string) => string | null\n\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (this.customValidator(control.value)) {\n            return { customError: true }\n        }\n        return null\n    }\n}\n","import BigNumber from 'bignumber.js'\nimport * as Color from 'color'\nimport { CurrencyType, ICurrency, IFee } from '../../api-interfaces'\n\nconst style = getComputedStyle(document.body)\nconst color = Color(style.getPropertyValue('--primary').trim())\n\nexport class Currency implements ICurrency {\n    public code: string\n    public type: CurrencyType\n    public name: string\n    public exchangeRate: string\n    public hasCardProgram: boolean\n    public decimalPlaces: number\n    public depositable: boolean\n    public holdable: boolean\n    public transferable: boolean\n    public withdrawable: boolean\n    public createdAt: string\n    public updatedAt: string\n    public color: string\n\n    constructor(data: ICurrency) {\n        Object.assign(this, data)\n    }\n\n    public static convert(\n        amount: string | number,\n        baseCurrency: ICurrency,\n        counterCurrency: ICurrency,\n        spreadFee?: IFee,\n        spreadUp = true\n    ): string {\n        let exchangeRate = Currency.calculateExchangeRate(baseCurrency, counterCurrency)\n        if (baseCurrency.code !== counterCurrency.code && spreadFee && spreadFee.relative) {\n            if (spreadUp) {\n                exchangeRate = new BigNumber(exchangeRate).times(new BigNumber(1).plus(spreadFee.relative))\n            } else {\n                exchangeRate = new BigNumber(exchangeRate).times(new BigNumber(1).minus(spreadFee.relative))\n            }\n        }\n        return new BigNumber(amount).times(exchangeRate).toFixed(8, 1)\n    }\n\n    public static calculateExchangeRate(baseCurrency: ICurrency, counterCurrency: ICurrency): BigNumber {\n        return new BigNumber(counterCurrency.exchangeRate).div(baseCurrency.exchangeRate)\n    }\n\n    public getColor(factor = 0): string {\n        return this.color || color.lighten((factor % 7) * 0.08).hex()\n    }\n}\n","import { Component } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { environment } from 'src/environments/environment'\nimport { SessionService, User } from '../services/session.service'\n\n@Component({\n    selector: 'welcome',\n    templateUrl: 'welcome.component.html',\n})\nexport class WelcomeComponent {\n    public get user(): User {\n        return this.session.user\n    }\n    public displayName = environment.displayName\n\n    constructor(private session: SessionService, private activeModal: NgbActiveModal) {}\n\n    public close(): void {\n        this.activeModal.close()\n    }\n    public dismiss(): void {\n        this.activeModal.dismiss()\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { faBell } from '@fortawesome/pro-light-svg-icons'\nimport { IconDefinition } from '@fortawesome/pro-solid-svg-icons'\nimport { Disposable } from '../disposable'\n\nexport enum AlertTag {\n    VERIFICATION = 'verification',\n}\n\nexport interface Alert {\n    severity: string\n    message: string\n    icon?: IconDefinition\n    tag?: AlertTag\n    callToAction?: {\n        label: string\n        route: string\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AlertService {\n    public alerts: Alert[] = []\n\n    public add(alert: Alert): Disposable {\n        if (!alert.icon) {\n            alert.icon = faBell\n        }\n        this.alerts.push(alert)\n        return {\n            dispose: () => {\n                this.remove(alert)\n            },\n        }\n    }\n\n    public remove(target: Alert): void {\n        const index = this.alerts.indexOf(target)\n        if (index !== -1) {\n            this.alerts.splice(index, 1)\n        }\n    }\n\n    public clearByTag(tag: AlertTag): void {\n        let index: number\n        do {\n            index = this.alerts.findIndex(alert => alert.tag === tag)\n            if (index !== -1) {\n                this.alerts.splice(index, 1)\n            }\n        } while (index !== -1)\n    }\n\n    public clear(): void {\n        this.alerts = []\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../../common/common.module'\nimport { StatusMessageOutletComponent } from './status-message-outlet.component'\nimport { StatusMessageComponent } from './status-message.component'\nimport { StatusMessageService } from './status-message.service'\n\n@NgModule({\n    declarations: [StatusMessageComponent, StatusMessageOutletComponent],\n    providers: [StatusMessageService],\n    imports: [CommonModule],\n    exports: [StatusMessageComponent, StatusMessageOutletComponent],\n})\nexport class StatusMessageModule {}\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\n\n@Directive({\n    selector: '[nameValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: NameValidatorDirective, multi: true }],\n})\nexport class NameValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (!!control.value?.match(/[0-9!$%^&*()_+|~=`{}[:;<>?@#\\]]/g)) {\n            return { nameError: true }\n        }\n        return null\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { NavigationStart, Router } from '@angular/router'\nimport { faAngleDown, faBars, faClock, faSearch, faUserCircle } from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { filter, map } from 'rxjs/operators'\nimport { countriesSortedByName } from 'src/app/common/countries'\nimport { LogoutService } from '../../../common/services/logout.service'\nimport { SessionService } from '../../../common/services/session.service'\nimport { ToastrService } from '../../../common/services/toastr.service'\nimport { LogoutTimerService } from '../logout-timer/logout-timer.service'\nimport { MenuService, MobileNavLayout, SidebarLayout } from '../menu/menu.service'\n\n@Component({\n    selector: 'app-header',\n    templateUrl: 'header.component.html',\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n    public faAngleDown = faAngleDown\n    public faBars = faBars\n    public faSearch = faSearch\n    public faUserCircle = faUserCircle\n    public faClock = faClock\n\n    public countriesSortedByName = countriesSortedByName\n\n    public languages = ['en', 'kr']\n\n    public sessionTimeLeft$ = this.logoutTimerService.leftInMinutes$.pipe(\n        map(minutes => {\n            if (minutes > 60) {\n                const hh = Math.floor(minutes / 60)\n                const mm = minutes % 60\n                return (hh ? hh + 'h' : '') + (hh && mm ? ' ' : '') + (mm ? mm + 'min' + (mm === 1 ? '' : 's') : '')\n            }\n            return minutes + 'min' + (minutes === 1 ? '' : 's')\n        })\n    )\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private logoutService: LogoutService,\n        private toastr: ToastrService,\n        public session: SessionService,\n        public router: Router,\n        private menuService: MenuService,\n        public logoutTimerService: LogoutTimerService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.router.events.pipe(filter(event => event instanceof NavigationStart)).subscribe(() => {\n                this.menuService.mobileNav = MobileNavLayout.HIDDEN\n            })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public logout(): void {\n        this.subscriptions.add(\n            this.logoutService.logout().subscribe(() => {\n                this.toastr.success(this.translate.instant('common.you-have-been-logged-out'))\n            })\n        )\n    }\n\n    public openMobileNav(): void {\n        this.menuService.mobileNav = MobileNavLayout.VISIBLE\n        this.menuService.sidebar = SidebarLayout.DEFAULT\n    }\n\n    public toggleSidebar(): void {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        this.menuService.sidebar === SidebarLayout.TOGGLED\n            ? (this.menuService.sidebar = SidebarLayout.DEFAULT)\n            : (this.menuService.sidebar = SidebarLayout.TOGGLED)\n    }\n\n    public changeLanguage(language: string): void {\n        this.translate.use(language)\n        localStorage.setItem('lang', language)\n    }\n\n    public getCountryEmoji(lang: string): string {\n        let alpha2: string\n\n        switch (lang) {\n            case 'en':\n                alpha2 = 'US'\n                break\n            case 'kr':\n                alpha2 = 'KR'\n                break\n            default:\n                break\n        }\n        return this.countriesSortedByName.find(country => country.alpha2 === alpha2)?.emoji || ''\n    }\n\n    public mapCountryName(lang: string): string {\n        switch (lang) {\n            case 'en':\n                return 'English'\n            case 'kr':\n                return 'Korean'\n            default:\n                return ''\n        }\n    }\n}\n","import {\n    animate,\n    state as animationState,\n    style,\n    transition as animationTransition,\n    trigger,\n} from '@angular/animations'\nimport { Component, OnDestroy } from '@angular/core'\nimport { NavigationStart, Router } from '@angular/router'\nimport { faAngleDown } from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { combineLatest, Observable, Subscription } from 'rxjs'\nimport { filter, flatMap, map, switchMap, take } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { ICurrency, Wallet } from '../../../../common/api-interfaces'\nimport { UserService } from '../../../../common/services/core/user.service'\nimport { SessionService, User } from '../../../../common/services/session.service'\nimport { ToastrService } from '../../../../common/services/toastr.service'\nimport { TokenService } from '../../../../common/services/token.service'\nimport { WalletsQuery } from '../../../../store/wallets/wallets.query'\n\n@Component({\n    selector: 'menu-profile',\n    templateUrl: 'menu-profile.component.html',\n    animations: [\n        trigger('toggleBalances', [\n            animationState('false', style({ height: '0px' })),\n            animationState('true', style({ height: '*' })),\n            animationTransition('1 => 0', animate('280ms ease-in')),\n            animationTransition('0 => 1', animate('280ms ease-out')),\n        ]),\n    ],\n})\nexport class MenuProfileComponent implements OnDestroy {\n    public faAngleDown = faAngleDown\n    public isOpen = false\n\n    public user$: Observable<User>\n    public currentBalance$: Observable<string>\n    public wallets$: Observable<(Wallet & { value: string })[]>\n\n    private subscriptions = new Subscription()\n    private appName = environment.appName\n\n    constructor(\n        private session: SessionService,\n        private toastr: ToastrService,\n        private userService: UserService,\n        private tokenService: TokenService,\n        private router: Router,\n        private walletsQuery: WalletsQuery,\n        public translate: TranslateService\n    ) {\n        this.user$ = this.session.userStream\n        this.wallets$ = this.walletsQuery.filteredBalances$\n        this.currentBalance$ = combineLatest(this.walletsQuery.selectAll(), this.session.userStream).pipe(\n            map(\n                ([wallets, user]) =>\n                    wallets.find(wallet => wallet.currency.code === user.preferredCurrency.code)?.availableBalance ||\n                    '0.00'\n            )\n        )\n        this.subscriptions.add(\n            this.router.events.pipe(filter(event => event instanceof NavigationStart)).subscribe(() => {\n                this.isOpen = false\n            })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public changePreferredCurrency(currency: ICurrency): void {\n        if (this.appName === 'sgpmx') {\n            return\n        }\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    take(1),\n                    filter(user => user.preferredCurrency.code !== currency.code),\n                    switchMap(user => this.userService.changePreferredCurrency(user.id, currency)),\n                    flatMap(() => this.tokenService.refresh())\n                )\n                .subscribe(() => {\n                    this.isOpen = false\n                    this.toastr.success(this.translate.instant('common.preferred-currency-changed'))\n                })\n        )\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { SafeUrl } from '@angular/platform-browser'\nimport { capitalize } from 'lodash'\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n    public transform(value: any): SafeUrl {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return capitalize(value)\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Observable, of } from 'rxjs'\nimport { catchError, finalize, map, tap } from 'rxjs/operators'\nimport { SessionService } from './session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LogoutService {\n    private logoutRequest: Observable<void> | undefined\n    constructor(\n        private http: HttpClient,\n        private session: SessionService,\n        private ngbModal: NgbModal,\n        private router: Router\n    ) {}\n\n    public logout(): Observable<void> {\n        if (!this.logoutRequest) {\n            this.logoutRequest = (\n                this.session.hasValidToken() && !!this.session.refreshToken\n                    ? this.http\n                          .delete<void>(\n                              `/users/${this.session.user.id}/refresh-tokens/${this.session.refreshToken.id}`,\n                              {\n                                  headers: { 'X-No-Logout': 'true' },\n                              }\n                          )\n                          // mute errors of refresh token deletion, logout should happen anyways\n                          .pipe(catchError(() => of(undefined)))\n                    : of(undefined)\n            ).pipe(\n                tap(() => {\n                    if (this.session.getExpiryTimeInSeconds() < 15) {\n                        this.router.navigateByUrl(this.router.parseUrl('/login?redirect=' + this.router.url))\n                    } else {\n                        this.router.navigate(['/login'])\n                    }\n                    this.session.logout()\n                    this.ngbModal.dismissAll()\n                }),\n                map(() => undefined),\n                finalize(() => {\n                    this.logoutRequest = undefined\n                })\n            )\n        }\n        return this.logoutRequest\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { cloneDeep } from 'lodash'\nimport { Subject, Subscription } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, filter, finalize, flatMap, switchMap, tap } from 'rxjs/operators'\nimport { BeneficiaryMethod, BeneficiaryType, IUser, Paginated } from '../../common/api-interfaces'\nimport { Beneficiary } from '../models/accounting/beneficiary.model'\nimport { Currency } from '../models/accounting/currency.model'\nimport { User } from '../models/core/user.model'\nimport { ConfirmationResult, ConfirmationService } from '../services/confirmation.service'\nimport { ToastrService } from '../services/toastr.service'\nimport { BeneficiaryDetailsFormComponent } from './beneficiary-details-form/beneficiary-details-form.component'\n\n@Component({\n    selector: 'beneficiary-form',\n    templateUrl: 'beneficiary-form.component.html',\n})\nexport class BeneficiaryFormComponent implements OnInit, OnDestroy {\n    @Input()\n    public item: Beneficiary\n    @Input()\n    public compact = false\n    @Input()\n    public fixateType = false\n    @Input()\n    public hideFields: ('owner' | 'type' | 'method' | 'currency')[] = []\n    @Output()\n    public readonly onSave = new EventEmitter<void>()\n    @Output()\n    public readonly onDelete = new EventEmitter<void>()\n    @Output()\n    public readonly onDiscard = new EventEmitter<void>()\n\n    public copy: Partial<Beneficiary> = {}\n    @ViewChild('beneficiaryForm')\n    public beneficiaryForm: NgForm\n    @ViewChild('beneficiaryDetailsForm')\n    public beneficiaryDetailsForm: BeneficiaryDetailsFormComponent\n\n    public isSaving = false\n    public isDeleting = false\n    public isUpdatingVerification = false\n\n    public beneficiaryTypes: BeneficiaryType[] = ['template', 'deposit-instruction']\n    @Input()\n    public beneficiaryMethods: BeneficiaryMethod[] = ['swift', 'local', 'crypto']\n\n    public currencies: Currency[] = []\n    public owner?: IUser = undefined\n    public ownerAutocomplete = new EventEmitter<string>()\n    public legalEntitiesSteam = this.ownerAutocomplete.pipe(\n        distinctUntilChanged(),\n        debounceTime(200),\n        switchMap(search =>\n            this.http.get<IUser[]>('/users', {\n                params: new HttpParams().set('limit', '25').set('search', search),\n            })\n        )\n    )\n\n    private fetchEvent = new Subject<void>()\n    private fetchCurrenciesEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        private toastr: ToastrService,\n        public activeModal: NgbActiveModal,\n        private confirmation: ConfirmationService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.fetchEvent\n                .pipe(switchMap(() => this.http.get<Beneficiary>(`/beneficiaries/${this.item.id}`)))\n                .subscribe(beneficiary => {\n                    this.item = beneficiary\n                    this.copy = cloneDeep(this.item)\n                    if (this.item.user) {\n                        this.owner = new User(this.item.user)\n                    }\n                    this.fetchCurrenciesEvent.next()\n                })\n        )\n        this.subscriptions.add(\n            this.fetchCurrenciesEvent\n                .pipe(\n                    switchMap(() =>\n                        this.http.get<Paginated<Currency>>('/currencies?limit=100', {\n                            params: {\n                                'filter.type': this.copy.method === 'crypto' ? 'crypto' : 'fiat',\n                            },\n                        })\n                    )\n                )\n                .subscribe(response => {\n                    this.currencies = response.data\n                    if (this.copy && this.copy.currency) {\n                        // don't break reference\n                        this.copy.currency = this.currencies.find(c => c.code === this.copy.currency!.code)! || null\n                    }\n                })\n        )\n\n        if (this.item && this.item.id) {\n            this.fetchEvent.next()\n        } else {\n            this.copy = cloneDeep(this.item)\n            if (this.item.user) {\n                this.owner = new User(this.item.user)\n            }\n            this.fetchCurrenciesEvent.next()\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public delete(): void {\n        this.subscriptions.add(\n            this.confirmation\n                .show({\n                    type: 'danger',\n                    text: `${this.translate.instant(\n                        'common.are-you-sure-want-to-delete-beneficiary'\n                    )}<br>${this.translate.instant('common.you-cant-undo-action')}`,\n                    confirmText: this.translate.instant('common.delete'),\n                    confirmClass: 'danger',\n                })\n                .pipe(\n                    filter(result => result === ConfirmationResult.CONFIRMED),\n                    flatMap(() => {\n                        this.isDeleting = true\n                        return this.http.delete<void>(`/beneficiaries/${this.item.id}`)\n                    }),\n                    finalize(() => {\n                        this.isDeleting = false\n                    })\n                )\n                .subscribe(() => {\n                    this.onDelete.emit()\n                    this.toastr.success(this.translate.instant('common.beneficiary-deleted'))\n                })\n        )\n    }\n\n    public submit(): void {\n        this.beneficiaryDetailsForm.submit()\n        if (this.beneficiaryForm.invalid || !this.beneficiaryDetailsForm.isValid()) {\n            throw new Error(this.translate.instant('common.form-invalid'))\n        }\n        const body = {\n            ...this.copy,\n            user: this.owner ? { id: this.owner?.id } : null,\n            currency: {\n                code: this.copy.currency?.code ?? null,\n            },\n        }\n        this.isSaving = true\n        this.subscriptions.add(\n            (this.item.id\n                ? this.http.put<Beneficiary>(`/beneficiaries/${this.item.id}`, body)\n                : this.http.post<Beneficiary>('/beneficiaries', body)\n            )\n                .pipe(\n                    tap(beneficiary => (this.item = beneficiary)),\n                    finalize(() => {\n                        this.isSaving = false\n                    })\n                )\n                .subscribe(() => {\n                    this.toastr.success(\n                        `${\n                            this.copy.id\n                                ? this.translate.instant('common.beneficiary-updated')\n                                : this.translate.instant('common.beneficiary-created')\n                        }`\n                    )\n                    this.fetchEvent.next()\n                    this.onSave.emit()\n                })\n        )\n    }\n\n    public onChangeMethod(method: BeneficiaryMethod): void {\n        switch (method) {\n            case 'swift':\n            case 'local':\n                if (this.copy.currency && this.copy.currency.type !== 'fiat') {\n                    this.copy.currency = undefined\n                }\n                break\n            case 'crypto':\n                if (this.copy.currency && this.copy.currency.type !== 'crypto') {\n                    this.copy.currency = undefined\n                }\n                break\n        }\n        this.fetchCurrenciesEvent.next()\n    }\n}\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\nimport isHexColor from 'validator/lib/isHexColor'\n\n@Directive({\n    selector: '[colorValidator][formControlName], [colorValidator][formControl], [colorValidator][ngModel]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: ColorValidatorDirective, multi: true }],\n})\nexport class ColorValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        const color = control.value\n        if (color && !isHexColor(color)) {\n            return { colorError: true }\n        }\n        return null\n    }\n}\n","import { Directive, ElementRef, Input } from '@angular/core'\nimport { NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\n\n@Directive({\n    selector: '[matchPassword]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: MatchPasswordDirective, multi: true }],\n})\nexport class MatchPasswordDirective implements Validator {\n    @Input()\n    public matchPassword: string\n\n    constructor(private el: ElementRef) {}\n\n    public validate(): ValidationErrors | null {\n        return this.el.nativeElement.value !== this.matchPassword ? { matchPassword: true } : null\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.session-expiration' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body text-center\\\">\\n    <img src=\\\"/img/icons/refresh.svg\\\" class=\\\"img-md my-3\\\" />\\n    <h4 class=\\\"text-primary mb-3\\\">{{ 'common.safety-measure' | translate }}</h4>\\n    <p>\\n        {{ 'common.session-about-to-expire' | translate }}\\n        <a href (click)=\\\"$event.preventDefault(); refresh(); activeModal.dismiss()\\\">{{ 'common.keep-me-logged-in' | translate }}</a>\\n        {{ 'common.to' | translate | lowercase }} {{ 'common.extend-session' | translate }}\\n    </p>\\n</div>\\n<div class=\\\"modal-footer flex-column flex-md-row justify-content-center justify-content-md-end\\\">\\n    <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"logout()\\\">{{ 'common.log-out' | translate }}</button>\\n    <button class=\\\"btn btn-primary btn-w-sm ml-1\\\" (click)=\\\"refresh(); activeModal.dismiss()\\\">{{ 'common.keep-me-logged-in' | translate }}</button>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { File, IUser, UserFile, UserFileType } from '../../api-interfaces'\nimport { toStartCase } from '../../common.mixin'\nimport { ToastrService } from '../../services/toastr.service'\n\n@Component({\n    selector: 'user-file-form',\n    templateUrl: 'user-file-form.component.html',\n})\nexport class UserFileFormComponent implements OnInit, OnDestroy {\n    @Input()\n    public user: IUser\n    @Input()\n    public file: File\n    @Output()\n    public readonly onSave = new EventEmitter<void>()\n    @Output()\n    public readonly onDelete = new EventEmitter<void>()\n\n    public toStartCase = toStartCase\n\n    public copy: Partial<UserFile> = {}\n    @ViewChild('userFileForm')\n    public userFileForm: NgForm\n\n    public types: UserFileType[] = ['identity', 'address', 'biometrics', 'selfie', 'registration-letter', 'other']\n    public isSaving = false\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        private toastr: ToastrService,\n        public activeModal: NgbActiveModal,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.copy = Object.assign({}, this.file.userFile!)\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public mapTypes(type: UserFileType): any {\n        switch (type) {\n            case 'identity':\n                return 'proof-of-identity'\n            case 'address':\n                return 'proof-of-address'\n            case 'biometrics':\n                return 'biometric-video'\n            default:\n                return type\n        }\n    }\n\n    public save(): void {\n        if (this.userFileForm.invalid) {\n            this.toastr.error(this.translate.instant('common.form-invalid'))\n            return\n        }\n        this.isSaving = true\n\n        this.http\n            .put(`/users/${this.user.id}/files/${this.file.id}`, this.copy)\n            .pipe(\n                finalize(() => {\n                    this.isSaving = false\n                })\n            )\n            .subscribe(() => {\n                this.toastr.success(this.translate.instant('user-file-form.file-updated'))\n                this.onSave.emit()\n            })\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { OnlineUser } from '../../api-interfaces'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StatisticsService {\n    constructor(private http: HttpClient) {}\n\n    public getOnlineUsersCount(): Observable<number> {\n        return this.http\n            .head('/admin/statistics/online-users', { observe: 'response' })\n            .pipe(\n                map(response =>\n                    response && response.headers.has('x-total-count') ? ~~response.headers.get('x-total-count')! : 0\n                )\n            )\n    }\n\n    public getOnlineUsers(): Observable<OnlineUser[]> {\n        return this.http.get<OnlineUser[]>('/admin/statistics/online-users')\n    }\n}\n","export default \".spinner-wrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: calc(100% - 24px);\\n  width: 100%;\\n  min-height: 50px;\\n  min-width: 50px;\\n  background-color: rgba(238, 238, 238, 0.3);\\n}\\n.spinner-wrapper .circle-spinner {\\n  text-align: center;\\n  padding: 1em;\\n  margin: 0 auto 1em;\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n.spinner-wrapper .circle-spinner svg path,\\n.spinner-wrapper .circle-spinner svg rect {\\n  fill: #5a6269;\\n}\\n.spinner-wrapper.white {\\n  position: static;\\n  background-color: #fff;\\n  height: 200px;\\n}\\n.no-background {\\n  background-color: transparent !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NpcmNsZS1zcGlubmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EseUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsMENBQUE7QUFDRjtBQUNFO0VBQ0Usa0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0FBQ0o7QUFDSTs7RUFFRSxhQUFBO0FBQ047QUFHRTtFQUNFLGdCQUFBO0VBQ0Esc0JBQUE7RUFDQSxhQUFBO0FBREo7QUFLQTtFQUNFLHdDQUFBO0FBRkYiLCJmaWxlIjoiY2lyY2xlLXNwaW5uZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3Bpbm5lci13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDI0cHgpO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogNTBweDtcbiAgbWluLXdpZHRoOiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvcjogI2VlZWVlZSwgJGFscGhhOiAwLjMpO1xuXG4gIC5jaXJjbGUtc3Bpbm5lciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBtYXJnaW46IDAgYXV0byAxZW07XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG5cbiAgICBzdmcgcGF0aCxcbiAgICBzdmcgcmVjdCB7XG4gICAgICBmaWxsOiAjNWE2MjY5O1xuICAgIH1cbiAgfVxuXG4gICYud2hpdGUge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBoZWlnaHQ6IDIwMHB4O1xuICB9XG59XG5cbi5uby1iYWNrZ3JvdW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbn1cbiJdfQ== */\";","import { formatNumber } from '@angular/common'\nimport { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core'\nimport BigNumber from 'bignumber.js'\nimport { environment } from 'src/environments/environment'\n\n@Pipe({ name: 'amount' })\nexport class AmountPipe implements PipeTransform {\n    public static readonly DEFAULT_DECIMAL_PLACES = environment.appName === 'sgpmx' ? 8 : 2\n    constructor(@Inject(LOCALE_ID) private locale: string) {}\n    public transform(\n        value: string | number | null | undefined,\n        decimalPlaces: number | null | undefined = 2,\n        // shows null as 0 if set to false\n        allowNull = false\n    ): string | null | undefined {\n        if (typeof decimalPlaces !== 'number' || decimalPlaces < 0 || !decimalPlaces) {\n            decimalPlaces = AmountPipe.DEFAULT_DECIMAL_PLACES\n        }\n        const roundingMode = environment.appName === 'sgpmx' ? 4 : 1\n        return (value === null || value === undefined) && allowNull\n            ? null\n            : formatNumber(\n                  new BigNumber(value ? value : 0).decimalPlaces(decimalPlaces, roundingMode).toString() as any,\n                  this.locale,\n                  `1.${\n                      decimalPlaces < AmountPipe.DEFAULT_DECIMAL_PLACES\n                          ? decimalPlaces\n                          : AmountPipe.DEFAULT_DECIMAL_PLACES\n                  }-${decimalPlaces}`\n              )\n    }\n}\n","import { Component, Input, OnChanges } from '@angular/core'\n\n@Component({\n    selector: 'password-strength-bar',\n    templateUrl: 'password-strength-bar.component.html',\n})\nexport class PasswordStrengthBarComponent implements OnChanges {\n    @Input()\n    public requiredStrength: number\n    @Input()\n    public strength: number\n    public progress = 0\n    public color: 'danger' | 'warning' | 'success'\n\n    public ngOnChanges(): void {\n        this.progress = (this.strength / this.requiredStrength) * 100\n        if (this.progress >= 100) {\n            this.color = 'success'\n        } else if (this.progress >= 50) {\n            this.color = 'warning'\n        } else if (this.progress >= 1) {\n            this.color = 'danger'\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'masked' })\nexport class MaskedPipe implements PipeTransform {\n    public transform(value: string | null | undefined, show = 3, fill = 6): string {\n        if (!value) {\n            return value ? value : ''\n        }\n        return value.substr(0, show).padEnd(show + fill, '*')\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { QueryEntity } from '@datorama/akita'\nimport { combineLatest } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { SessionService } from '../../common/services/session.service'\nimport { CurrenciesState, CurrenciesStore } from './currencies.store'\n\n@Injectable({ providedIn: 'root' })\nexport class CurrenciesQuery extends QueryEntity<CurrenciesState> {\n    public preferredCurrency$ = combineLatest(this.selectAll(), this.session.userStream).pipe(\n        map(([currencies, user]) => currencies.find(currency => currency.code === user.preferredCurrency.code)!)\n    )\n\n    constructor(protected store: CurrenciesStore, private session: SessionService) {\n        super(store)\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { faInfoCircle, faPhone } from '@fortawesome/pro-light-svg-icons'\nimport formatDate from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO'\nimport { cloneDeep, find } from 'lodash'\nimport { BusinessDetails, BusinessType, UserDetails, UserDocumentType, UserGender, UserType } from '../api-interfaces'\nimport { searchCountryCode, toStartCase } from '../common.mixin'\nimport { countries, countriesSortedByName, Country } from '../countries'\n\n/** Transforms masked date to YYYY-MM-DD */\nexport function formatMaskedDate(unformattedDate: string): string {\n    return `${unformattedDate.slice(4)}-${unformattedDate.slice(2, 4)}-${unformattedDate.slice(0, 2)}`\n}\n\n@Component({\n    selector: 'user-details-form',\n    templateUrl: 'user-details-form.component.html',\n})\nexport class UserDetailsFormComponent implements OnChanges {\n    @Input()\n    public type: UserType = 'personal'\n    @Input()\n    public details: UserDetails\n    @Input()\n    public requireAll = true\n    @Input()\n    public disabled = false\n\n    public submitted = false\n\n    @ViewChild('detailsForm')\n    public form: NgForm\n\n    public business = {} as BusinessDetails\n\n    public searchCountryCode = searchCountryCode\n    public toStartCase = toStartCase\n\n    public faPhone = faPhone\n    public faInfoCircle = faInfoCircle\n\n    public genders: UserGender[] = ['male', 'female']\n    public currentTab: 'manager' | 'business' = 'business'\n    public countries = countries\n    public countriesSortedByName = countriesSortedByName\n    public documentTypes: UserDocumentType[] = ['Passport', 'ID Card']\n\n    public businessTypes: BusinessType[] = [\n        'Agents of Client',\n        'Association',\n        'B2B',\n        'Company',\n        'Government Body',\n        'Partnership',\n        'Registered Cooperative',\n        'Trust',\n    ]\n\n    public birthday: string | null = ''\n    public dateOfIncorporation: string | null = ''\n    public phoneCountryCode: Country | null | undefined\n    public businessPhoneCountryCode: Country | null | undefined\n    public documentIssuingDate: string | null = ''\n    public documentExpiryDate: string | null = ''\n    public proofOfAddressDate: string | null = ''\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.details) {\n            if (this.details.business) {\n                this.business = cloneDeep(this.details.business)\n            }\n            this.phoneCountryCode = find(countries, country => country.alpha2 === this.details.phoneCountryCode)\n            this.birthday = this.details.birthday ? formatDate(parseISO(this.details.birthday), 'ddMMyyyy') : null\n            this.documentIssuingDate = this.details.documentIssuingDate\n                ? formatDate(parseISO(this.details.documentIssuingDate), 'ddMMyyyy')\n                : null\n            this.documentExpiryDate = this.details.documentExpiryDate\n                ? formatDate(parseISO(this.details.documentExpiryDate), 'ddMMyyyy')\n                : null\n            this.proofOfAddressDate = this.details.proofOfAddressDate\n                ? formatDate(parseISO(this.details.proofOfAddressDate), 'ddMMyyyy')\n                : null\n            if (this.type === 'business') {\n                this.businessPhoneCountryCode = find(\n                    countries,\n                    country => country.alpha2 === this.details.business?.phoneCountryCode\n                )\n                this.dateOfIncorporation = this.details.business?.dateOfIncorporation\n                    ? formatDate(parseISO(this.details.business?.dateOfIncorporation), 'ddMMyyyy')\n                    : null\n            }\n        }\n    }\n\n    public submit(): void {\n        this.submitted = true\n        if (this.birthday) {\n            this.details.birthday = formatMaskedDate(this.birthday)\n        }\n        if (this.documentIssuingDate) {\n            this.details.documentIssuingDate = formatMaskedDate(this.documentIssuingDate)\n        }\n        if (this.documentExpiryDate) {\n            this.details.documentExpiryDate = formatMaskedDate(this.documentExpiryDate)\n        }\n        if (this.proofOfAddressDate) {\n            this.details.proofOfAddressDate = formatMaskedDate(this.proofOfAddressDate)\n        }\n        if (this.phoneCountryCode) {\n            this.details.phoneCountryCode = this.formatPhoneCountryCode(this.phoneCountryCode)\n        }\n\n        if (this.type === 'business') {\n            if (this.dateOfIncorporation) {\n                this.business.dateOfIncorporation = formatMaskedDate(this.dateOfIncorporation)\n            }\n            if (this.businessPhoneCountryCode) {\n                this.business.phoneCountryCode = this.formatPhoneCountryCode(this.businessPhoneCountryCode)\n            }\n            Object.assign(this.details.business, this.business)\n        }\n    }\n\n    public isValid(): boolean {\n        return !!this.form.valid\n    }\n\n    public formatPhoneCountryCode(unformattedPhoneCountryCode: Country): string {\n        return unformattedPhoneCountryCode.alpha2\n    }\n}\n","import { Location } from '@angular/common'\nimport { Injectable } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { SessionService } from './session.service'\n\ndeclare let gtag: (...args: any[]) => void\ndeclare let dataLayer: any[]\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    private initialized = false\n    constructor(private router: Router, private location: Location, private session: SessionService) {}\n\n    /**\n     * Initliaze google analytics and register page view and user event tracking\n     */\n    public init(): void {\n        if (this.initialized || !window.GOOGLE_ANALYTICS_CODE) {\n            return\n        }\n        this.initialized = true\n        this.loadScript()\n\n        // send page view on every transition\n        this.router.events\n            .pipe(\n                filter(event => event instanceof NavigationEnd),\n                map(() => this.location.path()),\n                distinctUntilChanged()\n            )\n            .subscribe(url => {\n                // log new page path to google analytics\n                gtag('config', window.GOOGLE_ANALYTICS_CODE, { page_path: url })\n            })\n\n        // log user events\n        this.session.userEvent.subscribe(event => {\n            this.push('event', event, {\n                event_category: 'User Events',\n            })\n        })\n    }\n\n    /**\n     * Push events to google analytics\n     * @param payload Event payload\n     */\n    public push(...args: any[]): void {\n        if (!window.GOOGLE_ANALYTICS_CODE) {\n            return\n        }\n        gtag(...args)\n    }\n\n    /**\n     * Load google analytics script\n     */\n    private loadScript(): void {\n        /* eslint-disable */\n        ;(function (): void {\n            let script = document.createElement('script')\n            script.src = `https://www.googletagmanager.com/gtag/js?id=${window.GOOGLE_ANALYTICS_CODE}`\n            script.async = true\n            document.body.append(script)\n            ;(window as any).dataLayer = (window as any).dataLayer || []\n            ;(window as any).gtag = function gtag() {\n                dataLayer.push(arguments)\n            }\n            if (environment.appName === 'aerapass') {\n                gtag('set', 'linker', { domains: ['aerapass.io', 'app.aerapass.io'] })\n            }\n            gtag('js', new Date())\n            gtag('config', window.GOOGLE_ANALYTICS_CODE)\n        })()\n        /* eslint-enable */\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { NoAccessError } from '../no-access-modal/no-access-modal.component'\nimport { UserService } from '../services/core/user.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\n\n@Component({\n    selector: 'access-errors',\n    templateUrl: 'access-errors.component.html',\n})\nexport class AccessErrorsComponent implements OnInit {\n    public resendTriggered = false\n    @Input()\n    public errors: NoAccessError[] = []\n    public whiteListedErrors: NoAccessError[]\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        private router: Router,\n        private userService: UserService,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        if (this.errors.length > 0) {\n            this.whiteListedErrors = this.errors.filter(error => this.session.user.accessErrors.includes(error))\n        } else {\n            this.whiteListedErrors = this.session.user.accessErrors\n        }\n    }\n\n    public async goToVerification(): Promise<void> {\n        await this.router.navigate(['/verify'])\n    }\n\n    public async goToRequest(): Promise<void> {\n        await this.router.navigate(['/deposit'])\n    }\n\n    public resend(): void {\n        this.resendTriggered = true\n        this.subscriptions.add(\n            this.userService.resendActivationMail(this.session.user.id).subscribe(\n                () => {\n                    this.toastr.success(this.translate.instant('common.mail-confirmation-sent-again'))\n                },\n                () => {\n                    this.resendTriggered = false\n                }\n            )\n        )\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core'\nimport { faCopy } from '@fortawesome/pro-regular-svg-icons'\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap'\nimport { of, Subscription } from 'rxjs'\nimport { delay } from 'rxjs/operators'\nimport { CopierService } from '../services/copier.service'\n\n@Component({\n    selector: 'copy-icon',\n    templateUrl: 'copy-icon.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CopyIconComponent implements OnChanges, OnDestroy {\n    @Input()\n    public value: string\n    @ViewChild('tooltip')\n    public tooltip: NgbTooltip\n    public faCopy = faCopy\n    private subscription?: Subscription\n    constructor(private copier: CopierService, private changeDetector: ChangeDetectorRef) {}\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe()\n        }\n    }\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value) {\n            this.value = changes.value.currentValue\n            this.changeDetector.markForCheck()\n        }\n    }\n    public copy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe()\n        }\n        this.copier.copyText(this.value)\n        // detect changes first, the ngbTooltip doesn't get updated otherwise and won't show up\n        this.changeDetector.detectChanges()\n        this.tooltip.open()\n        this.subscription = of(undefined)\n            .pipe(delay(1500))\n            .subscribe(() => {\n                this.changeDetector.markForCheck()\n                this.tooltip.close()\n            })\n    }\n}\n","export default \"<div class=\\\"profile-documents\\\">\\n    <dropzone\\n        *ngIf=\\\"canCreate\\\"\\n        [showTable]=\\\"false\\\"\\n        [files]=\\\"files\\\"\\n        [existingFiles]=\\\"existingFiles\\\"\\n        [requiredMessage]=\\\"requiredMessage\\\"\\n        [allowVideo]=\\\"true\\\"\\n        #dropzone\\n    ></dropzone>\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-hover align-items-center table-borderless mb-0\\\" *ngIf=\\\"files && files.length > 0\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\" colspan=\\\"2\\\">{{ 'common.file-name' | translate }}</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr class=\\\"bg-white e2e-file\\\" *ngFor=\\\"let item of files; let i = index\\\">\\n                    <th scope=\\\"row\\\">\\n                        <div class=\\\"text-primary\\\">{{ item.name }}</div>\\n                        <small class=\\\"text-muted\\\">{{ item.size / 1024 / 1024 | number: '.2' }} MB</small>\\n                    </th>\\n                    <td class=\\\"text-right\\\" nowrap>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"files.splice(i, 1)\\\">\\n                            <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <button\\n        *ngIf=\\\"canCreate && showButton\\\"\\n        type=\\\"button\\\"\\n        (click)=\\\"uploadFiles()\\\"\\n        class=\\\"btn btn-primary btn-w-sm mt-3 e2e-upload-documents-btn\\\"\\n        [ngClass]=\\\"{ loading: isUploading, 'float-right': buttonAlign === 'right' }\\\"\\n        [disabled]=\\\"isUploading\\\"\\n    >\\n        {{ 'common.upload' | translate }}\\n    </button>\\n    <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n        <div class=\\\"table-responsive mt-3\\\" *ngIf=\\\"items.length\\\">\\n            <table class=\\\"table table-hover align-items-center table-borderless mb-0\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\" colspan=\\\"2\\\">{{ 'common.existing-files' | translate }}</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr class=\\\"bg-white e2e-file\\\" *ngFor=\\\"let existingFile of items\\\">\\n                        <th scope=\\\"row\\\">\\n                            <file-item [file]=\\\"existingFile\\\" [canView]=\\\"canView\\\"></file-item>\\n                        </th>\\n                        <td class=\\\"text-right\\\" nowrap>\\n                            <button\\n                                type=\\\"button\\\"\\n                                class=\\\"btn btn-primary btn-sm mr-1 e2e-edit-file-btn\\\"\\n                                (click)=\\\"showFileModal(existingFile)\\\"\\n                                *ngIf=\\\"canEdit\\\"\\n                            >\\n                                <fa-icon [icon]=\\\"faEdit\\\"></fa-icon>\\n                            </button>\\n                            <button\\n                                type=\\\"button\\\"\\n                                class=\\\"btn btn-danger btn-sm e2e-delete-file-btn\\\"\\n                                (click)=\\\"deleteFile(existingFile)\\\"\\n                                *ngIf=\\\"canDelete\\\"\\n                            >\\n                                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n        <div class=\\\"d-flex align-items-center mt-3 float-right\\\" *ngIf=\\\"items.length\\\">\\n            <ng-select\\n                class=\\\"mr-2\\\"\\n                [(ngModel)]=\\\"limit\\\"\\n                dropdownPosition=\\\"auto\\\"\\n                (change)=\\\"select(1)\\\"\\n                [items]=\\\"limitOpts\\\"\\n                [placeholder]=\\\"'common.show-entries-per-page' | translate\\\"\\n                [clearable]=\\\"false\\\"\\n                [searchable]=\\\"false\\\"\\n                required\\n            >\\n                <ng-template ng-label-tmp let-item=\\\"item\\\">{{ 'common.show-entries' | translate: { value: item } }}</ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item }} {{ 'common.entries' | translate }}</ng-template>\\n            </ng-select>\\n            <ngb-pagination\\n                [(page)]=\\\"page\\\"\\n                [collectionSize]=\\\"count\\\"\\n                (pageChange)=\\\"select()\\\"\\n                [pageSize]=\\\"limit\\\"\\n                [maxSize]=\\\"5\\\"\\n                [ellipses]=\\\"false\\\"\\n                [rotate]=\\\"true\\\"\\n                [boundaryLinks]=\\\"true\\\"\\n            >\\n            </ngb-pagination>\\n        </div>\\n    </ng-container>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport addSeconds from 'date-fns/addSeconds'\nimport getUnixTime from 'date-fns/getUnixTime'\nimport isBefore from 'date-fns/isBefore'\nimport parseISO from 'date-fns/parseISO'\nimport { Base64 } from 'js-base64'\nimport { BehaviorSubject, from, Observable, ReplaySubject, Subject } from 'rxjs'\nimport { debounceTime, filter, flatMap, map, take, tap } from 'rxjs/operators'\nimport { ICurrency, IUser, Permission, RefreshToken, UserRole, UserStatus, UserType } from '../api-interfaces'\nimport { NoAccessError } from '../no-access-modal/no-access-modal.component'\nimport { StorageService } from './storage.service'\n\nexport enum UserEventType {\n    LOGIN = 'login',\n    LOGOUT = 'logout',\n}\n\nexport interface UserEvent {\n    type: UserEventType\n    user: User\n}\n\nexport class User implements Partial<IUser> {\n    public id: string\n    public type: UserType\n    public accountNumber: string\n    public email: string\n    public permissions: Permission[]\n    public role: UserRole\n    public status: UserStatus\n    public name: string\n    public preferredCurrency: ICurrency\n    public twoFactor: boolean\n    public lastLogin: string\n    public loginCount: number\n    public intercomHash: string\n    public approvedAt: Date | null\n    public billingCurrency: ICurrency\n    public sendEmailNotifications: boolean\n    public association: { id: string; name: string }\n    public createdAt: string\n    public updatedAt: string\n\n    public hasPermission(permission: Permission): boolean {\n        return this.permissions.includes(permission)\n    }\n\n    public get accessErrors(): NoAccessError[] {\n        const errors: NoAccessError[] = []\n        if (this.role === 'admin') {\n            return errors\n        }\n        if (!this.approvedAt) {\n            errors.push('VerificationRequiredError')\n        }\n        return errors\n    }\n}\n\nexport interface TokenPayload {\n    iat: number\n    iss: number\n    exp: number\n    userID: string\n    scopes: TokenScope[]\n}\n\nexport type TokenScope = 'securitySettings' | 'banking'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SessionService {\n    // TODO: Remove when using observable everywhere\n    public get user(): User {\n        return this.userChangeEvent.getValue()!\n    }\n\n    public refreshToken?: RefreshToken\n    public token?: string\n    public tokenChangeEvent = new Subject<void>()\n    /* Emits when the status of the user changes */\n    public userEvent = new ReplaySubject<UserEvent>(1)\n    public userStream: Observable<User>\n    private userChangeEvent = new BehaviorSubject<User | null>(null)\n    private payload?: TokenPayload\n\n    constructor(private storage: StorageService, private http: HttpClient) {\n        this.userStream = this.userChangeEvent.asObservable().pipe(filter((user): user is User => !!user))\n        this.storage.storageChange\n            .pipe(\n                filter(event => {\n                    switch (event.key) {\n                        case 'refreshToken':\n                        case 'token':\n                        case 'user':\n                            return true\n                        default:\n                            // not needed\n                            return false\n                    }\n                }),\n                debounceTime(200)\n            )\n            .subscribe(() => {\n                this.syncWithStorage()\n            })\n        // initial sync\n        this.syncWithStorage()\n    }\n\n    public login(refreshToken: RefreshToken, token: string): Observable<User> {\n        return this.update(refreshToken, token).pipe(\n            tap(user => {\n                this.userEvent.next({ type: UserEventType.LOGIN, user })\n            })\n        )\n    }\n\n    public update(refreshToken?: RefreshToken, token?: string): Observable<User> {\n        try {\n            if (refreshToken && token) {\n                this.refreshToken = refreshToken\n                this.token = token\n                this.payload = this.parseToken(token)\n                this.tokenChangeEvent.next()\n            }\n            return this.http.get<IUser>(`/users/${this.payload!.userID}?scope=session`).pipe(\n                map(data => {\n                    const user = Object.assign(new User(), data)\n                    this.userChangeEvent.next(user)\n                    this.storage.setItem('refreshToken', JSON.stringify(this.refreshToken))\n                    this.storage.setItem('token', this.token!)\n                    this.storage.setItem('user', JSON.stringify(data))\n                    return user\n                })\n            )\n        } catch (error) {\n            this.logout()\n            throw error\n        }\n    }\n\n    public logout(): void {\n        this.refreshToken = undefined\n        this.token = undefined\n        this.payload = undefined\n        // notify others of logout\n        this.userEvent.next({ type: UserEventType.LOGOUT, user: this.userChangeEvent.getValue()! })\n        this.userChangeEvent.next(null)\n        // clear storage\n        this.storage.removeItem('refreshToken')\n        this.storage.removeItem('token')\n        this.storage.removeItem('user')\n    }\n\n    /**\n     * Checks if a token is stored and not yet expired\n     * @param gracePeriod in seconds. Returns if the token is at least S seconds from now valid.\n     */\n    public hasValidToken(gracePeriod = 0): boolean {\n        // check if token is set and is not yet expired\n        return !!this.payload && this.payload.exp > (Date.now() + gracePeriod) / 1000\n    }\n\n    public hasTokenScope(scope: TokenScope): boolean {\n        return this.getTokenScopes().includes(scope)\n    }\n\n    public getTokenScopes(): TokenScope[] {\n        return this.hasValidToken() ? this.payload!.scopes : []\n    }\n\n    public getExpiryTimeInSeconds(): number {\n        const expiryTime = this.payload && this.payload.exp\n        return expiryTime ? Math.round(expiryTime - ~~(new Date().getTime() / 1000)) : 0\n    }\n\n    /**\n     * Checks if a refresh token is stored and not yet expired\n     * @param gracePeriod in seconds. Returns if the token is at least S seconds from now valid.\n     */\n    public hasValidRefreshToken(gracePeriod = 0): boolean {\n        return (\n            !!this.refreshToken && !isBefore(parseISO(this.refreshToken.expiresAt), addSeconds(new Date(), gracePeriod))\n        )\n    }\n\n    public isAuthenticated(): boolean {\n        return this.userChangeEvent.getValue() !== null\n    }\n\n    public createSignedUrl(url: string, queryParams?: string): Observable<string> {\n        const now = getUnixTime(new Date())\n        const encoder = new TextEncoder()\n        return this.userStream.pipe(\n            take(1),\n            flatMap(user =>\n                from(\n                    crypto.subtle.digest('SHA-1', encoder.encode(user.id + `/.api${url}` + now + this.refreshToken?.id))\n                )\n            ),\n            map(signature =>\n                Array.from(new Uint8Array(signature))\n                    .map(b => b.toString(16).padStart(2, '0'))\n                    .join('')\n            ),\n            map(\n                signatureInHex =>\n                    `/.api${url}?userId=${this.user.id}&signature=${signatureInHex}&timestamp=${now}${\n                        queryParams ? '&' + queryParams : ''\n                    }`\n            )\n        )\n    }\n\n    private syncWithStorage(): void {\n        try {\n            if (this.storage.hasItem('user')) {\n                const user = JSON.parse(this.storage.getItem('user')!)\n                Object.assign(this.userChangeEvent, { _value: Object.assign(new User(), user) })\n            }\n            const refreshToken =\n                this.storage.hasItem('refreshToken') && JSON.parse(this.storage.getItem('refreshToken')!)\n            const token = this.storage.getItem('token')\n            // if is expired\n            if (refreshToken && isBefore(parseISO(refreshToken.expiresAt), new Date())) {\n                throw new Error('Session expired')\n            }\n            if (refreshToken && token) {\n                this.refreshToken = refreshToken\n                this.token = token\n                this.payload = this.parseToken(token)\n                this.userEvent.next({ type: UserEventType.LOGIN, user: { id: this.payload?.userID } as any })\n            } else if (this.isAuthenticated()) {\n                this.logout()\n            }\n        } catch {\n            this.storage.removeItem('refreshToken')\n            this.storage.removeItem('token')\n            this.storage.removeItem('user')\n            if (this.isAuthenticated()) {\n                this.logout()\n            }\n        }\n    }\n\n    private parseToken(token: string): TokenPayload {\n        return JSON.parse(Base64.decode(token.split('.')[1]))\n    }\n}\n","import { Component, Input, OnDestroy } from '@angular/core'\nimport { faTimes } from '@fortawesome/pro-regular-svg-icons'\nimport { AlertService } from '../services/alert.service'\n\ntype AlertLayout = 'default' | 'full-width'\n\n@Component({\n    selector: 'alert-outlet',\n    templateUrl: 'alert-outlet.component.html',\n})\nexport class AlertOutletComponent implements OnDestroy {\n    @Input()\n    public layout: AlertLayout = 'default'\n    public faTimes = faTimes\n    constructor(public alertService: AlertService) {}\n\n    public ngOnDestroy(): void {\n        this.alertService.clear()\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { SafeUrl } from '@angular/platform-browser'\nimport { toStartCase } from './common.mixin'\n\n@Pipe({ name: 'startCase' })\nexport class StartCasePipe implements PipeTransform {\n    public transform(value: any): SafeUrl {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return toStartCase(value)\n    }\n}\n","import { Component, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { faCheckCircle, faExclamationTriangle, faInfoCircle, IconDefinition } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { BootstrapComponentType } from '../common.mixin'\n\n@Component({\n    selector: 'confirmation-modal',\n    templateUrl: 'confirmation-modal.component.html',\n})\nexport class ConfirmationModalComponent {\n    public type: BootstrapComponentType = 'default'\n    public title = 'Confirm'\n    public text?: string\n    public confirmText? = 'Ok'\n    public confirmClass: BootstrapComponentType = 'primary'\n    public cancelText? = 'Cancel'\n    public cancelClass: BootstrapComponentType = 'default'\n    public showCancel? = true\n\n    @ViewChild('inputForm')\n    public form: NgForm\n    public submitted = false\n    public input?: 'text'\n    public inputLabel?: string\n    public inputValue: string\n\n    private faExclamationTriangle = faExclamationTriangle\n    private faInfoCircle = faInfoCircle\n    private faCheckCircle = faCheckCircle\n\n    constructor(public activeModal: NgbActiveModal) {}\n\n    public inputValidator: (value: string) => string | null = (_: string) => null\n\n    public confirm(): void {\n        if (this.input) {\n            this.submitted = true\n            if (this.form.invalid) {\n                return\n            }\n        }\n        this.activeModal.close(true)\n    }\n\n    public get icon(): IconDefinition | null {\n        switch (this.type) {\n            case 'info':\n                return this.faInfoCircle\n            case 'success':\n                return this.faCheckCircle\n            case 'warning':\n                return this.faExclamationTriangle\n            case 'danger':\n                return this.faExclamationTriangle\n            default:\n                return null\n        }\n    }\n}\n","export default \"<div ngbDropdown placement=\\\"bottom-right\\\" (openChange)=\\\"handleDropdownClosed($event)\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-transparent mr-1\\\" ngbDropdownToggle>\\n        <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faBell\\\"></fa-icon>\\n        <ng-container *ngIf=\\\"notificationsService.unreadNotificationsStream | async as unreadNotifications\\\">\\n            <span class=\\\"badge badge-primary badge-pill\\\" *ngIf=\\\"unreadNotifications > 0\\\">\\n                {{ unreadNotifications | number: '1.0-0' }}\\n            </span>\\n        </ng-container>\\n    </button>\\n    <div class=\\\"dropdown-menu-w-lg dropdown-menu-right\\\" ngbDropdownMenu>\\n        <div class=\\\"dropdown-header text-center\\\">\\n            {{ 'common.notifications' | translate }}\\n            <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-link text-muted e2e-mark-all-as-read-btn\\\"\\n                (click)=\\\"markAllAsRead(); $event.stopPropagation()\\\"\\n                [ngbTooltip]=\\\"'common.mark-all-as-read' | translate\\\"\\n                placement=\\\"bottom\\\"\\n            >\\n                <fa-icon [icon]=\\\"faEye\\\"></fa-icon>\\n            </button>\\n        </div>\\n        <div class=\\\"dropdown-divider mb-0\\\"></div>\\n        <div class=\\\"scrollable\\\">\\n            <a\\n                href\\n                class=\\\"dropdown-item {{ 'has-' + notification.severity }} e2e-header-notification\\\"\\n                *ngFor=\\\"let notification of notifications\\\"\\n                [ngClass]=\\\"{ active: !notification.read }\\\"\\n                (click)=\\\"goto(notification); $event.preventDefault()\\\"\\n            >\\n                <p class=\\\"mb-0\\\">\\n                    <span class=\\\"badge mr-1\\\" [ngClass]=\\\"'badge-' + notification.severity\\\" *ngIf=\\\"!notification.read\\\">{{\\n                        'common.new' | translate\\n                    }}</span>\\n                    <notification [notification]=\\\"notification\\\" [allowUserCopy]=\\\"false\\\"></notification>\\n                </p>\\n                <small class=\\\"text-muted\\\">{{ notification.createdAt | formatDistanceToNow: true:true }}</small>\\n            </a>\\n        </div>\\n        <div class=\\\"dropdown-divider mt-0\\\"></div>\\n        <a class=\\\"dropdown-item text-center\\\" [routerLink]=\\\"['/notifications']\\\" ngbDropdownItem>{{ 'common.view-all' | translate }}</a>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">\\n        {{ (error === 'VerificationRequiredError' ? 'common.verify-your-identity' : 'common.confirm-your-email-address') | translate }}\\n    </h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body text-center\\\">\\n    <h3 class=\\\"m-0\\\">{{ 'common.you-dont-have-access-to-this-feature' | translate }}</h3>\\n    <img src=\\\"/img/icons/lock.svg\\\" class=\\\"img-md my-3\\\" />\\n    <p class=\\\"text-body\\\" *ngIf=\\\"error === 'VerificationRequiredError'\\\">\\n        {{ 'common.please-verify-identity' | translate }}\\n        <a href (click)=\\\"$event.preventDefault(); goToVerification()\\\">{{ 'common.start-now' | translate }}</a>\\n    </p>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { IContact } from '../../api-interfaces'\nimport { Contact } from '../../models/core/contact.model'\n\nexport interface ContactCreatePayload {\n    baseUser: {\n        id: string\n    }\n    counterUser: {\n        accountNumber?: string\n        email?: string\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ContactService {\n    constructor(private http: HttpClient) {}\n\n    public create(contact: ContactCreatePayload): Observable<Contact> {\n        return this.http.post<IContact>(`/contacts`, contact).pipe(map(resonse => new Contact(resonse)))\n    }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { pick } from 'lodash'\nimport { Subscription } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { ICardOrder, IContact, IConversion, IInvoice, IUser, Notification, Transaction } from '../api-interfaces'\nimport { ContactService } from '../services/core/contact.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\n\n@Component({\n    selector: 'notification',\n    templateUrl: 'notification.component.html',\n})\nexport class NotificationComponent implements OnInit, OnDestroy {\n    @Input()\n    public notification: Notification\n    @Input()\n    public allowUserCopy = true // Use copy-wrap for user\n\n    public user: IUser | null\n    public transaction: Transaction | null\n    public conversion: IConversion | null\n    public invoice: IInvoice | null\n    public contact: IContact | null\n    public cardOrder: ICardOrder | null\n    public displayName = environment.displayName\n\n    public isLoading = false\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        private contactService: ContactService,\n        private toastr: ToastrService\n    ) {}\n\n    public ngOnInit(): void {\n        this.user = this.notification.user\n        this.transaction = this.notification.transaction\n        this.conversion = this.notification.conversion\n        this.invoice = this.notification.invoice\n        this.contact = this.notification.contact\n        this.cardOrder = this.notification.cardOrder\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public addContact(): void {\n        this.isLoading = true\n        this.subscriptions.add(\n            this.contactService\n                .create({\n                    baseUser: pick(this.session.user, ['id']),\n                    counterUser: {\n                        accountNumber: this.notification.contact?.baseUser?.accountNumber ?? '',\n                    },\n                })\n                .pipe(\n                    finalize(() => {\n                        this.isLoading = false\n                    })\n                )\n                .subscribe(() => {\n                    this.toastr.success(\n                        `${\n                            this.notification.contact && this.notification.contact.baseUser!.accountNumber\n                        } added as contact`\n                    )\n                })\n        )\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.contact-book' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-subheader\\\">{{ 'common.add-contacts' | translate }}</div>\\n<div class=\\\"modal-body\\\">\\n    <form class=\\\"form-validation mb-3\\\" #contactForm=\\\"ngForm\\\" (ngSubmit)=\\\"addContact(searchText)\\\">\\n        <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\">\\n                    <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                </span>\\n            </div>\\n            <input\\n                autocomplete=\\\"off\\\"\\n                type=\\\"text\\\"\\n                name=\\\"search\\\"\\n                (ngModelChange)=\\\"searchContacts($event)\\\"\\n                [(ngModel)]=\\\"searchText\\\"\\n                [placeholder]=\\\"'common.search-contacts' | translate\\\"\\n                class=\\\"form-control\\\"\\n                [focus]=\\\"true\\\"\\n            />\\n            <div [@showButton]=\\\"(itemsStream | async)?.length === 0 && searchText.length > 0\\\" class=\\\"input-group-append overflow-hidden\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [ngClass]=\\\"{ loading: isLoading }\\\" [disabled]=\\\"isLoading\\\">\\n                    {{ 'common.add' | translate }}\\n                </button>\\n            </div>\\n        </div>\\n    </form>\\n    <ng-container *ngIf=\\\"itemsStream | async as items\\\">\\n        <ng-container *ngIf=\\\"items.length > 0; else noContacts\\\">\\n            <div class=\\\"list-group list-group-flush mb-3\\\">\\n                <a\\n                    href\\n                    class=\\\"list-group-item list-group-item-action d-flex align-items-center justify-content-center p-3\\\"\\n                    *ngFor=\\\"let contact of items\\\"\\n                    (click)=\\\"onSelect.emit(contact); $event.preventDefault()\\\"\\n                >\\n                    <div class=\\\"avatar mr-3\\\">\\n                        <user-avatar [user]=\\\"contact.counterUser\\\"></user-avatar>\\n                    </div>\\n                    <div class=\\\"w-100\\\">\\n                        <div class=\\\"text-primary\\\">{{ contact.counterUser.name }}</div>\\n                        <small\\n                            >{{ contact.counterUser.accountNumber | accountNumber }}\\n                            <span class=\\\"text-muted text-capitalize\\\">/ {{ contact.counterUser.type }}</span></small\\n                        >\\n                    </div>\\n                    <div *ngIf=\\\"contact.id\\\" class=\\\"btn-group\\\">\\n                        <button\\n                            type=\\\"button\\\"\\n                            class=\\\"btn btn-default text-gray\\\"\\n                            (click)=\\\"removeContact(contact); $event.stopPropagation(); $event.preventDefault()\\\"\\n                            [ngClass]=\\\"{ loading: deletingContacts.has(contact.id) }\\\"\\n                            [disabled]=\\\"deletingContacts.has(contact.id)\\\"\\n                        >\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                        </button>\\n                    </div>\\n                </a>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col d-flex justify-content-end\\\">\\n                    <ngb-pagination\\n                        class=\\\"mb-0\\\"\\n                        [(page)]=\\\"page\\\"\\n                        [collectionSize]=\\\"count\\\"\\n                        (pageChange)=\\\"select()\\\"\\n                        [pageSize]=\\\"limit\\\"\\n                        [rotate]=\\\"false\\\"\\n                        [boundaryLinks]=\\\"true\\\"\\n                    >\\n                    </ngb-pagination>\\n                </div>\\n            </div>\\n        </ng-container>\\n    </ng-container>\\n    <ng-template #noContacts>\\n        <div *ngIf=\\\"searchText.length === 0; else addContacts\\\" class=\\\"text-center mt-4 mb-3\\\">\\n            <fa-icon class=\\\"text-muted\\\" [icon]=\\\"faUserAltSlash\\\" size=\\\"3x\\\"></fa-icon>\\n            <h3 class=\\\"text-muted mt-2\\\">{{ 'common.no-contacts' | translate }}</h3>\\n            <p class=\\\"text-muted\\\">\\n                {{ 'common.add-people' | translate }}\\n            </p>\\n        </div>\\n    </ng-template>\\n    <ng-template #addContacts>\\n        <div class=\\\"text-center my-5\\\">\\n            <fa-icon class=\\\"text-muted\\\" [icon]=\\\"faUserAltSlash\\\" size=\\\"3x\\\"></fa-icon>\\n            <h3 class=\\\"text-muted mt-2\\\">\\\"{{ searchText }}\\\" {{ 'common.not-found' | translate }}</h3>\\n            <small class=\\\"text-muted\\\">{{ 'common.press-enter-to-add' | translate }} \\\"{{ searchText }}\\\"</small>\\n        </div>\\n    </ng-template>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { capitalize } from 'lodash'\nimport { Subscription } from 'rxjs'\nimport { BusinessDetails, IUser, UserDetails } from '../api-interfaces'\nimport { toCountryCallingCode, toStartCase } from '../common.mixin'\nimport { countryMap } from '../countries'\n\n@Component({\n    selector: 'user-info-table',\n    templateUrl: 'user-info-table.component.html',\n})\nexport class UserInfoTableComponent implements OnInit, OnDestroy {\n    @Input()\n    public user: IUser\n    public details: UserDetails\n    public businessDetails: BusinessDetails\n    public fields: (keyof UserDetails)[] = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'gender',\n        'phoneNumber',\n        'birthday',\n        'nationality',\n        'address',\n        'occupation',\n        'sourceOfIncome',\n        'taxIdentificationNumber',\n        'fatca',\n        'expectedTurnover',\n        'documentType',\n        'documentNumber',\n        'documentIssuingDate',\n        'documentExpiryDate',\n        'proofOfAddressDate',\n        'referredBy',\n    ]\n    public businessFields: (keyof BusinessDetails)[] = [\n        'name',\n        'type',\n        'registrationNumber',\n        'phoneNumber',\n        'countryOfIncorporation',\n        'dateOfIncorporation',\n        'industry',\n        'expectedTurnover',\n        'address',\n        'businessAddress',\n        'regulatoryBody',\n        'licensed',\n        'licenseNumber',\n        'fatca',\n    ]\n    public currentTab: 'business' | 'manager' = 'business'\n\n    private subscriptions = new Subscription()\n\n    public constructor(private http: HttpClient) {}\n\n    public ngOnInit(): void {\n        this.http.get<UserDetails>(`/admin/users/${this.user.id}/details`).subscribe(details => {\n            this.details = details\n            if (this.user.type === 'business') {\n                this.businessDetails = this.details.business!\n                this.fields = this.fields.filter(field => !['fatca', 'expectedTurnover'].includes(field))\n            }\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public getProperty(property: keyof UserDetails): string {\n        if (property === 'fatca') {\n            return 'FATCA'\n        }\n        return toStartCase(property)\n    }\n\n    public getValue(property: keyof Omit<UserDetails, 'address' | 'business'>): string {\n        if (property === 'fatca') {\n            return this.details.fatca === undefined ? '' : this.details.fatca ? 'Yes' : 'No'\n        }\n        if (property === 'nationality') {\n            return countryMap[this.details.nationality]?.name ?? ''\n        }\n        if (property === 'phoneNumber') {\n            return `${toCountryCallingCode(this.details.phoneCountryCode) ?? ''} ${this.details.phoneNumber ?? ''}`\n        }\n        if (property === 'documentType') {\n            return capitalize(this.details.documentType)\n        }\n        if (property === 'gender') {\n            return capitalize(this.details.gender)\n        }\n        return this.details[property] ?? ''\n    }\n\n    public getBusinessValue(property: keyof Omit<BusinessDetails, 'address' | 'businessAddress' | 'ubos'>): string {\n        if (property === 'fatca' || property === 'licensed') {\n            return this.businessDetails[property] === undefined ? '' : this.businessDetails[property] ? 'Yes' : 'No'\n        }\n        if (property === 'phoneNumber') {\n            return `${toCountryCallingCode(this.businessDetails.phoneCountryCode) ?? ''} ${\n                this.businessDetails.phoneNumber ?? ''\n            }`\n        }\n        return this.businessDetails[property]\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.welcome-to' | translate }} {{ displayName }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-subheader\\\">{{ 'common.lets-complete' | translate }}</div>\\n<div class=\\\"modal-body py-3\\\">\\n    <div class=\\\"row py-2 b-b-1\\\">\\n        <div class=\\\"col-sm-24\\\">\\n            <div class=\\\"welcome-step media align-items-center\\\" [ngClass]=\\\"{ completed: user?.status !== 'pending' }\\\">\\n                <img src=\\\"/img/icons/secure-transaction.svg\\\" class=\\\"mr-3 img-sm\\\" />\\n                <div class=\\\"media-body pt-1\\\">\\n                    <confirm-mail-reminder [user]=\\\"user\\\"></confirm-mail-reminder>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row py-2 b-b-1\\\">\\n        <div class=\\\"col-sm-24\\\">\\n            <div class=\\\"welcome-step media align-items-center\\\" [ngClass]=\\\"{ completed: user?.approvedAt }\\\">\\n                <img src=\\\"/img/icons/resume.svg\\\" class=\\\"mr-3 img-sm\\\" />\\n                <div class=\\\"media-body pt-1\\\">\\n                    {{ 'common.remember-to' | translate }}\\n                    <a [routerLink]=\\\"!user?.approvedAt ? ['/verify'] : undefined\\\" (click)=\\\"close()\\\">{{\\n                        'common.complete-your-profile' | translate\\n                    }}</a>\\n                    {{ 'common.for-full-access' | translate }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row py-2\\\">\\n        <div class=\\\"col-sm-24\\\">\\n            <div class=\\\"welcome-step media align-items-center\\\" [ngClass]=\\\"{ completed: user?.twoFactor }\\\">\\n                <img src=\\\"/img/icons/protection2.svg\\\" class=\\\"mr-3 img-sm\\\" />\\n                <div class=\\\"media-body pt-1\\\">\\n                    {{ 'common.consider' | translate }}\\n                    <a [routerLink]=\\\"!user?.twoFactor ? ['/account/security'] : undefined\\\" (click)=\\\"close()\\\">{{\\n                        'common.enabling-two-factor' | translate\\n                    }}</a>\\n                    {{ 'common.to-make-secure' | translate }}.\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-primary btn-w-sm\\\" (click)=\\\"close()\\\">{{ 'common.proceed-to-dashboard' | translate }}</button>\\n</div>\\n\";","export default \"<div class=\\\"alert-outlet\\\" [ngClass]=\\\"{ 'alert-outlet-full-width': layout === 'full-width' }\\\">\\n    <div\\n        class=\\\"alert\\\"\\n        [ngClass]=\\\"'alert-' + alert.severity + (layout === 'default' ? ' alert-dismissible' : '')\\\"\\n        role=\\\"alert\\\"\\n        *ngFor=\\\"let alert of alertService.alerts\\\"\\n    >\\n        <ng-container *ngIf=\\\"layout === 'default'\\\">\\n            <span [innerHtml]=\\\"alert.message\\\"></span>\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"alertService.remove(alert)\\\">&times;</button>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"layout === 'full-width'\\\">\\n            <div class=\\\"container d-flex justify-content-between align-items-center\\\">\\n                <div>\\n                    <fa-icon class=\\\"mx-2\\\" [icon]=\\\"alert.icon\\\" *ngIf=\\\"alert.icon\\\"></fa-icon>\\n                    <span [innerHtml]=\\\"alert.message\\\"></span>\\n                    <ng-container *ngIf=\\\"alert.callToAction\\\">\\n                        <span>&nbsp;</span><a [routerLink]=\\\"[alert.callToAction.route]\\\">{{ alert.callToAction.label }}</a>\\n                    </ng-container>\\n                </div>\\n                <div>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-link\\\" (click)=\\\"alertService.remove(alert)\\\"><fa-icon [icon]=\\\"faTimes\\\"></fa-icon></button>\\n                </div>\\n            </div>\\n        </ng-container>\\n    </div>\\n</div>\\n\";","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\n\n@Directive({\n    selector: '[ipAddressValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: IpAddressValidatorDirective, multi: true }],\n})\nexport class IpAddressValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (\n            !control.value?.match(\n                /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/g\n            )\n        ) {\n            return { ipAddressError: true }\n        }\n        return null\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { merge, ReplaySubject, Subject } from 'rxjs'\nimport { filter, flatMap, map, switchMap } from 'rxjs/operators'\nimport { SessionService, UserEventType } from './session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NotificationsService {\n    public unreadNotificationsStream = new ReplaySubject<number>(1)\n    public notifyEvent = new Subject<void>()\n\n    constructor(public session: SessionService, private http: HttpClient) {\n        merge(this.notifyEvent, this.session.userEvent.pipe(filter(event => event.type === UserEventType.LOGIN)))\n            .pipe(\n                switchMap(() => this.session.userStream),\n                flatMap(user =>\n                    this.http.head(`/users/${user.id}/notifications`, {\n                        observe: 'response',\n                        params: new HttpParams().set('read', 'false'),\n                    })\n                ),\n                map(response =>\n                    response && response.headers.has('x-total-count') ? ~~response.headers.get('x-total-count')! : 0\n                )\n            )\n            .subscribe(count => {\n                this.unreadNotificationsStream.next(count)\n            })\n    }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faTrash, faUserAltSlash } from '@fortawesome/pro-regular-svg-icons'\nimport { NgbActiveModal, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subject } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { IContact, IUser } from '../api-interfaces'\nimport { isAccountNumber, isEmail } from '../common.mixin'\nimport { ListComponent } from '../list.component'\nimport { ConfirmationService } from '../services/confirmation.service'\nimport { ContactService } from '../services/core/contact.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\n\n@Component({\n    selector: 'contact-book',\n    templateUrl: 'contact-book.component.html',\n    animations: [\n        trigger('showButton', [\n            state(\n                'true',\n                style({\n                    width: '55px',\n                })\n            ),\n            state(\n                'false',\n                style({\n                    width: '0',\n                })\n            ),\n            transition('0 <=> 1', animate('200ms')),\n        ]),\n    ],\n})\nexport class ContactBookComponent extends ListComponent<IContact> implements OnInit {\n    @Input()\n    public user: IUser\n    @Output()\n    public readonly onSelect = new EventEmitter<IContact>()\n    @Output()\n    public readonly onUpdate = new EventEmitter<void>()\n    public fetchEvent = new Subject<void>()\n    // This one is only use for display, since we need to manipulate search property before sending it\n    public searchText = ''\n\n    public isLoading = false\n    public deletingContacts = new Set<string>()\n    public defaultLimit = 5\n    public faTrash = faTrash\n    public faUserAltSlash = faUserAltSlash\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        confirmation: ConfirmationService,\n        public modal: NgbActiveModal,\n        private toastr: ToastrService,\n        private contactService: ContactService,\n        public translate: TranslateService\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session, confirmation)\n    }\n\n    public ngOnInit(): void {\n        this.apiUrl = `/users/${this.user!.id}/contacts`\n        super.ngOnInit()\n    }\n\n    public addContact(name: string): void {\n        this.isLoading = true\n        this.http\n            .get<IContact[]>(this.apiUrl, {\n                params: new HttpParams().set('search', name.trim().replace(/\\s/g, '')),\n            })\n            .subscribe(contacts => {\n                const contact = contacts.find(\n                    c => !!c.counterUser && (c.counterUser.accountNumber === name || c.counterUser.email === name)\n                )\n                if (contact) {\n                    this.isLoading = false\n                    this.onSelect.emit(contact)\n                } else {\n                    if (!isAccountNumber(name, { allowSpaces: true }) && !isEmail(name)) {\n                        this.toastr.error(this.translate.instant('contact-book.must-be-an-account-number-or-email'))\n                        this.isLoading = false\n                        return\n                    }\n                    this.contactService\n                        .create({\n                            counterUser: isEmail(name)\n                                ? { email: name.trim().replace(/\\s/g, '') }\n                                : { accountNumber: name.trim().replace(/\\s/g, '') },\n                            baseUser: { id: this.user.id },\n                        })\n                        .pipe(\n                            finalize(() => {\n                                this.isLoading = false\n                            })\n                        )\n                        .subscribe(() => {\n                            this.updateEvent.next()\n                            this.onUpdate.emit()\n                        })\n                }\n            })\n    }\n\n    public removeContact(contact: IContact): void {\n        if (this.deletingContacts.has(contact.id)) {\n            return\n        }\n        this.deletingContacts.add(contact.id)\n        this.http\n            .delete<void>(`/contacts/${contact.id}`)\n            .pipe(\n                finalize(() => {\n                    this.deletingContacts.delete(contact.id)\n                })\n            )\n            .subscribe(() => {\n                this.updateEvent.next()\n                this.onUpdate.emit()\n            })\n    }\n\n    public searchContacts(search: string): void {\n        this.search = search.replace(/ /g, '')\n        this.searchEvent.next()\n    }\n\n    protected async changeState(): Promise<void> {\n        // do nothing\n    }\n}\n\nexport function openContactBook(ngbModal: NgbModal, owner: IUser): NgbModalRef {\n    const contactBookModal = ngbModal.open(ContactBookComponent, {\n        windowClass: 'modal-primary',\n    })\n    const contactBook = contactBookModal.componentInstance as ContactBookComponent\n    contactBook.user = owner\n    return contactBookModal\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Operation } from 'fast-json-patch'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { ICurrency, Risk, RPCResult, UserFlag, UserRole, UserSegment } from '../../api-interfaces'\nimport { User } from '../../models/core/user.model'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n    constructor(private http: HttpClient) {}\n\n    public updateDetails(id: string, body: Partial<any>): Observable<User> {\n        return this.http.put<User>(`/users/${id}/details`, body)\n    }\n\n    public changePassword(id: string, password: string, headers?: { [name: string]: string }): Observable<User> {\n        return this.http\n            .post<User>(\n                `/users/${id}/change-password`,\n                { password },\n                {\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json',\n                        ...headers,\n                    }),\n                }\n            )\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeEmail(id: string, email: string): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-email`, { email }).pipe(map(payload => new User(payload)))\n    }\n\n    public changePermission(id: string, permissions: string[] | null): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-permission`, { permissions })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeSegment(id: string, segment: UserSegment): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-segment`, { segment }).pipe(map(payload => new User(payload)))\n    }\n\n    public changeReferrer(id: string, referrerId: string): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-referrer`, { referrerId })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeAssociation(id: string, associationId: string | null): Observable<User> {\n        return this.http\n            .post<User>(`/admin/users/${id}/change-association`, { associationId })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeExternalId(id: string, externalId: string | null): Observable<User> {\n        return this.http\n            .post<User>(`/admin/users/${id}/change-external-id`, { externalId })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeRole(id: string, role: UserRole | null): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-role`, { role }).pipe(map(payload => new User(payload)))\n    }\n\n    public changeStatus(id: string, status: string): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-status`, { status }).pipe(map(payload => new User(payload)))\n    }\n\n    public changeRiskRating(id: string, riskRating: Risk): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-risk-rating`, { riskRating })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeTwoFactor(id: string, twoFactor: boolean, headers?: { [name: string]: string }): Observable<User> {\n        return this.http\n            .post<User>(\n                `/users/${id}/change-two-factor`,\n                { twoFactor },\n                {\n                    headers: new HttpHeaders({ 'Content-Type': 'application/json', ...headers }),\n                }\n            )\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changePreferredCurrency(id: string, preferredCurrency: ICurrency): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-preferred-currency`, { preferredCurrency })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeBillingCurrency(id: string, billingCurrency: ICurrency): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-billing-currency`, { billingCurrency })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeSendEmailNotifications(id: string, sendEmailNotifications: boolean): Observable<User> {\n        return this.http\n            .post<User>(`/users/${id}/change-send-email-notifications`, { sendEmailNotifications })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public changeFlags(id: string, flags: UserFlag[]): Observable<User> {\n        return this.http.post<User>(`/users/${id}/change-flags`, { flags }).pipe(map(payload => new User(payload)))\n    }\n\n    public changeCardProgram(id: string, cardProgramId: string | null): Observable<User> {\n        return this.http\n            .post<User>(`/admin/users/${id}/change-card-program`, { cardProgramId })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public patch(id: string, operations: Operation[]): Observable<User> {\n        return this.http\n            .patch<User>(`/users/${id}`, operations, {\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json-patch+json',\n                }),\n            })\n            .pipe(map(payload => new User(payload)))\n    }\n\n    public resendActivationMail(id: string): Observable<RPCResult<void>> {\n        return this.http.post<RPCResult<void>>(\n            `/users/${id}`,\n            {\n                id: Math.floor(Math.random() * 10000),\n                jsonrpc: '2.0',\n                method: 'resendActivationMail',\n            },\n            {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json-rpc' }),\n            }\n        )\n    }\n}\n","export default \"<!-- htmllint attr-bans=\\\"[]\\\" -->\\n<div class=\\\"spinner-wrapper\\\" [ngClass]=\\\"theme\\\">\\n    <div class=\\\"circle-spinner\\\" title=\\\"0\\\">\\n        <svg\\n            version=\\\"1.1\\\"\\n            id=\\\"loader-1\\\"\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n            x=\\\"0px\\\"\\n            y=\\\"0px\\\"\\n            width=\\\"50px\\\"\\n            height=\\\"50px\\\"\\n            viewBox=\\\"0 0 40 40\\\"\\n            enable-background=\\\"new 0 0 40 40\\\"\\n            xml:space=\\\"preserve\\\"\\n        >\\n            <path\\n                opacity=\\\"0.2\\\"\\n                fill=\\\"#000\\\"\\n                d=\\\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\\\"\\n            ></path>\\n            <path fill=\\\"#000\\\" d=\\\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0C22.32,8.481,24.301,9.057,26.013,10.047z\\\">\\n                <animateTransform\\n                    attributeType=\\\"xml\\\"\\n                    attributeName=\\\"transform\\\"\\n                    type=\\\"rotate\\\"\\n                    from=\\\"0 20 20\\\"\\n                    to=\\\"360 20 20\\\"\\n                    dur=\\\"0.5s\\\"\\n                    repeatCount=\\\"indefinite\\\"\\n                ></animateTransform>\\n            </path>\\n        </svg>\\n    </div>\\n</div>\\n<!-- htmllint attr-bans=\\\"$previous\\\" -->\\n\";","export const environment = {\n    appName: 'xabaas',\n    displayName: 'Xavista',\n    accountOpeningFeeEnabled: false,\n    cryptoDepositAddresses: {\n        BTC: 'bc1q0d4ts4wre7eh96mv6dns09lzpj92knfvznflnx',\n        BSV: '1P4TmVrjT856D2uiF3gZqpnC5TBYzwDtRu',\n        ETH: '0x900A8Df166f5625AA80F821e38f1Acef922e1Fc0',\n        LTC: 'Lh4y3TRQBZDXRL7gs9XChD2TSbsgnmUMHA',\n        'USDC.erc20': '0x900A8Df166f5625AA80F821e38f1Acef922e1Fc0',\n        'USDT.erc20': '0x900A8Df166f5625AA80F821e38f1Acef922e1Fc0',\n        'USDT.trc20': 'TKD5QD9C3mrfZAEG5RGbc6PrjSuH7P3pWY',\n    },\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core'\nimport { faCircleNotch } from '@fortawesome/pro-solid-svg-icons'\nimport BigNumber from 'bignumber.js'\nimport { currencySymbolMap } from 'currency-symbol-map'\nimport { forkJoin, merge, Observable, of, Subject } from 'rxjs'\nimport { debounceTime, finalize, map, switchMap, tap } from 'rxjs/operators'\nimport {\n    IBeneficiary,\n    ICurrency,\n    IFee,\n    Paginated,\n    RPCResult,\n    TransactionMethod,\n    TransactionType,\n} from '../api-interfaces'\nimport { Currency } from '../models/accounting/currency.model'\nimport { SessionService } from '../services/session.service'\n\n@Component({\n    selector: 'fee-preview',\n    templateUrl: 'fee-preview.component.html',\n})\nexport class FeePreviewComponent implements OnInit, OnChanges {\n    public faCircleNotch = faCircleNotch\n    public currencySymbolMap = currencySymbolMap\n    @Input()\n    /* Whether to show a currency symbol prefix. Eg. $1.00 */\n    public prefix = false\n    @Input()\n    public currency: ICurrency | null\n    @Input()\n    public type: TransactionType\n    @Input()\n    public method: TransactionMethod\n    @Input()\n    public amount: string\n    @Input()\n    public spreadUp: boolean | undefined = undefined\n    @Output()\n    public readonly fixedFeeChange = new EventEmitter<string | null>()\n    @Output()\n    public readonly relativeFeeChange = new EventEmitter<string | null>()\n    @Output()\n    public readonly beneficiaryChange = new EventEmitter<IBeneficiary | null>()\n    @Output()\n    public readonly currencyChange = new EventEmitter<Currency | null>()\n    public isLoading = true\n    private fetchEvent = new Subject<void>()\n    private currencies: ICurrency[] = []\n    private fxSpread: IFee | null = null\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    public feeStream: Observable<IFee | null> = merge(of(undefined), this.fetchEvent).pipe(\n        tap(() => {\n            this.isLoading = true\n        }),\n        debounceTime(200),\n        switchMap(() =>\n            !(this.type && this.method && this.currency)\n                ? of(null)\n                : forkJoin([\n                      // fetch the fee itself for the current set of { method, type, currency }\n                      this.http.post<RPCResult<IFee | null>>(\n                          '/fees',\n                          {\n                              id: Math.round(Math.random() * 10000),\n                              jsonrpc: '2.0',\n                              method: 'findByPrimaryAttributes',\n                              params: {\n                                  type: this.type,\n                                  method: this.method,\n                                  user: this.session.user ? { id: this.session.user.id } : null,\n                                  currency: this.currency ? { code: this.currency.code } : null,\n                              },\n                          },\n                          {\n                              headers: new HttpHeaders({\n                                  'Content-Type': 'application/json-rpc',\n                              }),\n                          }\n                      ),\n                      this.spreadUp === undefined\n                          ? of(undefined)\n                          : this.http.post<RPCResult<IFee | null>>(\n                                '/fees',\n                                {\n                                    id: Math.round(Math.random() * 10000),\n                                    jsonrpc: '2.0',\n                                    method: 'findByPrimaryAttributes',\n                                    params: {\n                                        type: 'fx-spread',\n                                        method: 'internal',\n                                        user: this.session.user ? { id: this.session.user.id } : null,\n                                        currency: this.currency ? { code: this.currency.code } : null,\n                                    },\n                                },\n                                {\n                                    headers: new HttpHeaders({\n                                        'Content-Type': 'application/json-rpc',\n                                    }),\n                                }\n                            ),\n                  ]).pipe(\n                      tap(([{ result }, fxSpreadResponse]) => {\n                          this.fixedFeeChange.emit(result && result.fixed)\n                          this.relativeFeeChange.emit(result && result.relative)\n                          this.currencyChange.emit(result && new Currency(result.currency))\n                          if (this.type === 'deposit') {\n                              this.beneficiaryChange.emit(result && result.beneficiary)\n                          }\n                          if (fxSpreadResponse) {\n                              this.fxSpread = fxSpreadResponse.result\n                          }\n                      }),\n                      map(([{ result }]) => (result ? result : ({ relative: '0.0', currency: this.currency } as IFee))),\n                      finalize(() => {\n                          this.isLoading = false\n                      })\n                  )\n        )\n    )\n\n    constructor(private http: HttpClient, private session: SessionService) {}\n\n    public ngOnInit(): void {\n        this.http.get<Paginated<ICurrency>>('/currencies', { params: { limit: 100 + '' } }).subscribe(response => {\n            this.currencies = response.data\n            this.fetchEvent.next()\n        })\n    }\n\n    public ngOnChanges(): void {\n        this.fetchEvent.next()\n    }\n\n    public calculateAmount(fee: IFee): string {\n        if (!this.currency || !this.currencies) {\n            return '0.0'\n        }\n        const found = this.currencies.find(currency => this.currency && currency.code === this.currency.code)\n        const precision = found ? found.decimalPlaces : 2\n        const relativeFeeAmount = new BigNumber(this.amount || 0).times(fee.relative || 0).toFixed(precision || 8, 1)\n        return new BigNumber(this.calculateFixedFee(fee)).plus(relativeFeeAmount).toFixed(precision || 8, 1)\n    }\n\n    private convert(amount: string, baseCurrency: ICurrency, counterCurrency: ICurrency): string {\n        const base = this.currencies.find(currency => currency.code === baseCurrency.code)\n        const counter = this.currencies.find(currency => currency.code === counterCurrency.code)\n        if (!base || !counter) {\n            return '0'\n        }\n        return Currency.convert(\n            amount,\n            base,\n            counter,\n            this.spreadUp !== undefined && this.fxSpread ? this.fxSpread : undefined,\n            this.spreadUp\n        )\n    }\n\n    private calculateFixedFee(fee: IFee): string {\n        return new BigNumber(\n            fee.fixed && this.currency ? this.convert(fee.fixed, fee.currency, this.currency) : 0\n        ).toFixed(8, 1)\n    }\n}\n","import { File } from './api-interfaces'\n\nexport class FileView {\n    private tab: Window\n\n    constructor() {\n        if (!window.navigator || !window.navigator.msSaveOrOpenBlob) {\n            const tab = window.open()\n            if (!tab) {\n                throw new Error('Could not open new window')\n            }\n            this.tab = tab\n        }\n    }\n\n    public show(blob: Blob, name?: string): void {\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveOrOpenBlob(blob, name)\n        } else {\n            this.tab.location.replace(URL.createObjectURL(blob))\n        }\n    }\n\n    public close(): void {\n        if (this.tab) {\n            this.tab.close()\n        }\n    }\n}\n\nexport function buildFileUrl(file: File): string {\n    return `https://s3.amazonaws.com/${file.bucket}/${file.key}`\n}\n","import { Component } from '@angular/core'\nimport { faUsers } from '@fortawesome/pro-solid-svg-icons'\nimport { timer } from 'rxjs'\nimport { flatMap } from 'rxjs/operators'\nimport { StatisticsService } from '../../../../common/services/core/statistics.service'\n\n@Component({\n    selector: 'online-users-count',\n    templateUrl: 'online-users-count.component.html',\n})\nexport class OnlineUsersCountComponent {\n    public faUsers = faUsers\n    public userCount$ = timer(0, 1000 * 60).pipe(flatMap(() => this.statistics.getOnlineUsersCount()))\n    constructor(private statistics: StatisticsService) {}\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Observable, of, throwError, timer } from 'rxjs'\nimport { catchError, flatMap, retryWhen } from 'rxjs/operators'\nimport { openNoAccessModal } from './no-access-modal/no-access-modal.component'\nimport { LogoutService } from './services/logout.service'\nimport { SessionService } from './services/session.service'\nimport { ToastrService } from './services/toastr.service'\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n    public static readonly MAX_RETRY_ATTEMPTS = 3\n    constructor(\n        private toastr: ToastrService,\n        private logoutService: LogoutService,\n        private modal: NgbModal,\n        private session: SessionService\n    ) {}\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const shouldLogOut = !(req.headers.get('X-No-Logout') && JSON.parse(req.headers.get('X-No-Logout')!))\n        const ignoreErrorHandling = !!(\n            req.headers.get('X-Ignore-Error-Handling') && JSON.parse(req.headers.get('X-Ignore-Error-Handling')!)\n        )\n        const suppressToast = req.headers.get('X-No-Toast') && JSON.parse(req.headers.get('X-No-Toast')!)\n        return next\n            .handle(\n                req.clone({\n                    headers: req.headers.delete('X-No-Logout').delete('X-Ignore-Error-Handling').delete('X-No-Toast'),\n                })\n            )\n            .pipe(\n                retryWhen(attempts =>\n                    attempts.pipe(\n                        flatMap((error, attempt) => {\n                            // only retry 503 maintenance errored requests\n                            if (error.status !== 503) {\n                                return throwError(error)\n                            }\n                            const retryAttempt = attempt + 1\n                            // if maximum number of retries have been exceeded, throw an error\n                            if (retryAttempt > ErrorHandlerInterceptor.MAX_RETRY_ATTEMPTS) {\n                                return throwError(error)\n                            }\n                            // retry after increasing delay, 1000ms, 2000ms, 3000ms, abort\n                            // eslint-disable-next-line no-console\n                            console.log(`Attempt ${retryAttempt}: retrying in ${retryAttempt * 1000}ms`)\n                            return timer(retryAttempt * 1000)\n                        })\n                    )\n                ),\n                catchError(err => {\n                    if (!ignoreErrorHandling && err instanceof HttpErrorResponse) {\n                        const response = err as HttpErrorResponse\n                        let error: Error & { errors?: string[] }\n                        if (response.status === -1) {\n                            error = new Error('Connection refused')\n                        } else if (response.status === 0) {\n                            error = new Error('Request failed')\n                        } else if (response.error) {\n                            error = response.error\n                        } else if (response.message) {\n                            error = new Error(response.message)\n                        } else {\n                            error = new Error(response.statusText || 'Error ' + response.status)\n                        }\n\n                        if (response.status !== 503) {\n                            // blacklist of error codes to be hidden from toasts\n                            if (\n                                !suppressToast &&\n                                ![\n                                    'VerificationRequiredError',\n                                    'RecipientNotFoundError',\n                                    'Require2FACodeError',\n                                ].includes(error.name)\n                            ) {\n                                if (error.errors?.length) {\n                                    for (const errorText of error.errors) {\n                                        this.toastr.error(errorText)\n                                    }\n                                } else {\n                                    this.toastr.error(error.message)\n                                }\n                            }\n                            return of(undefined).pipe(\n                                flatMap(() => {\n                                    if (\n                                        shouldLogOut &&\n                                        err.status === 401 &&\n                                        this.session.isAuthenticated() &&\n                                        // These errors should not lead to logging out the user\n                                        ![\n                                            'Wrong2FACodeError',\n                                            'Require2FACodeError',\n                                            'WrongCredentialsError',\n                                            'WrongPasswordError',\n                                        ].includes(error.name)\n                                    ) {\n                                        return this.logoutService.logout()\n                                    }\n                                    if (error.name === 'VerificationRequiredError') {\n                                        this.modal.dismissAll()\n                                        openNoAccessModal(this.modal, error.name)\n                                    }\n                                    return of(undefined)\n                                }),\n                                flatMap(() =>\n                                    throwError(\n                                        Object.assign(error, {\n                                            severity: 'danger',\n                                            name: error.name || response.name || 'Server error',\n                                            status: response.status,\n                                            caughtByInterceptor: true,\n                                        })\n                                    )\n                                )\n                            )\n                        } else {\n                            // backend is in maintenance mode, reload to see if the frontend is affected as well\n                            setTimeout(() => window.location.reload(), 1000)\n                        }\n                    }\n                    return throwError(err)\n                })\n            )\n    }\n}\n","import { Component } from '@angular/core'\nimport { StatusMessageService } from './status-message.service'\n\n@Component({\n    selector: 'status-message',\n    templateUrl: 'status-message.component.html',\n})\nexport class StatusMessageComponent {\n    constructor(public statusMessage: StatusMessageService) {}\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core'\n\n@Directive({\n    selector: '[numeric]',\n})\nexport class NumericDirective {\n    @Input() public decimals = 0\n\n    constructor(private el: ElementRef) {}\n\n    @HostListener('keydown')\n    public onKeyDown() {\n        this.run(this.el.nativeElement.value)\n    }\n\n    @HostListener('paste')\n    public onPaste() {\n        this.run(this.el.nativeElement.value)\n    }\n\n    private check(value: string) {\n        if (this.decimals <= 0) {\n            return String(value).match(new RegExp(/^\\d+$/))\n        } else {\n            const regExpString =\n                '^\\\\s*((\\\\d+(\\\\.\\\\d{0,' + this.decimals + '})?)|((\\\\d*(\\\\.\\\\d{1,' + this.decimals + '}))))\\\\s*$'\n            return String(value).match(new RegExp(regExpString))\n        }\n    }\n\n    private run(oldValue: string) {\n        setTimeout(() => {\n            const currentValue: string = this.el.nativeElement.value\n            if (currentValue !== '' && !this.check(currentValue)) {\n                this.el.nativeElement.value = oldValue\n            }\n        })\n    }\n}\n","import { isPlatformBrowser } from '@angular/common'\nimport { ErrorHandler, Inject, Injectable, Injector, PLATFORM_ID } from '@angular/core'\nimport * as Sentry from '@sentry/browser'\nimport * as Integrations from '@sentry/integrations'\nimport { environment } from 'src/environments/environment'\nimport { ConfirmationService } from '../common/services/confirmation.service'\nimport { SessionService, UserEventType } from '../common/services/session.service'\n\n@Injectable()\nexport class AppErrorHandler implements ErrorHandler {\n    private sentryHub: Sentry.Hub\n    constructor(\n        session: SessionService,\n        @Inject(PLATFORM_ID) private platformId: Record<string, any>,\n        private injector: Injector\n    ) {\n        if (isPlatformBrowser(platformId) && window.SENTRY_DSN) {\n            this.sentryHub = new Sentry.Hub(\n                new Sentry.BrowserClient({\n                    dsn: window.SENTRY_DSN,\n                    debug: false,\n                    release: '1.0.0',\n                    environment: environment.appName,\n                    integrations: [new Integrations.Dedupe()],\n                })\n            )\n            session.userEvent.subscribe(event => {\n                this.sentryHub.configureScope(scope => {\n                    if (event.type === UserEventType.LOGIN) {\n                        scope.setUser({\n                            id: event.user.id,\n                            email: event.user.email,\n                            username: event.user.accountNumber,\n                        })\n                    } else if (event.type === UserEventType.LOGOUT) {\n                        scope.setUser(null)\n                    }\n                })\n            })\n        }\n    }\n    public handleError(error: Error): void {\n        if ((error as any).caughtByInterceptor) {\n            // silent\n            return\n        }\n        // eslint-disable-next-line no-console\n        console.error(error)\n        if (!isPlatformBrowser(this.platformId)) {\n            return\n        }\n        // Reload webpage on chunk loading error when browsing with outdated client\n        const chunkFailedMessage = /Loading chunk [\\d]+ failed/\n        if (chunkFailedMessage.test(error.message)) {\n            const confirmation = this.injector.get(ConfirmationService)\n            confirmation\n                .show({\n                    type: 'danger',\n                    text: 'It seems that you are using an outdated version of our website. Please reload to continue browsing our shiny new one.',\n                    title: 'New version detected',\n                    showCancel: false,\n                    confirmText: 'Reload',\n                    confirmClass: 'danger',\n                })\n                .subscribe(() => {\n                    window.location.reload()\n                })\n            return\n        }\n        if (this.sentryHub) {\n            this.sentryHub.captureException((error as any).originalError || error)\n        }\n    }\n}\n","export default \"<form\\n    class=\\\"form-validation e2e-beneficiary-form\\\"\\n    #beneficiaryForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"submit()\\\"\\n    [ngClass]=\\\"{ 'ng-submitted': beneficiaryForm.submitted }\\\"\\n    autocomplete=\\\"false\\\"\\n    novalidate\\n>\\n    <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">\\n            {{ (item.id ? 'common.update' : 'common.create') | translate }}\\n            {{ (item.type === 'deposit-instruction' ? 'common.deposit-instruction' : 'common.beneficiary') | translate }}\\n        </h5>\\n        <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <ng-container *ngIf=\\\"!compact\\\">\\n            <div *ngIf=\\\"!hideFields.includes('owner')\\\" class=\\\"form-group\\\">\\n                <label for=\\\"owner\\\">{{ 'common.owner' | translate }}</label>\\n                <ng-select\\n                    id=\\\"owner\\\"\\n                    name=\\\"owner\\\"\\n                    [placeholder]=\\\"'common.enter-owner' | translate\\\"\\n                    [(ngModel)]=\\\"owner\\\"\\n                    #ownerInput=\\\"ngModel\\\"\\n                    [items]=\\\"legalEntitiesSteam | async\\\"\\n                    [typeahead]=\\\"ownerAutocomplete\\\"\\n                    [disabled]=\\\"item.id || fixateType\\\"\\n                >\\n                    <ng-template ng-label-tmp let-entry=\\\"item\\\">\\n                        {{ entry?.user.name }}\\n                        <small class=\\\"text-gray\\\">{{ entry?.user.email }}</small>\\n                    </ng-template>\\n                    <ng-template ng-option-tmp let-entry=\\\"item\\\">\\n                        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                            <user-avatar *ngIf=\\\"entry\\\" [user]=\\\"entry?.user\\\" size=\\\"sm\\\" elementClass=\\\"mr-2\\\"></user-avatar>\\n                            <div class=\\\"w-100\\\">\\n                                <div>{{ entry?.user.name }}</div>\\n                                <small class=\\\"text-gray\\\">{{ entry?.user.email }}</small>\\n                            </div>\\n                        </div>\\n                    </ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"ownerInput.invalid && (beneficiaryForm.submitted || ownerInput.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"ownerInput?.errors?.validateObject\\\">\\n                        {{ 'common.please-choose-owner' | translate }}.\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"!hideFields.includes('type')\\\" class=\\\"form-group\\\">\\n                <label for=\\\"type\\\">{{ 'common.type' | translate }}</label>\\n                <ng-select\\n                    name=\\\"type\\\"\\n                    [items]=\\\"beneficiaryTypes\\\"\\n                    [placeholder]=\\\"'common.select-type' | translate\\\"\\n                    [(ngModel)]=\\\"copy.type\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #type=\\\"ngModel\\\"\\n                    [disabled]=\\\"item.id || fixateType\\\"\\n                    required\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                        {{ item | startCase }}\\n                    </ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                        {{ item | startCase }}\\n                    </ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"type.invalid && (beneficiaryForm.submitted || type.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"type?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </ng-container>\\n        <div *ngIf=\\\"!hideFields.includes('method')\\\" class=\\\"form-group\\\">\\n            <label for=\\\"type\\\">{{ 'common.method' | translate }}</label>\\n            <ng-select\\n                name=\\\"method\\\"\\n                [items]=\\\"beneficiaryMethods\\\"\\n                [placeholder]=\\\"'common.select-method' | translate\\\"\\n                [(ngModel)]=\\\"copy.method\\\"\\n                [clearable]=\\\"false\\\"\\n                (change)=\\\"onChangeMethod($event)\\\"\\n                [disabled]=\\\"item.id || fixateType\\\"\\n                #method=\\\"ngModel\\\"\\n                required\\n            >\\n                <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                    {{ item | uppercase }}\\n                </ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                    {{ item | uppercase }}\\n                </ng-template>\\n            </ng-select>\\n            <div *ngIf=\\\"method.invalid && (beneficiaryForm.submitted || method.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"method?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <ng-container *ngIf=\\\"copy.method\\\">\\n            <div class=\\\"form-group\\\" *ngIf=\\\"!hideFields.includes('currency')\\\">\\n                <label for=\\\"currency\\\">{{ 'common.currency' | translate }}</label>\\n                <ng-select\\n                    [items]=\\\"currencies\\\"\\n                    [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                    name=\\\"currency\\\"\\n                    id=\\\"currency\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [(ngModel)]=\\\"copy.currency\\\"\\n                    #currency=\\\"ngModel\\\"\\n                    required\\n                    [searchable]=\\\"false\\\"\\n                    [disabled]=\\\"item.id || fixateType\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\"> {{ item?.code }} - {{ item?.name }} </ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\"> {{ item?.code }} - {{ item?.name }} </ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"currency.invalid && (beneficiaryForm.submitted || currency.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"currency?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <beneficiary-details-form [beneficiary]=\\\"copy\\\" [requireAll]=\\\"false\\\" #beneficiaryDetailsForm></beneficiary-details-form>\\n        </ng-container>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger btn-w-sm e2e-delete-beneficiary-btn\\\"\\n            (click)=\\\"delete()\\\"\\n            *ngIf=\\\"item.id\\\"\\n            [ngClass]=\\\"{ loading: isDeleting }\\\"\\n            [disabled]=\\\"isSaving || isDeleting\\\"\\n        >\\n            {{ 'common.delete' | translate }}\\n        </button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-w-sm\\\" [ngClass]=\\\"{ loading: isSaving }\\\" [disabled]=\\\"isSaving || isDeleting\\\">\\n            {{ (item.id ? 'common.update' : 'common.create') | translate }}\\n        </button>\\n    </div>\\n</form>\\n\";","import { Directive, Input } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms'\nimport isValid from 'date-fns/isValid'\n\n@Directive({\n    selector: '[useValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: ValidateDirective, multi: true }],\n})\nexport class ValidateDirective implements Validator {\n    @Input()\n    public useValidator: string\n\n    public validate(control: AbstractControl): { [key: string]: any } | null {\n        const value = control.value\n        if (!value) {\n            return null\n        }\n        switch (this.useValidator) {\n            case 'object':\n                return typeof value !== 'object' ? { validateObject: true } : null\n            case 'date':\n                if (typeof value === 'string') {\n                    const date = value.replace(/_/g, '').replace(/\\//g, '')\n                    if (\n                        date.length === 8 &&\n                        isValid(new Date(`${date.slice(4)}-${date.slice(2, 4)}-${date.slice(0, 2)}`))\n                    ) {\n                        return null\n                    }\n                }\n                return { validateDate: true }\n        }\n        return null\n    }\n}\n","export default \"<ng-container *ngIf=\\\"feeStream | async as fee\\\">\\n    <ng-container *ngIf=\\\"!isLoading; else loadingFee\\\">\\n        <span>\\n            <ng-container *ngIf=\\\"prefix && currency\\\">{{ currencySymbolMap[currency.code] }}</ng-container\\n            >{{ calculateAmount(fee) }} {{ currency?.code }}\\n        </span>\\n    </ng-container>\\n</ng-container>\\n<ng-template #loadingFee>\\n    <fa-icon [icon]=\\\"faCircleNotch\\\" [spin]=\\\"true\\\"></fa-icon>\\n</ng-template>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport { SafeUrl } from '@angular/platform-browser'\nimport formatDate from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO'\n\n@Pipe({ name: 'formatDate' })\nexport class FormatDatePipe implements PipeTransform {\n    public transform(value: any, format: string): SafeUrl {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return formatDate(parseISO(value), format)\n    }\n}\n","export default \"<a\\n    href\\n    class=\\\"text-decoration-none\\\"\\n    (click)=\\\"$event.preventDefault(); $event.stopPropagation(); copy()\\\"\\n    ngbTooltip=\\\"Copied\\\"\\n    [triggers]=\\\"''\\\"\\n    #tooltip=\\\"ngbTooltip\\\"\\n>\\n    <ng-content></ng-content>\\n</a>\\n\";","export default \"<h6>{{ 'permission-select.payment-methods' | translate }}</h6>\\n<div *ngFor=\\\"let permission of paymentPermissions; let i = index\\\" class=\\\"custom-controls-stacked\\\">\\n    <label class=\\\"custom-control custom-switch\\\">\\n        <input\\n            type=\\\"checkbox\\\"\\n            name=\\\"payment-{{ i }}\\\"\\n            class=\\\"custom-control-input\\\"\\n            [value]=\\\"permission\\\"\\n            (change)=\\\"togglePaymentMethod(permission, $event.target.checked)\\\"\\n            [checked]=\\\"permissions.indexOf(permission) !== -1\\\"\\n            [disabled]=\\\"!['admin'].includes(session.user?.role)\\\"\\n        />\\n        <span class=\\\"custom-control-label font-md text-uppercase\\\">\\n            {{ getPermissionLabel(permission) }}\\n        </span>\\n    </label>\\n</div>\\n<h6 class=\\\"mt-3\\\">{{ 'common.features' | translate }}</h6>\\n<div *ngFor=\\\"let permission of featurePermissions; let i = index\\\" class=\\\"custom-controls-stacked\\\">\\n    <label class=\\\"custom-control custom-switch\\\">\\n        <input\\n            type=\\\"checkbox\\\"\\n            name=\\\"features-{{ i }}\\\"\\n            class=\\\"custom-control-input\\\"\\n            [value]=\\\"permission\\\"\\n            (change)=\\\"toggleFeature(permission, $event.target.checked)\\\"\\n            [checked]=\\\"permissions.indexOf(permission) !== -1\\\"\\n            [disabled]=\\\"!['admin'].includes(session.user?.role)\\\"\\n        />\\n        <span class=\\\"custom-control-label font-md\\\">\\n            {{ getPermissionLabel(permission) }}\\n        </span>\\n    </label>\\n</div>\\n\";","export default \"<form\\n    class=\\\"form-validation e2e-file-form\\\"\\n    #userFileForm=\\\"ngForm\\\"\\n    (ngSubmit)=\\\"save()\\\"\\n    [ngClass]=\\\"{ 'ng-submitted': userFileForm.submitted }\\\"\\n    autocomplete=\\\"false\\\"\\n    novalidate\\n>\\n    <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ 'common.update-file' | translate }}</h5>\\n        <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"type\\\">{{ 'common.type' | translate }}</label>\\n            <ng-select\\n                name=\\\"type\\\"\\n                [(ngModel)]=\\\"copy.type\\\"\\n                [items]=\\\"types\\\"\\n                [clearable]=\\\"false\\\"\\n                [searchable]=\\\"false\\\"\\n                [placeholder]=\\\"'common.select-type' | translate\\\"\\n                required\\n                #type=\\\"ngModel\\\"\\n            >\\n                <ng-template ng-label-tmp let-item=\\\"item\\\">{{ toStartCase(mapTypes(item)) }}</ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\">{{ toStartCase(mapTypes(item)) }}</ng-template>\\n            </ng-select>\\n            <div *ngIf=\\\"type.invalid && (userFileForm.submitted || type.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"type?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-w-sm\\\" [ngClass]=\\\"{ loading: isSaving }\\\" [disabled]=\\\"isSaving\\\">\\n            {{ 'common.save' | translate }}\\n        </button>\\n    </div>\\n</form>\\n\";","import { countries as countryData, Country, CountryMap } from '@aerapass/country-data'\nimport { orderBy } from 'lodash'\n\nexport const countryMap: CountryMap = {}\nexport let countries: Country[] = []\n\nconst blockedCountries: string[] = [\n    'CU', // CUBA\n    'IR', // IRAN\n    'SD', // SUDAN\n    'SY', // SYRIA\n    'KP', // NORTH KOREA\n    'LY', // LIBYA\n    'VE', // VENEZUELA\n    'AF', // AFGHANISTAN\n    'YE', // YEMEN\n    'NI', // NICARAGUA\n    'ZW', // ZIMBABWE\n    'MM', // MYANMAR\n    'KH', // CAMBODIA\n    'BA', // BOSNIA-HERZEGOVINA\n    'IQ', // IRAQ\n    'SO', // SOMALIA\n    'SS', // SOUTH SUDAN\n]\n\nfor (const country of countryData.all) {\n    if (country.status === 'assigned' && country.countryCallingCodes.length > 0) {\n        countryMap[country.alpha2] = country\n        countries.push(country)\n    }\n}\n\n// filter blocked sanctions jurisdictions\ncountries = countries.filter(country => !blockedCountries.includes(country.alpha2))\n\nexport const countriesSortedByName = orderBy(countries, [country => country.name.toLowerCase()], ['asc'])\n\nexport { Country }\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { isBefore, parseISO } from 'date-fns'\n\n@Pipe({ name: 'isBefore' })\nexport class IsBeforePipe implements PipeTransform {\n    public transform(value: any): boolean {\n        if (typeof value !== 'string') {\n            return false\n        }\n        return isBefore(parseISO(value), new Date())\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.confirm-to-continue' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<form class=\\\"form-validation e2e-confirm-password\\\" #passwordForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\" novalidate>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"alert\\\">{{ alert }}</div>\\n        <div class=\\\"control-group\\\" *ngIf=\\\"!showTwoFactorForm; else twoFactorForm\\\">\\n            <label>{{ 'common.password' | translate }}</label>\\n            <input\\n                type=\\\"password\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"password\\\"\\n                [placeholder]=\\\"'common.enter-your-password' | translate\\\"\\n                [(ngModel)]=\\\"password\\\"\\n                [focus]=\\\"true\\\"\\n                required\\n            />\\n        </div>\\n        <ng-template #twoFactorForm>\\n            <div class=\\\"alert alert-info\\\">{{ 'common.two-factor-authentication-is-enabled' | translate }}</div>\\n            <div class=\\\"control-group\\\">\\n                <label>{{ 'common.two-factor-code' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    name=\\\"twoFactorCode\\\"\\n                    [placeholder]=\\\"'common.enter-your-code' | translate\\\"\\n                    number\\n                    [(ngModel)]=\\\"twoFactorCode\\\"\\n                    [focus]=\\\"true\\\"\\n                    required\\n                />\\n            </div>\\n        </ng-template>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-icon\\\" [ngClass]=\\\"{loading: isLoading}\\\" [disabled]=\\\"!canSubmit()\\\">\\n            <fa-icon class=\\\"btn-icon-symbol\\\" [icon]=\\\"faUnlockAlt\\\"></fa-icon>\\n            <span>{{ 'common.confirm' | translate }}</span>\\n        </button>\\n    </div>\\n</form>\\n\";","export class Timestamp {\n    public static readonly stamp = '1655282884967'\n}\n","import BigNumber from 'bignumber.js'\nimport { environment } from 'src/environments/environment'\nimport { IUser, Transaction, Wallet } from './api-interfaces'\nimport { formatAccountNumber } from './common.mixin'\n\nexport function calculateFee(transaction: Transaction): string {\n    const { amount, precision } = fetchAmountAndPrecision(transaction)\n    let relativeFeeAmount = new BigNumber(amount).times(transaction.relativeFee)\n    // Only use this for preview\n    if (!transaction.id && transaction.settledAmount) {\n        // Factor fixed fee to relative fee computation\n        const fixedAmount = new BigNumber(amount).plus(transaction.fixedFee)\n        relativeFeeAmount = fixedAmount\n            .div(new BigNumber(1).minus(new BigNumber(transaction.relativeFee)))\n            .minus(fixedAmount)\n    }\n    const roundingMode = environment.appName === 'sgpmx' ? 4 : 1\n    return new BigNumber(transaction.fixedFee || 0).plus(relativeFeeAmount).toFixed(precision, roundingMode)\n}\n\n/**\n * Calculates amount which will be credited to the receiver wallet\n */\nexport function calculateCreditableAmount(transaction: Transaction): string {\n    const { amount, precision } = fetchAmountAndPrecision(transaction)\n    if (['card-order', 'account-fee', 'payment'].includes(transaction.type)) {\n        return new BigNumber(0).toFixed(precision, 1)\n    }\n    const total = new BigNumber(amount).minus(\n        !transaction.id && transaction.settledAmount ? 0 : calculateFee(transaction)\n    )\n    const roundingMode = environment.appName === 'sgpmx' ? 4 : 1\n    return (total.isGreaterThan(0) ? total : new BigNumber(0)).toFixed(precision, roundingMode)\n}\n\n/**\n * Calculates amount which will be deducted from the sender wallet\n */\nexport function calculateDeductableAmount(transaction: Transaction): string {\n    const { amount, precision } = fetchAmountAndPrecision(transaction)\n    if (['card-order', 'account-fee', 'payment'].includes(transaction.type)) {\n        return new BigNumber(calculateFee(transaction)).toFixed(precision, 1)\n    }\n    const roundingMode = environment.appName === 'sgpmx' ? 4 : 1\n    return new BigNumber(amount)\n        .plus(!transaction.id && transaction.settledAmount ? calculateFee(transaction) : 0)\n        .toFixed(precision, roundingMode)\n}\n\nfunction fetchAmountAndPrecision(transaction: Transaction): { amount: string; precision: number } {\n    const amount = transaction.amount || transaction.requestedAmount || '0'\n    let precision\n    if (transaction.precision !== undefined) {\n        precision = transaction.precision\n    } else if (transaction.currency) {\n        precision = transaction.currency.decimalPlaces\n    } else {\n        precision = 8\n    }\n    return { amount, precision }\n}\n\nexport function buildWalletOwnerAccountNumber(wallet: Wallet | null, fallback: string): string {\n    return wallet ? (wallet.user ? formatAccountNumber(wallet.user.accountNumber) : fallback) : 'Mint'\n}\n\nexport function isReceiver(transaction: Transaction, user: IUser | null): boolean {\n    return (\n        !!transaction.counterWallet &&\n        !!transaction.counterWallet.user &&\n        !!user &&\n        transaction.counterWallet.user.id === user.id\n    )\n}\n\nexport function isTransactionProcessable(transaction: Transaction): boolean {\n    return !transaction.automated || transaction.faulty\n}\n","import { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs'\n\n@Injectable({\n    providedIn: 'root',\n})\n/**\n * Local storage abstraction layer that handles browsers without an\n * implementation of localStorage and adds global error handling for storage issues\n */\nexport class StorageService {\n    public storageChange = new Subject<StorageEvent>()\n    /* fallback in memory map to simulate local storage */\n    private inMemoryLocalStorage = new Map<string, string>()\n\n    private useLocalStorage = this.isLocalStorageAvailable()\n\n    constructor() {\n        // add listener for storageEvents\n        window.addEventListener('storage', event => {\n            this.storageChange.next(event)\n        })\n    }\n\n    public getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key)\n        } else {\n            return this.inMemoryLocalStorage.has(key) ? this.inMemoryLocalStorage.get(key)! : null\n        }\n    }\n\n    public hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key) !== null\n        } else {\n            return this.inMemoryLocalStorage.has(key)\n        }\n    }\n\n    public setItem(key: string, value: string): void {\n        if (this.useLocalStorage) {\n            try {\n                localStorage.setItem(key, value)\n            } catch (error) {\n                // hide safari in-private browsing quota exceeded error and don't save to local storage\n                if (error.name !== 'QuotaExceededError') {\n                    throw error\n                }\n            }\n        } else {\n            const oldValue = this.inMemoryLocalStorage.get(key)\n            this.inMemoryLocalStorage.set(key, value)\n            this.storageChange.next(\n                new StorageEvent('change', { url: window.location.href, oldValue, newValue: value, key })\n            )\n        }\n    }\n\n    public removeItem(key: string): void {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(key)\n        } else {\n            const oldValue = this.inMemoryLocalStorage.get(key)\n            this.inMemoryLocalStorage.delete(key)\n            this.storageChange.next(\n                new StorageEvent('change', { url: window.location.href, oldValue, newValue: undefined, key })\n            )\n        }\n    }\n\n    private isLocalStorageAvailable(): boolean {\n        // taken from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n        const storage = window.localStorage\n        try {\n            const x = '__storage_test__'\n            storage.setItem(x, x)\n            storage.removeItem(x)\n            return true\n        } catch (error) {\n            return (\n                error instanceof DOMException &&\n                // everything except Firefox\n                (error.code === 22 ||\n                    // Firefox\n                    error.code === 1014 ||\n                    // test name field too, because code might not be present\n                    // everything except Firefox\n                    error.name === 'QuotaExceededError' ||\n                    // Firefox\n                    error.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n                // acknowledge QuotaExceededError only if there's something already stored\n                storage.length !== 0\n            )\n        }\n    }\n}\n","export default \"<a href (click)=\\\"$event.preventDefault(); $event.stopPropagation(); copy()\\\">\\n    <fa-icon [icon]=\\\"faCopy\\\" [ngbTooltip]=\\\"'Copied!'\\\" [triggers]=\\\"''\\\" #tooltip=\\\"ngbTooltip\\\"></fa-icon>\\n</a>\\n\";","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: MaxValidatorDirective,\n            multi: true,\n        },\n    ],\n})\nexport class MaxValidatorDirective implements Validator, OnChanges {\n    @Input()\n    public max: number\n    private onChanges: () => void\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.max) {\n            this.max = changes.max.currentValue\n            if (this.onChanges) {\n                this.onChanges()\n            }\n        }\n    }\n\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (this.max === undefined || this.max === null) {\n            return null\n        }\n        const required = Validators.required(control)\n        if (required !== null) {\n            return null\n        }\n        const v = +control.value\n        return v <= +this.max ? null : { actualValue: v, requiredValue: +this.max, max: true }\n    }\n\n    public registerOnValidatorChange(fn: () => void): void {\n        this.onChanges = fn\n    }\n}\n","export default \"<button\\n    class=\\\"btn btn-default\\\"\\n    type=\\\"button\\\"\\n    (click)=\\\"$event.stopPropagation(); copy()\\\"\\n    [ngbTooltip]=\\\"'common.copied' | translate\\\"\\n    [triggers]=\\\"''\\\"\\n    #tooltip=\\\"ngbTooltip\\\"\\n    [disabled]=\\\"disabled\\\"\\n>\\n    <fa-icon [icon]=\\\"faCopy\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n</button>\\n\";","export default \"<div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-borderless table-striped mb-0\\\" [ngClass]=\\\"borderless ? 'table-borderless' : 'table-bordered'\\\">\\n        <tbody>\\n            <tr *ngIf=\\\"showMethod\\\">\\n                <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.method' | translate }}</td>\\n                <td class=\\\"text-uppercase\\\">{{ beneficiary?.method }}</td>\\n            </tr>\\n            <tr>\\n                <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.beneficiary' | translate }}</td>\\n                <td>{{ beneficiary?.accountHolder }}</td>\\n            </tr>\\n            <tr>\\n                <td class=\\\"text-muted font-sm\\\">- {{ getAccountNumberLabel() }}</td>\\n                <td>{{ beneficiary?.accountNumber }}</td>\\n            </tr>\\n            <ng-container *ngIf=\\\"beneficiary.method === 'swift' || beneficiary.method === 'local'\\\">\\n                <tr>\\n                    <td class=\\\"text-muted font-sm\\\">- {{ 'common.address' | translate }}</td>\\n                    <td>\\n                        <postal-address [address]=\\\"beneficiary?.accountHolderAddress\\\"></postal-address>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.beneficiary-bank' | translate }}</td>\\n                    <td>{{ beneficiary?.bankName }}</td>\\n                </tr>\\n                <tr *ngIf=\\\"showSwift()\\\">\\n                    <td class=\\\"text-muted font-sm\\\">- {{ getSwiftLabel() }}</td>\\n                    <td>{{ beneficiary?.bankSwiftCode }}</td>\\n                </tr>\\n                <tr *ngIf=\\\"showRoutingNumber()\\\">\\n                    <td class=\\\"text-muted font-sm\\\">- {{ getRoutingNumberLabel() }}</td>\\n                    <td>{{ beneficiary?.routingNumber }}</td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"text-muted font-sm\\\">- {{ 'common.address' | translate }}</td>\\n                    <td>\\n                        <postal-address [address]=\\\"beneficiary?.bankAddress\\\"></postal-address>\\n                    </td>\\n                </tr>\\n                <ng-container *ngIf=\\\"beneficiary?.intermediateBankName\\\">\\n                    <tr>\\n                        <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.intermediate-bank' | translate }}</td>\\n                        <td>{{ beneficiary?.intermediateBankName }}</td>\\n                    </tr>\\n                    <tr>\\n                        <td class=\\\"text-muted font-sm\\\">- {{ 'common.swift-code' | translate }}</td>\\n                        <td>{{ beneficiary?.intermediateBankSwiftCode }}</td>\\n                    </tr>\\n                    <tr>\\n                        <td class=\\\"text-muted font-sm\\\">- {{ 'common.address' | translate }}</td>\\n                        <td>\\n                            <postal-address [address]=\\\"beneficiary?.intermediateBankAddress\\\"></postal-address>\\n                        </td>\\n                    </tr>\\n                </ng-container>\\n            </ng-container>\\n            <tr *ngIf=\\\"showCurrency\\\">\\n                <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.currency' | translate }}</td>\\n                <td class=\\\"text-uppercase\\\">{{ beneficiary?.currency?.code }}</td>\\n            </tr>\\n            <ng-container *ngIf=\\\"transaction\\\">\\n                <tr *ngIf=\\\"transaction.type === 'deposit'\\\">\\n                    <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.amount' | translate }}</td>\\n                    <td class=\\\"text-primary\\\">\\n                        {{ transaction.amount | amount: transaction.currency?.decimalPlaces }} {{ transaction.currency?.code }}\\n                    </td>\\n                </tr>\\n                <tr *ngIf=\\\"transaction.type === 'withdrawal'\\\">\\n                    <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.amount' | translate }}</td>\\n                    <td class=\\\"text-primary\\\">\\n                        {{ calculateCreditableAmount(transaction) | amount: transaction.currency?.decimalPlaces }}\\n                        {{ transaction.currency?.code }}\\n                    </td>\\n                </tr>\\n                <tr *ngIf=\\\"transaction.id\\\">\\n                    <td class=\\\"font-weight-bold text-gray\\\">{{ 'common.reference' | translate }}</td>\\n                    <td>\\n                        {{ transaction.id.substring(0, 7).toUpperCase() }}\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"p-0\\\" colspan=\\\"2\\\">\\n                        <div\\n                            *ngIf=\\\"showWarning && ['pending', 'processing'].includes(transaction.status) && transaction.type === 'deposit'\\\"\\n                            class=\\\"callout callout-danger whitespace-normal mb-0\\\"\\n                        >\\n                            <h6 class=\\\"text-danger mb-0\\\">{{ 'common.important-notice' | translate }}</h6>\\n                            <p>{{ 'common.if-you-specify' | translate }}</p>\\n                            <p *ngIf=\\\"appName === 'sgpmx'\\\">\\n                                {{ 'common.by-clicking-mark-as-paid' | translate }}\\n                            </p>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </ng-container>\\n        </tbody>\\n    </table>\\n</div>\\n\";","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { finalize, flatMap, share } from 'rxjs/operators'\nimport { Authentication } from '../api-interfaces'\nimport { SessionService, TokenScope, User } from './session.service'\n\nexport interface TokenOptions {\n    scopes?: TokenScope[]\n    twoFactorCode?: string\n    email?: string\n    password?: string\n    refreshToken?: string\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TokenService {\n    private tokenRequest: Observable<Authentication> | null = null\n\n    constructor(private session: SessionService, private http: HttpClient) {}\n\n    public fetch(options: TokenOptions = {}): Observable<Authentication> {\n        if (!this.tokenRequest) {\n            const body: { [K: string]: string | string[] } = {}\n            const potentialEmail = options.email || (this.session.user && this.session.user.email)\n            const potentialRefreshToken =\n                options.refreshToken || (this.session.hasValidRefreshToken() && this.session.refreshToken!.id)\n            if (potentialEmail) {\n                body.email = potentialEmail\n            }\n            if (potentialRefreshToken) {\n                body.refreshToken = potentialRefreshToken\n            }\n            if (options.password) {\n                body.password = options.password\n            }\n            if (options.scopes) {\n                body.scopes = options.scopes\n            }\n            this.tokenRequest = this.http\n                .post<Authentication>('/token', body, {\n                    headers: options.twoFactorCode\n                        ? new HttpHeaders({ 'X-2FA-Code': options.twoFactorCode })\n                        : undefined,\n                })\n                .pipe(\n                    share(),\n                    finalize(() => {\n                        this.tokenRequest = null\n                    })\n                )\n        }\n        return this.tokenRequest\n    }\n\n    public refresh(options: TokenOptions = {}): Observable<User> {\n        return this.fetch(options).pipe(flatMap(({ refreshToken, token }) => this.session.update(refreshToken, token)))\n    }\n}\n","export default \"<a [routerLink]=\\\"['/admin/accounts/users', user.id]\\\">\\n    <span class=\\\"text-body\\\" placement=\\\"right\\\" [ngbTooltip]=\\\"user.accountNumber | accountNumber\\\">\\n        {{ user.name }}\\n    </span>\\n</a>\\n\";","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { merge, of, ReplaySubject, Subject } from 'rxjs'\nimport { filter, flatMap, map, switchMap } from 'rxjs/operators'\nimport { SessionService, UserEventType } from './session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MailNotificationsService {\n    public unreadMessagesStream = new ReplaySubject<number>(1)\n    public onRead = new Subject<void>()\n    private notifyEvent = new Subject<void>()\n\n    constructor(private session: SessionService, private http: HttpClient) {\n        merge(this.notifyEvent, this.session.userEvent.pipe(filter(event => event.type === UserEventType.LOGIN)))\n            .pipe(\n                switchMap(() => this.session.userStream),\n                flatMap(user =>\n                    user\n                        ? this.http.head(`/users/${user.id}/mails`, {\n                              observe: 'response',\n                              params: new HttpParams().set('scope', 'unread'),\n                          })\n                        : of(null)\n                ),\n                map(response =>\n                    response && response.headers.has('x-total-count') ? ~~response.headers.get('x-total-count')! : 0\n                )\n            )\n            .subscribe(count => {\n                this.unreadMessagesStream.next(count)\n            })\n    }\n\n    public notify(): void {\n        this.onRead.next()\n        this.notifyEvent.next()\n    }\n}\n","import { Injectable } from '@angular/core'\nimport {\n    faBan,\n    faCheckCircle,\n    faExclamationCircle,\n    faInfoCircle,\n    IconDefinition,\n} from '@fortawesome/pro-solid-svg-icons'\nimport { Subject } from 'rxjs'\n\nexport type ToastType = 'info' | 'warning' | 'success' | 'error'\n\nexport interface Toast {\n    id: number\n    type: ToastType\n    message: string\n    title?: string\n    icon: IconDefinition\n    timeout?: NodeJS.Timer\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ToastrService {\n    private toastSource = new Subject<Toast>()\n    private lastToastId = 0\n    private iconClasses: { [key in ToastType]: IconDefinition } = {\n        error: faBan,\n        warning: faExclamationCircle,\n        success: faCheckCircle,\n        info: faInfoCircle,\n    }\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    public toastPushed = this.toastSource.asObservable()\n\n    public log(type: ToastType, message: string, title?: string): void {\n        title = title || 'Server Message'\n        this.toastSource.next({\n            id: this.lastToastId++,\n            icon: this.iconClasses[type],\n            type,\n            message,\n            title,\n        })\n    }\n    public info(message: string, title?: string): void {\n        this.log('info', message, title)\n    }\n    public warning(message: string, title?: string): void {\n        this.log('warning', message, title)\n    }\n    public success(message: string, title?: string): void {\n        this.log('success', message, title)\n    }\n    public error(message: string, title?: string): void {\n        this.log('error', message, title)\n    }\n}\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\nimport isAfter from 'date-fns/isAfter'\nimport isBefore from 'date-fns/isBefore'\nimport isValid from 'date-fns/isValid'\nimport subYears from 'date-fns/subYears'\nimport { formatMaskedDate } from '../user-details-form/user-details-form.component'\n\n@Directive({\n    selector: '[birthdayValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: BirthdayValidatorDirective, multi: true }],\n})\nexport class BirthdayValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (control.value) {\n            const date = formatMaskedDate(control.value)\n            if (!isValid(new Date(date))) {\n                return { invalidDate: true }\n            }\n            if (isBefore(new Date(date), new Date('1900-01-01'))) {\n                return { dateLongAgo: true }\n            }\n            if (isAfter(new Date(date), subYears(new Date(), 18))) {\n                return { dateInFuture: true }\n            }\n        }\n        return null\n    }\n}\n","import { Component } from '@angular/core'\n\n@Component({\n    selector: 'not-found',\n    templateUrl: 'not-found.component.html',\n})\nexport class NotFoundComponent {}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core'\nimport { StatusMessageComponent } from './status-message.component'\nimport { StatusMessageService } from './status-message.service'\n\n@Component({\n    selector: 'status-message-outlet',\n    template: '',\n})\n/* This component is only an outlet for the status message, so we don't have to add logic to all clients */\nexport class StatusMessageOutletComponent implements OnInit {\n    constructor(private statusMessage: StatusMessageService, private viewContainerRef: ViewContainerRef) {}\n\n    public ngOnInit(): void {\n        this.statusMessage.initializeListener(this.viewContainerRef, StatusMessageComponent)\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { QueryEntity } from '@datorama/akita'\nimport BigNumber from 'bignumber.js'\nimport { orderBy } from 'lodash'\nimport { combineLatest, Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { Wallet } from '../../common/api-interfaces'\nimport { SessionService } from '../../common/services/session.service'\nimport { convertCurrency } from '../currencies/currencies.mixin'\nimport { CurrenciesQuery } from '../currencies/currencies.query'\nimport { WalletsState, WalletsStore } from './wallets.store'\n\n@Injectable({ providedIn: 'root' })\nexport class WalletsQuery extends QueryEntity<WalletsState> {\n    /** Estimates the value in the user's preferred currency as well */\n    public balances$: Observable<(Wallet & { value: string; usdValue: string })[]> = combineLatest(\n        this.selectAll(),\n        this.currenciesQuery.selectAll(),\n        this.session.userStream\n    ).pipe(\n        map(([wallets, currencies, user]) => {\n            const transformed = wallets.map(wallet => ({\n                ...wallet,\n                value: convertCurrency(\n                    wallet.availableBalance,\n                    currencies.find(currency => currency.code === wallet.currency.code)!,\n                    currencies.find(currency => currency.code === user.preferredCurrency.code)!\n                ),\n                usdValue: new BigNumber(wallet.availableBalance).isGreaterThan(0)\n                    ? new BigNumber(\n                          convertCurrency(\n                              wallet.availableBalance,\n                              currencies.find(currency => currency.code === wallet.currency.code)!,\n                              currencies.find(currency => currency.code === 'USD')!\n                          )\n                      ).toFixed(2)\n                    : '0.00',\n            }))\n\n            // SGPMX only, always display USD, AU and AG\n            if (environment.appName === 'sgpmx') {\n                for (const currencyCode of ['USD', 'AG', 'AU']) {\n                    if (!wallets.find(wallet => wallet.currency.code === currencyCode)) {\n                        transformed.push({\n                            balance: new BigNumber(0).toFixed(8, 1),\n                            value: new BigNumber(0).toFixed(8, 1),\n                            currency: currencies.find(currency => currency.code === currencyCode),\n                        } as any)\n                    }\n                }\n            } else if (!wallets.find(wallet => wallet.currency.code === user.preferredCurrency.code)) {\n                // If no wallet of the preferred currency exists, create placeholder\n                transformed.push({\n                    balance: new BigNumber(0).toFixed(8, 1),\n                    value: new BigNumber(0).toFixed(8, 1),\n                    currency: currencies.find(currency => currency.code === user.preferredCurrency.code),\n                } as any)\n            }\n\n            // Sort alphabetically by currency name\n            return orderBy(transformed, [wallet => wallet.currency?.name.toLowerCase()], ['asc'])\n        })\n    )\n\n    /** If more than 4 wallets strip of 0 balance wallets */\n    public filteredBalances$ = this.balances$.pipe(\n        map(wallets => {\n            if (wallets.length > 4) {\n                let strippable = 0\n                return wallets.filter(wallet => {\n                    const hasZeroBlance = new BigNumber(wallet.balance).isEqualTo(0)\n                    if (hasZeroBlance) {\n                        strippable++\n                    }\n                    return !(hasZeroBlance && wallets.length - strippable >= 4)\n                })\n            }\n            return wallets\n        })\n    )\n\n    public totalBalance$ = this.balances$.pipe(\n        map(wallets => wallets.reduce((netWorth, wallet) => netWorth.plus(wallet.value), new BigNumber(0)).toFixed(2))\n    )\n\n    constructor(\n        protected store: WalletsStore,\n        private currenciesQuery: CurrenciesQuery,\n        private session: SessionService\n    ) {\n        super(store)\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { SafeUrl } from '@angular/platform-browser'\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\nimport parseISO from 'date-fns/parseISO'\n\n@Pipe({ name: 'formatDistanceToNow' })\nexport class FormatDistanceToNowPipe implements PipeTransform {\n    public transform(value: any, includeSeconds = false, addSuffix = false): SafeUrl {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return formatDistanceToNow(parseISO(value), { includeSeconds, addSuffix })\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { faEnvelope } from '@fortawesome/pro-solid-svg-icons'\nimport { combineLatest, Subject, Subscription } from 'rxjs'\nimport { debounceTime, switchMap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport * as striptags from 'striptags'\nimport { Mail, Paginated } from '../../../../common/api-interfaces'\nimport { MailNotificationsService } from '../../../../common/services/mail-notifications.service'\nimport { SessionService } from '../../../../common/services/session.service'\n\n@Component({\n    selector: 'header-mailbox',\n    templateUrl: 'header-mailbox.component.html',\n})\nexport class HeaderMailboxComponent implements OnInit, OnDestroy {\n    public striptags = striptags\n    public faEnvelope = faEnvelope\n    public mails: Mail[] = []\n    public count = 0\n    public displayName = environment.displayName\n    private subscriptions = new Subscription()\n    private fetchEvent = new Subject<void>()\n\n    constructor(\n        public session: SessionService,\n        private http: HttpClient,\n        public router: Router,\n        private mailNotifications: MailNotificationsService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            combineLatest(this.fetchEvent, this.session.userStream)\n                .pipe(\n                    debounceTime(600),\n                    switchMap(([_, user]) =>\n                        this.http.get<Paginated<Mail>>(`/users/${user.id}/mails`, {\n                            params: new HttpParams()\n                                .set('limit', 8 + '')\n                                .set('offset', 0 + '')\n                                .set('filter.read', 'false'),\n                        })\n                    )\n                )\n                .subscribe(({ data, meta }) => {\n                    this.mails = data\n                    this.count = meta.count\n                })\n        )\n        this.subscriptions.add(this.mailNotifications.onRead.subscribe(() => this.fetchEvent.next()))\n        this.fetchEvent.next()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n}\n","export default \"<div ngbDropdown placement=\\\"bottom-right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-transparent mr-1\\\" ngbDropdownToggle>\\n        <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faEnvelope\\\"></fa-icon>\\n        <span class=\\\"badge badge-primary badge-pill\\\" *ngIf=\\\"count > 0\\\">\\n            {{ count | number: '1.0-0' }}\\n        </span>\\n    </button>\\n    <div class=\\\"dropdown-menu-w-lg dropdown-menu-right\\\" ngbDropdownMenu>\\n        <div class=\\\"dropdown-header text-center\\\">\\n            {{ 'common.you-have' | translate }} <strong class=\\\"text-primary\\\">{{ count }}</strong>\\n            {{ (count !== 1 ? 'common.unread-mails' : 'common.unread-mail') | translate }}\\n        </div>\\n        <div class=\\\"dropdown-divider mb-0\\\"></div>\\n        <div class=\\\"scrollable\\\">\\n            <a [routerLink]=\\\"['/mailbox', mail.id]\\\" class=\\\"dropdown-item media d-flex align-items-center e2e-header-mail\\\" *ngFor=\\\"let mail of mails\\\">\\n                <div class=\\\"mr-3\\\">\\n                    <user-avatar size=\\\"sm\\\" [user]=\\\"null\\\"></user-avatar>\\n                </div>\\n                <div class=\\\"media-body\\\">\\n                    <small class=\\\"text-muted\\\">\\n                        {{ displayName + ' Team' }}\\n                    </small>\\n                    <small class=\\\"text-muted float-right mt-q\\\" *ngIf=\\\"mail.sentAt\\\"\\n                        >{{ mail.sentAt | formatDistanceToNow }} {{ 'common.ago' | translate }}</small\\n                    >\\n                    <div class=\\\"text-truncate font-weight-bold\\\">{{ mail.subject }}</div>\\n                    <div class=\\\"small text-muted\\\" *ngIf=\\\"mail.content\\\">{{ striptags(mail.content) | truncate: true:60 }}</div>\\n                </div>\\n            </a>\\n        </div>\\n        <div class=\\\"dropdown-item text-center bg-white py-3\\\" *ngIf=\\\"mails.length === 0\\\">\\n            <span class=\\\"text-muted\\\">{{ 'header-mailbox.no-unread-mails' | translate }}</span>\\n        </div>\\n        <div class=\\\"dropdown-divider mt-0\\\"></div>\\n        <a class=\\\"dropdown-item text-center\\\" ngbDropdownItem [routerLink]=\\\"['/mailbox']\\\">{{ 'common.view-all' | translate }}</a>\\n    </div>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { ICurrency, Paginated } from '../../common/api-interfaces'\nimport { CurrenciesStore } from './currencies.store'\n\n@Injectable({ providedIn: 'root' })\nexport class CurrenciesService {\n    constructor(protected store: CurrenciesStore, private http: HttpClient) {}\n\n    public fetchAsObservable(): Observable<Paginated<ICurrency>> {\n        return this.http.get<Paginated<ICurrency>>('/currencies', { params: { limit: 100 + '' } }).pipe(\n            tap(response => {\n                this.store.set(response.data)\n            })\n        )\n    }\n\n    public fetch(): void {\n        this.fetchAsObservable().subscribe(() => undefined)\n    }\n}\n","export default \"<div class=\\\"status-message\\\">\\n    <span [innerHTML]=\\\"statusMessage.message || ''\\\"></span>\\n    <a href=\\\"https://status.aerapass.com\\\" class=\\\"btn btn-outline-white btn-sm mx-3\\\" rel=\\\"noopener\\\" target=\\\"_blank\\\">Website Status</a>\\n</div>\\n\";","export default \"<div class=\\\"sidebar\\\">\\n    <nav class=\\\"navbar navbar-light navbar-dashboard\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\"></a>\\n        <ul class=\\\"nav navbar-nav ml-auto d-lg-none\\\">\\n            <li class=\\\"nav-item d-flex align-items-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" (click)=\\\"closeMobileNav()\\\">\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faTimes\\\"></fa-icon>\\n                </button>\\n            </li>\\n        </ul>\\n    </nav>\\n    <nav class=\\\"sidebar-nav\\\">\\n        <ul class=\\\"nav\\\">\\n            <ng-container *ngIf=\\\"!isActive('/admin')\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/dashboard') || isActive('/mailbox') }\\\"\\n                        [routerLink]=\\\"['/dashboard']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.dashboard' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faDesktop\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.dashboard' | translate }}</span>\\n                    </a>\\n                </li>\\n                <ng-container *ngIf=\\\"appName !== 'sgpmx'; else sgpmxTemplate\\\">\\n                    <li class=\\\"nav-heading\\\">{{ 'menu.manage' | translate }}</li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/transactions') }\\\"\\n                            [routerLink]=\\\"['/transactions']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.transactions' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBook\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.transactions' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('cards')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/cards') }\\\"\\n                            [routerLink]=\\\"['/cards']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'menu.cards' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCreditCardFront\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'menu.cards' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('spot-trades')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/spot-trading') }\\\"\\n                            [routerLink]=\\\"['/spot-trading']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.spot-trading' | translate | titlecase\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faChartLine\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'common.spot-trading' | translate | titlecase }}</span>\\n                        </a>\\n                    </li>\\n                    <li\\n                        class=\\\"nav-item\\\"\\n                        [ngClass]=\\\"{ active: isActive('/discover'), open: isOpen('discover') }\\\"\\n                        *ngIf=\\\"session.user.hasPermission('marketplaces')\\\"\\n                    >\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('discover'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.discover' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCompass\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.discover' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('discover')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/discover', true) || isActive('/discover/:productSlug') }\\\"\\n                                    [routerLink]=\\\"['/discover']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.overview' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.overview' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/discover/investments') }\\\"\\n                                    [routerLink]=\\\"['/discover/investments']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'menu.investments' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.investments' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li\\n                        class=\\\"nav-item\\\"\\n                        [ngClass]=\\\"{ active: isActive('/services'), open: isOpen('services') }\\\"\\n                        *ngIf=\\\"session.user.hasPermission('invoices') || session.user.hasPermission('conversions')\\\"\\n                    >\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('services'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.services' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faToolbox\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.services' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('services')\\\">\\n                            <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('conversions')\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/services/conversions') }\\\"\\n                                    [routerLink]=\\\"['/services/conversions']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.conversions' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.conversions' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('invoices')\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/services/invoices') }\\\"\\n                                    [routerLink]=\\\"['/services/invoices']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.invoices' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.invoices' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ng-container>\\n                <ng-template #sgpmxTemplate>\\n                    <li class=\\\"nav-heading\\\">{{ 'common.bullion' | translate }}</li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('trades')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/buy-and-sell', true) }\\\"\\n                            [routerLink]=\\\"['/buy-and-sell']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.buy-and-sell' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBalanceScale\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'common.buy' | translate }} &amp; {{ 'common.sell' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/transfer', true) }\\\"\\n                            [routerLink]=\\\"['/transfer']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.transfer' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faExchange\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'common.transfer' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user?.hasPermission('redeem')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/redeem', true) }\\\"\\n                            [routerLink]=\\\"['/redeem']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.redeem' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBox\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.redeem' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-heading\\\">{{ 'common.cash' | translate }}</li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/deposit') }\\\"\\n                            [routerLink]=\\\"['/deposit']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.deposit' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.deposit' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/withdraw') }\\\"\\n                            [routerLink]=\\\"['/withdraw']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.withdraw' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.withdraw' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.hasPermission('cards')\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/cards') }\\\"\\n                            [routerLink]=\\\"['/cards']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.cards' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCreditCardFront\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                            ><span>{{ 'menu.cards' | translate }}</span>\\n                        </a>\\n                    </li>\\n                </ng-template>\\n                <li class=\\\"nav-heading\\\">{{ 'menu.personal' | translate }}</li>\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/account/profile') }\\\"\\n                        [routerLink]=\\\"['/account/profile']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.profile' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faUser\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.profile' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\" *ngIf=\\\"session.user.type === 'business'\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/organization') }\\\"\\n                        [routerLink]=\\\"['/organization']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'menu.organization' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faSitemap\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.organization' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/account/security') }\\\"\\n                        [routerLink]=\\\"['/account/security']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.security' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faShieldAlt\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.security' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/account/billing') }\\\"\\n                        [routerLink]=\\\"['/account/billing']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.billing' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faReceipt\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.billing' | translate }}</span>\\n                    </a>\\n                </li>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"isActive('admin')\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/admin/dashboard') }\\\"\\n                        [routerLink]=\\\"['/admin/dashboard']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.dashboard' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faDesktop\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.dashboard' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-item\\\" *ngIf=\\\"['admin'].includes(session.user?.role)\\\">\\n                    <a\\n                        class=\\\"nav-link\\\"\\n                        [ngClass]=\\\"{ active: isActive('/admin/alerts') }\\\"\\n                        [routerLink]=\\\"['/admin/alerts']\\\"\\n                        placement=\\\"right\\\"\\n                        [ngbTooltip]=\\\"'common.alerts' | translate\\\"\\n                    >\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBell\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'common.alerts' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li class=\\\"nav-heading\\\">{{ 'common.operations' | translate }}</li>\\n                <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('/admin/accounts'), open: isOpen('accounts') }\\\">\\n                    <a href class=\\\"nav-link\\\" (click)=\\\"toggleMenu('accounts'); $event.preventDefault()\\\" placement=\\\"right\\\" ngbTooltip=\\\"Accounts\\\">\\n                        <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faUser\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                        <span>{{ 'common.accounts' | translate }}</span>\\n                        <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                    </a>\\n                    <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('accounts')\\\">\\n                        <li class=\\\"nav-item\\\">\\n                            <a\\n                                class=\\\"nav-link\\\"\\n                                [ngClass]=\\\"{ active: isActive('/admin/accounts/users') }\\\"\\n                                [routerLink]=\\\"['/admin/accounts/users']\\\"\\n                                placement=\\\"right\\\"\\n                                [ngbTooltip]=\\\"'common.users' | translate\\\"\\n                            >\\n                                <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                ><span>{{ 'common.users' | translate }}</span>\\n                            </a>\\n                        </li>\\n                        <li class=\\\"nav-item\\\" *ngIf=\\\"['admin', 'licensee'].includes(session.user?.role)\\\">\\n                            <a\\n                                class=\\\"nav-link\\\"\\n                                [ngClass]=\\\"{ active: isActive('/admin/accounts/funds-under-management') }\\\"\\n                                [routerLink]=\\\"['/admin/accounts/funds-under-management']\\\"\\n                                placement=\\\"right\\\"\\n                                ngbTooltip=\\\"FUM\\\"\\n                            >\\n                                <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>FUM</span>\\n                            </a>\\n                        </li>\\n                    </ul>\\n                </li>\\n                <ng-container *ngIf=\\\"['admin', 'licensee'].includes(session.user?.role)\\\">\\n                    <li class=\\\"nav-item\\\">\\n                        <a\\n                            class=\\\"nav-link\\\"\\n                            [ngClass]=\\\"{ active: isActive('/admin/transactions') }\\\"\\n                            [routerLink]=\\\"['/admin/transactions']\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.transactions' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faBook\\\" [fixedWidth]=\\\"true\\\"></fa-icon><span>{{ 'menu.transactions' | translate }}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('/admin/cards'), open: isOpen('cards') }\\\">\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('cards'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'menu.cards' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCreditCardFront\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.cards' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('cards')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/cards/programs') }\\\"\\n                                    [routerLink]=\\\"['/admin/cards/programs']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.programs' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.programs' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/cards/orders') }\\\"\\n                                    [routerLink]=\\\"['/admin/cards/orders']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.orders' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.orders' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/cards/cards') }\\\"\\n                                    [routerLink]=\\\"['/admin/cards/cards']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'menu.cards' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.cards' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('/admin/investments'), open: isOpen('investments') }\\\">\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('investments'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'menu.investments' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faChartNetwork\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.investments' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('investments')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/investments/products') }\\\"\\n                                    [routerLink]=\\\"['/admin/investments/products']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'products.products' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'products.products' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/investments/allocations') }\\\"\\n                                    [routerLink]=\\\"['/admin/investments/allocations']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.allocations' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.allocations' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('/admin/services'), open: isOpen('services') }\\\">\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('services'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.services' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faToolbox\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'menu.services' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('services')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/conversions') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/conversions']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.conversions' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.conversions' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/invoices') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/invoices']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.invoices' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'menu.invoices' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/trades') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/trades']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.trades' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.trades' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/spot-trading') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/spot-trading']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.spot-trading' | translate | titlecase\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.spot-trading' | translate | titlecase }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/services/redemptions') }\\\"\\n                                    [routerLink]=\\\"['/admin/services/redemptions']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.redemptions' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.redemptions' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li class=\\\"nav-heading\\\">{{ 'common.environment' | translate }}</li>\\n                    <li class=\\\"nav-item\\\" [ngClass]=\\\"{ active: isActive('admin.platform'), open: isOpen('platform') }\\\">\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('platform'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.platform' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faUniversity\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'common.platform' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('platform')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/currencies') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/currencies']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.currencies' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.currencies' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\" *ngIf=\\\"['admin', 'licensee'].includes(session.user?.role)\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/deposit-instructions') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/deposit-instructions']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.deposit-instructions' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.deposit-instructions' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/fee-schedule') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/fee-schedule']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.fee-schedule' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.fee-schedule' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\" *ngIf=\\\"['admin'].includes(session.user?.role)\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/triggers') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/triggers']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.triggers' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.triggers' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/platform/referrers') }\\\"\\n                                    [routerLink]=\\\"['/admin/platform/referrers']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.referrers' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.referrers' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li\\n                        class=\\\"nav-item\\\"\\n                        [ngClass]=\\\"{ active: isActive('/admin/settings'), open: isOpen('settings') }\\\"\\n                        *ngIf=\\\"['admin'].includes(session.user?.role)\\\"\\n                    >\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('settings'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.settings' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCog\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'common.settings' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('settings')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/settings/api-tokens') }\\\"\\n                                    [routerLink]=\\\"['/admin/settings/api-tokens']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.api-tokens' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.api-tokens' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/settings/terms') }\\\"\\n                                    [routerLink]=\\\"['/admin/settings/terms']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.terms' | translate | titlecase\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.terms' | translate }}</span>\\n                                </a>\\n                            </li>\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/settings/other') }\\\"\\n                                    [routerLink]=\\\"['/admin/settings/other']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.other' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.other' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                    <li\\n                        class=\\\"nav-item\\\"\\n                        [ngClass]=\\\"{ active: isActive('/admin/monitoring'), open: isOpen('monitoring') }\\\"\\n                        *ngIf=\\\"['admin'].includes(session.user?.role)\\\"\\n                    >\\n                        <a\\n                            href\\n                            class=\\\"nav-link\\\"\\n                            (click)=\\\"toggleMenu('monitoring'); $event.preventDefault()\\\"\\n                            placement=\\\"right\\\"\\n                            [ngbTooltip]=\\\"'common.monitoring' | translate\\\"\\n                        >\\n                            <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faChartBar\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            <span>{{ 'common.monitoring' | translate }}</span>\\n                            <fa-icon class=\\\"nav-caret\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                        </a>\\n                        <ul class=\\\"nav flex-nowrap overflow-hidden\\\" [@toggleMenu]=\\\"isOpen('monitoring')\\\">\\n                            <li class=\\\"nav-item\\\">\\n                                <a\\n                                    class=\\\"nav-link\\\"\\n                                    [ngClass]=\\\"{ active: isActive('/admin/monitoring/tasks') }\\\"\\n                                    [routerLink]=\\\"['/admin/monitoring/tasks']\\\"\\n                                    placement=\\\"right\\\"\\n                                    [ngbTooltip]=\\\"'common.tasks' | translate\\\"\\n                                >\\n                                    <fa-icon class=\\\"nav-icon\\\" [icon]=\\\"faCaretRight\\\" [fixedWidth]=\\\"true\\\"></fa-icon\\n                                    ><span>{{ 'common.tasks' | translate }}</span>\\n                                </a>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ng-container>\\n            </ng-container>\\n        </ul>\\n    </nav>\\n    <menu-profile class=\\\"sidebar-profile\\\" *ngIf=\\\"session.isAuthenticated()\\\"></menu-profile>\\n</div>\\n\";","import { Directive, EventEmitter, Input, Output } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms'\nconst stringEntropy = require('fast-password-entropy/es5')\n\n@Directive({\n    selector: '[passwordStrength]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: PasswordStrengthDirective, multi: true }],\n})\nexport class PasswordStrengthDirective implements Validator {\n    /** Required entropy bits of password string */\n    @Input()\n    public passwordStrength: number\n    @Output()\n    public readonly onEntropyChange = new EventEmitter<number>()\n\n    public validate(control: AbstractControl): { weakPassword: boolean } | null {\n        const entropy = stringEntropy(control.value)\n        this.onEntropyChange.emit(entropy)\n        return entropy < this.passwordStrength ? { weakPassword: true } : null\n    }\n}\n","import { Component, Input } from '@angular/core'\nimport { IAddress, IUser } from '../api-interfaces'\nimport { countryMap } from '../countries'\n\n@Component({\n    selector: 'postal-address',\n    templateUrl: 'postal-address.component.html',\n})\nexport class PostalAddressComponent {\n    public countryMap = countryMap\n    @Input()\n    public user?: IUser\n    @Input()\n    public address: IAddress\n    @Input()\n    public theme: 'input'\n}\n","import { Injectable } from '@angular/core'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CopierService {\n    private fakeElem: HTMLTextAreaElement | null\n\n    public copyText(text: string): boolean {\n        try {\n            this.createFake(text)\n            return document.execCommand('copy')\n        } catch {\n            return false\n        } finally {\n            this.removeFake()\n        }\n    }\n\n    /**\n     * Creates a fake textarea element, sets its value from `text` property,\n     * and makes a selection on it.\n     */\n    private createFake(text: string): void {\n        // Create a fake element to hold the contents to copy\n        this.fakeElem = document.createElement('textarea')\n        // Prevent zooming on iOS\n        this.fakeElem.style.fontSize = '12pt'\n        // Reset box model\n        this.fakeElem.style.border = '0'\n        this.fakeElem.style.padding = '0'\n        this.fakeElem.style.margin = '0'\n        // Move element out of screen horizontally\n        this.fakeElem.style.position = 'absolute'\n        this.fakeElem.style.left = '-9999px'\n        // Move element to the same position vertically\n        const yPosition = window.pageYOffset || (document.documentElement && document.documentElement.scrollTop) || 0\n        this.fakeElem.style.top = yPosition + 'px'\n        this.fakeElem.setAttribute('readonly', '')\n        this.fakeElem.value = text\n        document.body.appendChild(this.fakeElem)\n        this.fakeElem.select()\n        this.fakeElem.setSelectionRange(0, this.fakeElem.value.length)\n    }\n\n    private removeFake(): void {\n        if (this.fakeElem) {\n            document.body.removeChild(this.fakeElem)\n            this.fakeElem = null\n        }\n    }\n}\n","import { Component, Input } from '@angular/core'\n\n@Component({\n    selector: 'circle-spinner',\n    templateUrl: 'circle-spinner.component.html',\n    styleUrls: ['circle-spinner.component.scss'],\n})\nexport class CircleSpinnerComponent {\n    @Input() public theme: string\n}\n","import { isPlatformBrowser } from '@angular/common'\nimport { Component, HostListener, Inject, OnDestroy, OnInit, PLATFORM_ID } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { forkJoin, interval, merge, Subscription } from 'rxjs'\nimport { filter, startWith, switchMap } from 'rxjs/operators'\nimport { LogoutTimerService } from './app/core/logout-timer/logout-timer.service'\nimport { MenuService } from './app/core/menu/menu.service'\nimport { GoogleAnalyticsService } from './common/services/google-analytics.service'\nimport { IntercomService } from './common/services/intercom.service'\nimport { SessionService, UserEventType } from './common/services/session.service'\nimport { ViewportService } from './common/services/viewport.service'\nimport { CurrenciesService } from './store/currencies/currencies.service'\nimport { WalletsService } from './store/wallets/wallets.service'\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n})\nexport class AppComponent implements OnInit, OnDestroy {\n    private polling: Subscription\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        public menuService: MenuService,\n        public translate: TranslateService,\n        private intercom: IntercomService,\n        private analytics: GoogleAnalyticsService,\n        private logoutTimer: LogoutTimerService,\n        private viewport: ViewportService,\n        private router: Router,\n        private ngbModal: NgbModal,\n        private currenciesService: CurrenciesService,\n        private walletsService: WalletsService,\n        @Inject(PLATFORM_ID) private platformId: Record<string, any>\n    ) {\n        translate.addLangs(['en', 'kr'])\n        translate.setDefaultLang('en')\n\n        const browserLang = translate.getBrowserLang()\n        translate.use(browserLang.match(/en|kr/) ? browserLang : 'en')\n\n        const lastLanguageUsed = localStorage.getItem('lang')\n        if (lastLanguageUsed) {\n            translate.use(lastLanguageUsed)\n        }\n    }\n\n    public ngOnInit(): void {\n        if (isPlatformBrowser(this.platformId)) {\n            this.logoutTimer.init()\n            this.intercom.boot()\n            this.analytics.init()\n            this.viewport.update()\n        }\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n            if (this.ngbModal.hasOpenModals()) {\n                this.ngbModal.dismissAll()\n            }\n        })\n        this.subscriptions.add(\n            this.session.userEvent.subscribe(event => {\n                if (event.type === UserEventType.LOGIN) {\n                    this.polling = merge(\n                        interval(1000 * 10).pipe(\n                            startWith(0),\n                            switchMap(() => forkJoin([this.walletsService.fetchAsObservable()]))\n                        ),\n                        interval(1000 * 60 * 2).pipe(\n                            startWith(0),\n                            switchMap(() => forkJoin([this.currenciesService.fetchAsObservable()]))\n                        )\n                    ).subscribe(() => undefined)\n                } else if (event.type === UserEventType.LOGOUT) {\n                    if (this.polling && !this.polling.closed) {\n                        this.polling.unsubscribe()\n                    }\n                    if (!this.router.isActive('/login', false) && !this.router.getCurrentNavigation()) {\n                        this.router.navigate(['/login'])\n                    }\n                }\n            })\n        )\n        // TODO: remove when session service has been refactored\n        if (this.session.hasValidRefreshToken()) {\n            this.session.update().subscribe(() => undefined)\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    @HostListener('window:resize')\n    public onResize(): void {\n        this.viewport.update()\n    }\n\n    public showHeader(): boolean {\n        return (\n            this.session.isAuthenticated() &&\n            !['/login', '/register', '/verify'].some(state => this.router.isActive(state, false))\n        )\n    }\n\n    public showSidebar(): boolean {\n        return (\n            this.session.isAuthenticated() &&\n            !['/login', '/register', '/verify'].some(state => this.router.isActive(state, false))\n        )\n    }\n\n    public showFooter(): boolean {\n        return (\n            this.session.isAuthenticated() &&\n            !['/login', '/register', '/admin', '/verify'].some(state => this.router.isActive(state, false))\n        )\n    }\n}\n","export default \"<ng-container *ngIf=\\\"user === undefined; else userTemplate\\\">\\n    <ng-container *ngTemplateOutlet=\\\"mint\\\"></ng-container>\\n</ng-container>\\n<ng-template #userTemplate>\\n    <ng-container *ngIf=\\\"user; else platform\\\">\\n        <div class=\\\"avatar\\\" [ngClass]=\\\"styles\\\">\\n            <img [src]=\\\"avatarUrl | safeResourceUrl\\\" class=\\\"img-avatar\\\" />\\n            <span class=\\\"avatar-status badge-success\\\" *ngIf=\\\"online\\\"></span>\\n        </div>\\n    </ng-container>\\n</ng-template>\\n<ng-template #mint>\\n    <!-- htmllint attr-bans=\\\"[]\\\" -->\\n    <div class=\\\"avatar\\\" [ngClass]=\\\"styles\\\">\\n        <svg\\n            class=\\\"img-avatar\\\"\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n            xml:space=\\\"preserve\\\"\\n            text-rendering=\\\"optimizeLegibility\\\"\\n            style=\\\"\\n                -webkit-font-smoothing: auto;\\n                shape-rendering: geometricPrecision;\\n                image-rendering: optimizeQuality;\\n                fill-rule: evenodd;\\n                clip-rule: evenodd;\\n            \\\"\\n            viewBox=\\\"0 0 120 120\\\"\\n        >\\n            <g>\\n                <rect [attr.fill]=\\\"successColor\\\" width=\\\"120\\\" height=\\\"120\\\"></rect>\\n                <text font-weight=\\\"300\\\" font-size=\\\"3.125em\\\" font-family=\\\"sans-serif\\\" fill=\\\"#ffffff\\\" x=\\\"50%\\\" y=\\\"50%\\\" text-anchor=\\\"middle\\\" dy=\\\"0.35em\\\">\\n                    MI\\n                </text>\\n            </g>\\n        </svg>\\n    </div>\\n    <!-- htmllint attr-bans=\\\"$previous\\\" -->\\n</ng-template>\\n<ng-template #platform>\\n    <!-- htmllint attr-bans=\\\"[]\\\" -->\\n    <div class=\\\"avatar\\\" [ngClass]=\\\"styles\\\">\\n        <svg\\n            class=\\\"img-avatar\\\"\\n            xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n            xml:space=\\\"preserve\\\"\\n            text-rendering=\\\"optimizeLegibility\\\"\\n            style=\\\"\\n                -webkit-font-smoothing: auto;\\n                shape-rendering: geometricPrecision;\\n                image-rendering: optimizeQuality;\\n                fill-rule: evenodd;\\n                clip-rule: evenodd;\\n            \\\"\\n            viewBox=\\\"0 0 120 120\\\"\\n        >\\n            <g>\\n                <rect [attr.fill]=\\\"primaryColor\\\" width=\\\"120\\\" height=\\\"120\\\"></rect>\\n                <text font-weight=\\\"300\\\" font-size=\\\"3.125em\\\" font-family=\\\"sans-serif\\\" fill=\\\"#ffffff\\\" x=\\\"50%\\\" y=\\\"50%\\\" text-anchor=\\\"middle\\\" dy=\\\"0.35em\\\">\\n                    {{ appInitials }}\\n                </text>\\n            </g>\\n        </svg>\\n    </div>\\n    <!-- htmllint attr-bans=\\\"$previous\\\" -->\\n</ng-template>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { faArrowRight, faPaperPlane, faPhoneLaptop, faReceipt, faUniversity } from '@fortawesome/pro-light-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subject, Subscription } from 'rxjs'\nimport { switchMap } from 'rxjs/operators'\nimport { IBeneficiary, Transaction } from '../api-interfaces'\n\n@Component({\n    selector: 'deposit-instruction',\n    templateUrl: 'deposit-instruction.component.html',\n})\nexport class DepositInstructionComponent implements OnInit, OnDestroy {\n    @Input()\n    public transaction: Transaction\n\n    public isLoading = false\n    public faPhoneLaptop = faPhoneLaptop\n    public faPaperPlane = faPaperPlane\n    public faReceipt = faReceipt\n    public faUniversity = faUniversity\n    public faArrowRight = faArrowRight\n\n    private fetchBeneficiaryEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(private http: HttpClient, public translate: TranslateService) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.fetchBeneficiaryEvent\n                .pipe(\n                    switchMap(() => this.http.get<IBeneficiary>(`/beneficiaries/${this.transaction.beneficiary!.id}`))\n                )\n                .subscribe(beneficiary => {\n                    this.transaction.beneficiary = beneficiary\n                })\n        )\n        this.fetchBeneficiaryEvent.next()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n}\n","export default \"<div class=\\\"d-flex align-items-center\\\">\\n    <ng-container *ngIf=\\\"user === undefined; else userTemplate\\\">\\n        <ng-container *ngTemplateOutlet=\\\"mint\\\"></ng-container>\\n    </ng-container>\\n</div>\\n<ng-template #userTemplate>\\n    <ng-container *ngIf=\\\"user; else platform\\\">\\n        <a href (click)=\\\"handleClick($event, user.id)\\\">\\n            <ng-template #tooltipContent>\\n                <span>{{ user.name }}</span> <br />\\n                <span>{{ user.email }} </span>\\n            </ng-template>\\n            <user-avatar [user]=\\\"user\\\" size=\\\"xs\\\" elementClass=\\\"avatar-labeled\\\" [ngbTooltip]=\\\"tooltipContent\\\" [container]=\\\"'body'\\\"> </user-avatar>\\n        </a>\\n        <div>\\n            <span>\\n                {{ user.name | truncate: true:maxCharacters:'..' }}\\n                <span\\n                    class=\\\"badge text-capitalize\\\"\\n                    [ngClass]=\\\"{\\n                        'badge-primary': user.role === 'admin',\\n                        'badge-success': user.role === 'licensee',\\n                        'badge-warning': user.role === 'support'\\n                    }\\\"\\n                    *ngIf=\\\"displayBadges && user.role\\\"\\n                >\\n                    {{ user.role }}\\n                </span>\\n                <a\\n                    href\\n                    [routerLink]=\\\"['/admin/accounts/users', user!.association?.id]\\\"\\n                    [ngbTooltip]=\\\"association\\\"\\n                    [disableTooltip]=\\\"!user.isManaged\\\"\\n                    placement=\\\"right\\\"\\n                    *ngIf=\\\"user.isManaged\\\"\\n                >\\n                    <span class=\\\"text-capitalize badge badge-lg badge-success\\\">{{ 'common.managed' | translate }}</span>\\n                </a>\\n            </span>\\n            <div class=\\\"text-muted font-sm\\\" *ngIf=\\\"displayAccountNumber\\\">\\n                {{ user.accountNumber | accountNumber }}\\n            </div>\\n        </div>\\n    </ng-container>\\n</ng-template>\\n<ng-template #mint>\\n    <user-avatar [user]=\\\"user\\\" size=\\\"xs\\\" elementClass=\\\"avatar-labeled\\\"> </user-avatar>\\n    <div>\\n        <span>{{ 'common.mint' | translate }}</span>\\n        <div class=\\\"text-muted font-sm\\\" *ngIf=\\\"displayAccountNumber\\\">@{{ 'common.mint' | translate | lowercase }}</div>\\n    </div>\\n</ng-template>\\n<ng-template #platform>\\n    <user-avatar [user]=\\\"user\\\" size=\\\"xs\\\" elementClass=\\\"avatar-labeled\\\"> </user-avatar>\\n    <div>\\n        <span>{{ displayName }}</span>\\n        <div class=\\\"text-muted font-sm\\\" *ngIf=\\\"displayAccountNumber\\\">@{{ appName }}</div>\\n    </div>\\n</ng-template>\\n<ng-template #association>\\n    <div *ngIf=\\\"user.association\\\">\\n        <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n            <a [routerLink]=\\\"['/admin/accounts/users', user!.association?.id]\\\">\\n                <user-avatar [user]=\\\"user.association\\\" size=\\\"xs\\\" elementClass=\\\"avatar-labeled\\\"> </user-avatar>\\n            </a>\\n            <div>\\n                <span>\\n                    {{ user.association?.name }}\\n                </span>\\n                <div class=\\\"text-muted font-sm\\\">\\n                    {{ user.association?.accountNumber | accountNumber }}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\";","import { Injectable } from '@angular/core'\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita'\nimport { Wallet } from '../../common/api-interfaces'\n\nexport interface WalletsState extends EntityState<Wallet, string> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'wallets' })\nexport class WalletsStore extends EntityStore<WalletsState> {\n    constructor() {\n        super()\n    }\n}\n","import BigNumber from 'bignumber.js'\nimport * as Color from 'color'\nimport { ICurrency, IFee } from '../../common/api-interfaces'\n\nconst style = getComputedStyle(document.body)\nconst color = Color(style.getPropertyValue('--primary').trim())\n\nexport function getCurrencyColor(currency: ICurrency, factor = 0): string {\n    return currency.color || color.lighten((factor % 7) * 0.08).hex()\n}\n\nexport function convertCurrency(\n    amount: string | number,\n    baseCurrency: ICurrency,\n    counterCurrency: ICurrency,\n    spreadFee?: IFee,\n    spreadUp = true\n): string {\n    let exchangeRate = calculateExchangeRate(baseCurrency, counterCurrency)\n    if (baseCurrency.code !== counterCurrency.code && spreadFee && spreadFee.relative) {\n        if (spreadUp) {\n            exchangeRate = new BigNumber(exchangeRate).times(new BigNumber(1).plus(spreadFee.relative))\n        } else {\n            exchangeRate = new BigNumber(exchangeRate).times(new BigNumber(1).minus(spreadFee.relative))\n        }\n    }\n    return new BigNumber(amount).times(exchangeRate).toFixed(8, 1)\n}\n\nexport function calculateExchangeRate(baseCurrency: ICurrency, counterCurrency: ICurrency): BigNumber {\n    if (!counterCurrency || !baseCurrency) {\n        return new BigNumber(1)\n    }\n    return new BigNumber(counterCurrency.exchangeRate).div(baseCurrency.exchangeRate)\n}\n","export default \"<div class=\\\"app\\\" [ngClass]=\\\"menuService.style\\\">\\n    <app-menu class=\\\"sidebar-wrapper\\\" *ngIf=\\\"showSidebar()\\\"></app-menu>\\n    <div class=\\\"app-body\\\">\\n        <app-header class=\\\"app-header\\\" *ngIf=\\\"showHeader()\\\"></app-header>\\n        <main class=\\\"main\\\">\\n            <status-message-outlet></status-message-outlet>\\n            <toastr></toastr>\\n            <router-outlet></router-outlet>\\n        </main>\\n        <app-footer class=\\\"app-footer\\\" *ngIf=\\\"showFooter()\\\"></app-footer>\\n    </div>\\n</div>\\n\";","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core'\nimport * as Color from 'color'\nimport { environment } from 'src/environments/environment'\nimport { IUser } from '../api-interfaces'\nimport { AvatarService } from '../services/avatar.service'\n\n@Component({\n    selector: 'user-avatar',\n    templateUrl: 'user-avatar.component.html',\n})\nexport class UserAvatarComponent implements OnChanges {\n    @Input()\n    public user?: IUser | null\n    @Input()\n    public size: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | undefined\n    @Input()\n    public online = false\n    @Input()\n    public border = false\n    @Input()\n    public elementClass = ''\n\n    public appName = environment.appName\n    public appInitials = environment.appName.slice(0, 2).toUpperCase()\n\n    private _primaryColor: string\n    private _successColor: string\n\n    constructor(private avatarService: AvatarService) {}\n\n    public get primaryColor(): string {\n        if (!this._primaryColor) {\n            this._primaryColor = Color(getComputedStyle(document.body).getPropertyValue('--primary').trim()).hex()\n        }\n        return this._primaryColor\n    }\n    public get successColor(): string {\n        if (!this._successColor) {\n            this._successColor = Color(getComputedStyle(document.body).getPropertyValue('--success').trim()).hex()\n        }\n        return this._successColor\n    }\n\n    public get avatarUrl(): string {\n        return `/.api/users/${this.user?.id}/avatar?v=${this.avatarService.timestamp}`\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.user) {\n            this.user = changes.user.currentValue\n        }\n    }\n\n    public get styles(): string {\n        return (this.border ? 'avatar-border ' : '') + (this.size ? `avatar-${this.size} ` : '') + this.elementClass\n    }\n}\n","export default \"<div class=\\\"mb-3\\\" *ngIf=\\\"['pending', 'processing'].includes(transaction.status) && transaction.type === 'deposit'\\\">\\n    <h4 class=\\\"text-primary mb-2\\\">{{ 'common.make-transfer' | translate }}</h4>\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <div class=\\\"text-center p-2\\\">\\n            <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faPhoneLaptop\\\" size=\\\"3x\\\"></fa-icon>\\n            <div class=\\\"font-sm text-muted mt-3\\\">{{ 'common.open-online-banking' | translate }}</div>\\n        </div>\\n        <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faArrowRight\\\" size=\\\"md\\\"></fa-icon>\\n        <div class=\\\"text-center p-2\\\">\\n            <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faPaperPlane\\\" size=\\\"3x\\\"></fa-icon>\\n            <div class=\\\"font-sm text-muted mt-3\\\">{{ 'common.make-a-transfer' | translate }}</div>\\n        </div>\\n        <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faArrowRight\\\" size=\\\"md\\\"></fa-icon>\\n        <div class=\\\"text-center p-2\\\">\\n            <fa-icon class=\\\"text-primary\\\" [icon]=\\\"faReceipt\\\" size=\\\"3x\\\"></fa-icon>\\n            <div class=\\\"font-sm text-muted mt-3\\\">{{ 'common.save-payment-document' | translate }}</div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"mb-3\\\">\\n    <h4 class=\\\"text-primary mb-2\\\">{{ 'common.bank-details' | translate }}</h4>\\n    <deposit-instruction-table [beneficiary]=\\\"transaction.beneficiary\\\" [transaction]=\\\"transaction\\\" [showWarning]=\\\"true\\\"></deposit-instruction-table>\\n</div>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser'\n\n@Pipe({ name: 'safeResourceUrl' })\nexport class SafeResourceUrlPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    public transform(value: string): SafeResourceUrl {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value)\n    }\n}\n","import { Directive, ElementRef, Input, NgZone, OnChanges } from '@angular/core'\nimport { take } from 'rxjs/operators'\n\n@Directive({\n    selector: '[focus]',\n})\nexport class FocusDirective implements OnChanges {\n    @Input()\n    public focus: boolean\n\n    constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n    public ngOnChanges(): void {\n        if (this.focus) {\n            if (this.el.nativeElement) {\n                this.ngZone.onStable\n                    .asObservable()\n                    .pipe(take(1))\n                    .subscribe(() => {\n                        this.el.nativeElement.focus()\n                    })\n            }\n        }\n    }\n}\n","export default \"<form #detailsForm=\\\"ngForm\\\" [ngClass]=\\\"{ 'ng-submitted': submitted }\\\" class=\\\"form-validation\\\" novalidate>\\n    <ul *ngIf=\\\"type === 'business'\\\" class=\\\"nav nav-pills nav-fill mb-2\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a href class=\\\"nav-link\\\" [ngClass]=\\\"{ active: currentTab === 'business' }\\\" (click)=\\\"currentTab = 'business'; $event.preventDefault()\\\">\\n                {{ 'common.business' | translate }}\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a href class=\\\"nav-link\\\" [ngClass]=\\\"{ active: currentTab === 'manager' }\\\" (click)=\\\"currentTab = 'manager'; $event.preventDefault()\\\">\\n                {{ 'common.manager' | translate }}\\n            </a>\\n        </li>\\n    </ul>\\n    <ng-container *ngIf=\\\"type === 'personal' || (type === 'business' && currentTab === 'manager'); else businessDetails\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"firstName\\\">{{ 'common.first-name' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"firstName\\\"\\n                    name=\\\"firstName\\\"\\n                    [(ngModel)]=\\\"details.firstName\\\"\\n                    #firstName=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    required\\n                    emptyToNull\\n                    nameValidator\\n                />\\n                <div *ngIf=\\\"firstName.invalid && (submitted || firstName.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"firstName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"firstName?.errors?.nameError\\\">\\n                        {{ 'common.only-alphabets-are-allowed' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"lastName\\\">{{ 'common.last-name' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"lastName\\\"\\n                    name=\\\"lastName\\\"\\n                    [(ngModel)]=\\\"details.lastName\\\"\\n                    #lastName=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    required\\n                    emptyToNull\\n                    nameValidator\\n                />\\n                <div *ngIf=\\\"lastName.invalid && (submitted || lastName.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"lastName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"lastName?.errors?.nameError\\\">{{ 'common.only-alphabets-are-allowed' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-14\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"middleName\\\"\\n                    >{{ 'common.middle-name' | translate }} <span class=\\\"text-muted\\\">({{ 'common.optional' | translate }})</span></label\\n                >\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"middleName\\\"\\n                    name=\\\"middleName\\\"\\n                    [(ngModel)]=\\\"details.middleName\\\"\\n                    #middleName=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    emptyToNull\\n                    nameValidator\\n                />\\n                <div *ngIf=\\\"middleName.invalid && (submitted || middleName.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"middleName?.errors?.nameError\\\">\\n                        {{ 'common.only-alphabets-are-allowed' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-10\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"gender\\\">{{ 'common.gender' | translate }}</label>\\n                <ng-select\\n                    id=\\\"gender\\\"\\n                    name=\\\"gender\\\"\\n                    [(ngModel)]=\\\"details.gender\\\"\\n                    [items]=\\\"genders\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [searchable]=\\\"false\\\"\\n                    #gender=\\\"ngModel\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\"\\n                        ><span class=\\\"text-capitalize\\\">{{ item }}</span></ng-template\\n                    >\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\"\\n                        ><span class=\\\"text-capitalize\\\">{{ item }}</span></ng-template\\n                    >\\n                </ng-select>\\n                <div *ngIf=\\\"gender.invalid && (submitted || gender.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"gender?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-8\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"phoneCountryCode\\\">{{ 'common.country-code' | translate }}</label>\\n                <ng-select\\n                    id=\\\"phoneCountryCode\\\"\\n                    name=\\\"phoneCountryCode\\\"\\n                    [(ngModel)]=\\\"phoneCountryCode\\\"\\n                    bindLabel=\\\"alpha2\\\"\\n                    [items]=\\\"countries\\\"\\n                    [searchFn]=\\\"searchCountryCode\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #phoneCountryCodeField=\\\"ngModel\\\"\\n                    autocomplete=\\\"false\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item.alpha2 }} {{ item.countryCallingCodes[0] }}</ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item.alpha2 }} {{ item.countryCallingCodes[0] }}</ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"phoneCountryCodeField.invalid && (submitted || phoneCountryCodeField.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"phoneCountryCodeField?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-16\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"phoneNumber\\\">{{ 'common.phone-number' | translate }}</label>\\n                <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                            <fa-icon [icon]=\\\"faPhone\\\"></fa-icon>\\n                        </span>\\n                    </span>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"phoneNumber\\\"\\n                        name=\\\"phoneNumber\\\"\\n                        [(ngModel)]=\\\"details.phoneNumber\\\"\\n                        #phoneNumber=\\\"ngModel\\\"\\n                        [required]=\\\"requireAll\\\"\\n                        [disabled]=\\\"disabled\\\"\\n                        emptyToNull\\n                    />\\n                </div>\\n                <div *ngIf=\\\"phoneNumber.invalid && (submitted || phoneNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"phoneNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"birthday\\\">{{ 'common.birthday' | translate }}</label>\\n                <input\\n                    class=\\\"form-control\\\"\\n                    type=\\\"text\\\"\\n                    id=\\\"birthday\\\"\\n                    name=\\\"birthday\\\"\\n                    [(ngModel)]=\\\"birthday\\\"\\n                    mask=\\\"00/00/0000\\\"\\n                    #birthdayField=\\\"ngModel\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    birthdayValidator\\n                />\\n                <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                <div *ngIf=\\\"birthdayField.invalid && (submitted || birthdayField.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.invalidDate\\\">{{ 'common.invalid-date' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.dateLongAgo\\\">{{ 'common.date-should-be-1900' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"birthdayField?.errors?.dateInFuture\\\">{{ 'common.you-should-18' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"nationality\\\">{{ 'common.nationality' | translate }}</label>\\n                <ng-select\\n                    id=\\\"nationality\\\"\\n                    name=\\\"nationality\\\"\\n                    [(ngModel)]=\\\"details.nationality\\\"\\n                    bindLabel=\\\"name\\\"\\n                    bindValue=\\\"alpha2\\\"\\n                    [items]=\\\"countriesSortedByName\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #nationality=\\\"ngModel\\\"\\n                    autocomplete=\\\"false\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                ></ng-select>\\n                <div *ngIf=\\\"nationality.invalid && (submitted || nationality.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"nationality?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <address-form [(address)]=\\\"details.address\\\" [disabled]=\\\"disabled\\\" [requireAll]=\\\"requireAll\\\"></address-form>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"occupation\\\">{{ 'user-details-form.occupation' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"occupation\\\"\\n                name=\\\"occupation\\\"\\n                [(ngModel)]=\\\"details.occupation\\\"\\n                #occupation=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"occupation.invalid && (submitted || occupation.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"occupation?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"sourceOfIncome\\\">{{ 'user-details-form.source-of-income' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"sourceOfIncome\\\"\\n                name=\\\"sourceOfIncome\\\"\\n                [(ngModel)]=\\\"details.sourceOfIncome\\\"\\n                #sourceOfIncome=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"sourceOfIncome.invalid && (submitted || sourceOfIncome.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"sourceOfIncome?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"taxIdentificationNumber\\\">{{ 'user-details-form.tax-identification-number' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"taxIdentificationNumber\\\"\\n                name=\\\"taxIdentificationNumber\\\"\\n                [(ngModel)]=\\\"details.taxIdentificationNumber\\\"\\n                #taxIdentificationNumber=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"taxIdentificationNumber.invalid && (submitted || taxIdentificationNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"taxIdentificationNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-8\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"documentType\\\">{{ 'user-details-form.document-type' | translate }}</label>\\n                <ng-select\\n                    id=\\\"documentType\\\"\\n                    name=\\\"documentType\\\"\\n                    [(ngModel)]=\\\"details.documentType\\\"\\n                    bindLabel=\\\"name\\\"\\n                    bindValue=\\\"alpha2\\\"\\n                    [items]=\\\"documentTypes\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #documentType=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item | uppercase }}</ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item | uppercase }}</ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"documentType.invalid && (submitted || documentType.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"documentType?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-16\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"documentNumber\\\">{{ 'user-details-form.document-number' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"documentNumber\\\"\\n                    name=\\\"documentNumber\\\"\\n                    [(ngModel)]=\\\"details.documentNumber\\\"\\n                    #documentNumber=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"documentNumber.invalid && (submitted || documentNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"documentNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"documentIssuingDate\\\">{{ 'common.document-issuance-date' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"documentIssuingDate\\\"\\n                    name=\\\"documentIssuingDate\\\"\\n                    mask=\\\"00/00/0000\\\"\\n                    [(ngModel)]=\\\"documentIssuingDate\\\"\\n                    #documentIssuingDateForm=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    useValidator=\\\"date\\\"\\n                />\\n                <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                <div *ngIf=\\\"documentIssuingDateForm.invalid && (submitted || documentIssuingDateForm.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"documentIssuingDateForm?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"documentExpiryDate\\\">{{ 'user-details-form.document-expiry-date' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"documentExpiryDate\\\"\\n                    name=\\\"documentExpiryDate\\\"\\n                    mask=\\\"00/00/0000\\\"\\n                    [(ngModel)]=\\\"documentExpiryDate\\\"\\n                    #documentExpiryDateForm=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    useValidator=\\\"date\\\"\\n                />\\n                <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                <div *ngIf=\\\"documentExpiryDateForm.invalid && (submitted || documentExpiryDateForm.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"documentExpiryDateForm?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"proofOfAddressDate\\\">{{ 'user-details-form.proof-of-address-date' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"proofOfAddressDate\\\"\\n                name=\\\"proofOfAddressDate\\\"\\n                mask=\\\"00/00/0000\\\"\\n                [(ngModel)]=\\\"proofOfAddressDate\\\"\\n                #proofOfAddressDateForm=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                useValidator=\\\"date\\\"\\n            />\\n            <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n            <div *ngIf=\\\"proofOfAddressDateForm.invalid && (submitted || proofOfAddressDateForm.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"proofOfAddressDateForm?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <ng-container *ngIf=\\\"type === 'personal'\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"expectedTurnover\\\">{{ 'user-details-form.expected-turnover' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"expectedTurnover\\\"\\n                    name=\\\"expectedTurnover\\\"\\n                    [(ngModel)]=\\\"details.expectedTurnover\\\"\\n                    #expectedTurnover=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"expectedTurnover.invalid && (submitted || expectedTurnover.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"expectedTurnover?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"fatcaYes\\\"\\n                    >{{ 'common.are-you-us-or-fatca-purposes' | translate }}\\n                    <fa-icon\\n                        class=\\\"text-primary\\\"\\n                        [icon]=\\\"faInfoCircle\\\"\\n                        [ngbPopover]=\\\"fatcaContent\\\"\\n                        [popoverTitle]=\\\"fatcaTitle\\\"\\n                        triggers=\\\"mouseenter:mouseleave\\\"\\n                    ></fa-icon\\n                ></label>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                            <input\\n                                type=\\\"radio\\\"\\n                                [value]=\\\"true\\\"\\n                                [(ngModel)]=\\\"details.fatca\\\"\\n                                id=\\\"fatcaYes\\\"\\n                                name=\\\"fatca\\\"\\n                                class=\\\"custom-control-input\\\"\\n                                [disabled]=\\\"disabled\\\"\\n                                #fatca=\\\"ngModel\\\"\\n                                [required]=\\\"requireAll\\\"\\n                            />\\n                            <label class=\\\"custom-control-label\\\" for=\\\"fatcaYes\\\">{{ 'common.yes' | translate }}</label>\\n                        </div>\\n                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                            <input\\n                                type=\\\"radio\\\"\\n                                [value]=\\\"false\\\"\\n                                [(ngModel)]=\\\"details.fatca\\\"\\n                                id=\\\"fatcaNo\\\"\\n                                name=\\\"fatca\\\"\\n                                class=\\\"custom-control-input\\\"\\n                                [disabled]=\\\"disabled\\\"\\n                                [required]=\\\"requireAll\\\"\\n                            />\\n                            <label class=\\\"custom-control-label\\\" for=\\\"fatcaNo\\\">{{ 'common.no' | translate }}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"fatca.invalid && (submitted || fatca.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"fatca?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </ng-container>\\n    </ng-container>\\n    <ng-template #businessDetails>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"businessName\\\">{{ 'common.entity-name' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"businessName\\\"\\n                name=\\\"businessName\\\"\\n                [(ngModel)]=\\\"business.name\\\"\\n                #businessName=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                required\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"businessName.invalid && (submitted || businessName.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"businessType\\\">{{ 'common.type' | translate }}</label>\\n                <ng-select\\n                    id=\\\"businessType\\\"\\n                    name=\\\"businessType\\\"\\n                    [(ngModel)]=\\\"business.type\\\"\\n                    [items]=\\\"businessTypes\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [searchable]=\\\"false\\\"\\n                    #businessType=\\\"ngModel\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                ></ng-select>\\n                <div *ngIf=\\\"businessType.invalid && (submitted || businessType.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessType?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"registrationNumber\\\">{{ 'user-details-form.registration-number' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"registrationNumber\\\"\\n                    name=\\\"registrationNumber\\\"\\n                    [(ngModel)]=\\\"business.registrationNumber\\\"\\n                    #registrationNumber=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"registrationNumber.invalid && (submitted || registrationNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"registrationNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-8\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"businessPhoneCountryCode\\\">{{ 'common.country-code' | translate }}</label>\\n                <ng-select\\n                    id=\\\"businessPhoneCountryCode\\\"\\n                    name=\\\"businessPhoneCountryCode\\\"\\n                    [(ngModel)]=\\\"businessPhoneCountryCode\\\"\\n                    bindLabel=\\\"alpha2\\\"\\n                    [items]=\\\"countries\\\"\\n                    [searchFn]=\\\"searchCountryCode\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #businessPhoneCountryCodeField=\\\"ngModel\\\"\\n                    autocomplete=\\\"false\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item.alpha2 }} {{ item.countryCallingCodes[0] }}</ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item.alpha2 }} {{ item.countryCallingCodes[0] }}</ng-template>\\n                </ng-select>\\n                <div *ngIf=\\\"businessPhoneCountryCodeField.invalid && (submitted || businessPhoneCountryCodeField.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessPhoneCountryCodeField?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-16\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"businessPhoneNumber\\\">{{ 'common.phone-number' | translate }}</label>\\n                <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                            <fa-icon [icon]=\\\"faPhone\\\"></fa-icon>\\n                        </span>\\n                    </span>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        id=\\\"businessPhoneNumber\\\"\\n                        name=\\\"businessPhoneNumber\\\"\\n                        [(ngModel)]=\\\"business.phoneNumber\\\"\\n                        #businessPhoneNumber=\\\"ngModel\\\"\\n                        [required]=\\\"requireAll\\\"\\n                        [disabled]=\\\"disabled\\\"\\n                        emptyToNull\\n                    />\\n                </div>\\n                <div *ngIf=\\\"businessPhoneNumber.invalid && (submitted || businessPhoneNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessPhoneNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"countryOfIncorporation\\\">{{ 'user-details-form.country-of-incorporation' | translate }}</label>\\n                <ng-select\\n                    id=\\\"countryOfIncorporation\\\"\\n                    name=\\\"countryOfIncorporation\\\"\\n                    [(ngModel)]=\\\"business.countryOfIncorporation\\\"\\n                    bindLabel=\\\"name\\\"\\n                    bindValue=\\\"alpha2\\\"\\n                    [items]=\\\"countriesSortedByName\\\"\\n                    [clearable]=\\\"false\\\"\\n                    #countryOfIncorporation=\\\"ngModel\\\"\\n                    autocomplete=\\\"false\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                ></ng-select>\\n                <div *ngIf=\\\"countryOfIncorporation.invalid && (submitted || countryOfIncorporation.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"countryOfIncorporation?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"dateOfIncorporation\\\">{{ 'user-details-form.date-of-incorporation' | translate }}</label>\\n                <input\\n                    class=\\\"form-control\\\"\\n                    type=\\\"text\\\"\\n                    id=\\\"dateOfIncorporation\\\"\\n                    name=\\\"dateOfIncorporation\\\"\\n                    [(ngModel)]=\\\"dateOfIncorporation\\\"\\n                    mask=\\\"00/00/0000\\\"\\n                    #dateOfIncorporationField=\\\"ngModel\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                />\\n                <small class=\\\"form-text text-muted\\\">{{ 'common.format' | translate }}: dd/mm/yyyy</small>\\n                <div *ngIf=\\\"dateOfIncorporationField.invalid && (submitted || dateOfIncorporationField.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"dateOfIncorporationField?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"industry\\\">{{ 'common.industry' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"industry\\\"\\n                    name=\\\"industry\\\"\\n                    [(ngModel)]=\\\"business.industry\\\"\\n                    #industry=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"industry.invalid && (submitted || industry.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"industry?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label\\\" for=\\\"businessExpectedTurnover\\\">{{ 'user-details-form.expected-turnover' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"businessExpectedTurnover\\\"\\n                    name=\\\"businessExpectedTurnover\\\"\\n                    [(ngModel)]=\\\"business.expectedTurnover\\\"\\n                    #businessExpectedTurnover=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    [required]=\\\"requireAll\\\"\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"businessExpectedTurnover.invalid && (submitted || businessExpectedTurnover.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessExpectedTurnover?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-muted font-lg\\\">{{ 'user-details-form.office-address' | translate }}</div>\\n        <address-form [(address)]=\\\"business.address\\\" [disabled]=\\\"disabled\\\" [requireAll]=\\\"requireAll\\\"></address-form>\\n        <div class=\\\"text-muted font-lg\\\">{{ 'user-details-form.business-address' | translate }}</div>\\n        <address-form [(address)]=\\\"business.businessAddress\\\" [disabled]=\\\"disabled\\\" [requireAll]=\\\"requireAll\\\"></address-form>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"regulatoryBody\\\">{{ 'user-details-form.regulatory-body' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"regulatoryBody\\\"\\n                name=\\\"regulatoryBody\\\"\\n                [(ngModel)]=\\\"business.regulatoryBody\\\"\\n                #regulatoryBody=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"requireAll\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"regulatoryBody.invalid && (submitted || regulatoryBody.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"regulatoryBody?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"custom-controls-stacked mb-2\\\">\\n            <label class=\\\"custom-control custom-checkbox\\\">\\n                <input\\n                    id=\\\"licensed\\\"\\n                    type=\\\"checkbox\\\"\\n                    class=\\\"custom-control-input\\\"\\n                    name=\\\"licensed\\\"\\n                    [(ngModel)]=\\\"business.licensed\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                />\\n                <span class=\\\"custom-control-label\\\"> {{ 'common.licensed' | translate }} </span>\\n            </label>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"business.licensed\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"licenseNumber\\\">{{ 'user-details-form.license-number' | translate }}</label>\\n            <input\\n                id=\\\"licenseNumber\\\"\\n                type=\\\"text\\\"\\n                name=\\\"licenseNumber\\\"\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"business.licenseNumber\\\"\\n                [required]=\\\"requireAll\\\"\\n                [disabled]=\\\"disabled\\\"\\n                #licenseNumber=\\\"ngModel\\\"\\n            />\\n            <div *ngIf=\\\"licenseNumber.invalid && (submitted || licenseNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"licenseNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"businessFatcaYes\\\"\\n                >{{ 'user-details-form.are-you-considered-a-us-entity' | translate }}\\n                <fa-icon\\n                    class=\\\"text-primary\\\"\\n                    [icon]=\\\"faInfoCircle\\\"\\n                    [ngbPopover]=\\\"fatcaContent\\\"\\n                    [popoverTitle]=\\\"fatcaTitle\\\"\\n                    triggers=\\\"mouseenter:mouseleave\\\"\\n                ></fa-icon\\n            ></label>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                        <input\\n                            type=\\\"radio\\\"\\n                            [value]=\\\"true\\\"\\n                            [(ngModel)]=\\\"business.fatca\\\"\\n                            id=\\\"businessFatcaYes\\\"\\n                            name=\\\"businessFatcaYes\\\"\\n                            class=\\\"custom-control-input\\\"\\n                            [disabled]=\\\"disabled\\\"\\n                            #businessFatca=\\\"ngModel\\\"\\n                            [required]=\\\"requireAll\\\"\\n                        />\\n                        <label class=\\\"custom-control-label\\\" for=\\\"businessFatcaYes\\\">{{ 'common.yes' | translate }}</label>\\n                    </div>\\n                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\n                        <input\\n                            type=\\\"radio\\\"\\n                            [value]=\\\"false\\\"\\n                            [(ngModel)]=\\\"business.fatca\\\"\\n                            id=\\\"businessFatcaNo\\\"\\n                            name=\\\"businessFatcaNo\\\"\\n                            class=\\\"custom-control-input\\\"\\n                            [disabled]=\\\"disabled\\\"\\n                            [required]=\\\"requireAll\\\"\\n                        />\\n                        <label class=\\\"custom-control-label\\\" for=\\\"businessFatcaNo\\\">{{ 'common.no' | translate }}</label>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"businessFatca.invalid && (submitted || businessFatca.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"businessFatca?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n    </ng-template>\\n</form>\\n\\n<ng-template #fatcaTitle> FATCA </ng-template>\\n<ng-template #fatcaContent>\\n    <p>\\n        {{ 'common.fatca-stands' | translate }}\\n    </p>\\n    <p>\\n        {{ 'common.fatca-desc' | translate }}\\n    </p>\\n</ng-template>\\n\";","import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core'\nimport { faCloudUpload, faTimes } from '@fortawesome/pro-solid-svg-icons'\nimport { File as IFile } from '../api-interfaces'\n\n@Component({\n    selector: 'dropzone',\n    templateUrl: 'dropzone.component.html',\n})\nexport class DropzoneComponent implements AfterViewInit {\n    @Input()\n    public files: File[] = []\n    @Output()\n    public readonly filesChange = new EventEmitter<File[]>()\n    @Input()\n    public existingFiles?: IFile[]\n    @Input()\n    public showTable = true\n    @Input()\n    public canCreate = true\n    @Input()\n    public canDelete = true\n    @Output()\n    public readonly onDelete = new EventEmitter<IFile>()\n    @Input()\n    public requiredMessage: string\n    public isDragValid: boolean\n    public isDragInvalid: boolean\n    public submitted: boolean\n    public faCloudUpload = faCloudUpload\n    public faTimes = faTimes\n    @Input()\n    public allowVideo = false\n\n    public ngAfterViewInit(): void {\n        setTimeout(() => {\n            if (!Array.isArray(this.files)) {\n                this.filesChange.emit([])\n            }\n        })\n    }\n\n    public submit(): void {\n        this.submitted = true\n    }\n\n    public isValid(): boolean {\n        return (!!this.files && this.files.length > 0) || (!!this.existingFiles && this.existingFiles.length > 0)\n    }\n}\n","import { HttpBackend, HttpClient, HttpClientModule } from '@angular/common/http'\nimport { ErrorHandler, NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { ServiceWorkerModule } from '@angular/service-worker'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core'\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader'\nimport { Timestamp } from '../app/Timestamp'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { CoreModule } from './app/core/core.module'\nimport { AppErrorHandler } from './app/error-handler.service'\nimport { StatusMessageModule } from './app/status-message/status-message.module'\nimport { CommonModule } from './common/common.module'\nimport { OrganizationAuthGuard } from './organization/organization.auth-guard'\n\nexport function translateHttpLoaderFactory(httpBackend: HttpBackend): TranslateHttpLoader {\n    return new TranslateHttpLoader(new HttpClient(httpBackend), '/assets/i18n/', '.json?cb=' + Timestamp.stamp)\n}\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        IonicModule.forRoot({\n            mode: 'md',\n        }),\n        HttpClientModule,\n        CommonModule,\n        StatusMessageModule,\n        CoreModule,\n        AppRoutingModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: translateHttpLoaderFactory,\n                deps: [HttpBackend],\n            },\n        }),\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: true,\n            // Register the ServiceWorker as soon as the app is stable\n            // or after 30 seconds (whichever comes first).\n            registrationStrategy: 'registerWhenStable:30000',\n        }),\n    ],\n    providers: [\n        {\n            provide: ErrorHandler,\n            useClass: AppErrorHandler,\n        },\n        OrganizationAuthGuard,\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core'\nimport { Permission } from '../api-interfaces'\nimport { permissionMap } from '../common.mixin'\nimport { SessionService } from '../services/session.service'\n\n@Component({\n    selector: 'permission-select',\n    templateUrl: 'permission-select.component.html',\n})\nexport class PermissionSelectComponent {\n    @Input()\n    public permissions: Permission[] = []\n    @Output()\n    public readonly permissionsChange = new EventEmitter<Permission[]>()\n\n    public paymentPermissions: Permission[] = ['payment-swift', 'payment-local', 'payment-crypto']\n    public featurePermissions: Permission[] = [\n        'cards',\n        'conversions',\n        'invoices',\n        'trades',\n        'spot-trades',\n        'marketplaces',\n        'redeem',\n    ]\n\n    constructor(public session: SessionService) {}\n\n    public togglePaymentMethod(method: Permission, checked: boolean): void {\n        if (checked) {\n            this.permissions.push(method)\n        } else {\n            this.permissions = this.permissions.filter(paymentMethod => paymentMethod !== method)\n        }\n        this.permissionsChange.emit(this.permissions)\n    }\n\n    public toggleFeature(feature: Permission, checked: boolean): void {\n        if (checked) {\n            this.permissions.push(feature)\n        } else {\n            this.permissions = this.permissions.filter(paymentMethod => paymentMethod !== feature)\n        }\n        this.permissionsChange.emit(this.permissions)\n    }\n\n    public getPermissionLabel(permission: Permission): string {\n        return permissionMap[permission]\n    }\n}\n","import { CurrencyMaskModule } from '@aerapass/ngx-currency-mask'\nimport { CommonModule as AngularCommonModule, Location, LocationStrategy, PathLocationStrategy } from '@angular/common'\nimport { HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\nimport {\n    NgbAccordionModule,\n    NgbCollapseModule,\n    NgbDatepickerModule,\n    NgbDropdownModule,\n    NgbModalModule,\n    NgbPaginationModule,\n    NgbPopoverModule,\n    NgbProgressbarModule,\n    NgbTooltipModule,\n    NgbTypeaheadModule,\n} from '@ng-bootstrap/ng-bootstrap'\nimport { NgOptionHighlightModule } from '@ng-select/ng-option-highlight'\nimport { NgSelectModule } from '@ng-select/ng-select'\nimport { TranslateModule } from '@ngx-translate/core'\nimport { ngfModule } from 'angular-file'\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime'\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs'\nimport { NgxMaskModule } from 'ngx-mask'\nimport { AccessErrorsComponent } from './access-error/access-errors.component'\nimport { AccountNumberPipe } from './account-number.pipe'\nimport { AccountNumberComponent } from './account-number/acount-number.component'\nimport { AddressFormComponent } from './address-form/address-form.component'\nimport { AlertOutletComponent } from './alert-outlet/alert-outlet.component'\nimport { AmountPipe } from './amount.pipe'\nimport { TokenRequestInterceptor } from './auth.interceptor'\nimport { BeneficiaryDetailsFormComponent } from './beneficiary-form/beneficiary-details-form/beneficiary-details-form.component'\nimport { BeneficiaryFormComponent } from './beneficiary-form/beneficiary-form.component'\nimport { CapitalizePipe } from './capitalize.pipe'\nimport { CardFeeScheduleComponent } from './card-fee-schedule/card-fee-schedule.component'\nimport { CircleSpinnerComponent } from './circle-spinner/circle-spinner.component'\nimport { ConfirmMailReminderComponent } from './confirm-mail-reminder/confirm-mail-reminder.component'\nimport { ConfirmationModalComponent } from './confirmation-modal/confirmation-modal.component'\nimport { ContactBookComponent } from './contact-book/contact-book.component'\nimport { CopyButtonComponent } from './copy-btn/copy-btn.component'\nimport { CopyIconComponent } from './copy-icon/copy-icon.component'\nimport { CopyWrapComponent } from './copy-wrap/copy-wrap.component'\nimport { CurrencySelectTabComponent } from './currency-select-tab/currency-select-tab.component'\nimport { CurrencySelectComponent } from './currency-select/currency-select.component'\nimport { DepositInstructionTableComponent } from './deposit-instruction-table/deposit-instruction-table.component'\nimport { DepositInstructionComponent } from './deposit-instruction/deposit-instruction.component'\nimport { DropzoneComponent } from './dropzone/dropzone.component'\nimport { EmptyToNullDirective } from './emptytonull.directive'\nimport { ErrorHandlerInterceptor } from './errorhandler.interceptor'\nimport { FeePreviewComponent } from './fee-preview/fee-preview.component'\nimport { FocusDirective } from './focus.directive'\nimport { FormatDatePipe } from './format-date.pipe'\nimport { FormatDistanceToNowPipe } from './format-distance-to-now.pipe'\nimport { IsBeforePipe } from './is-before.pipe'\nimport { ListComponent } from './list.component'\nimport { MaskedPipe } from './masked.pipe'\nimport { MatchPasswordDirective } from './match-password.directive'\nimport { NoAccessModalComponent } from './no-access-modal/no-access-modal.component'\nimport { NumericDirective } from './numeric.directive'\nimport { PasswordStrengthBarComponent } from './password-strength-bar/password-strength-bar.component'\nimport { PasswordStrengthDirective } from './password-strength.directive'\nimport { PermissionSelectComponent } from './permission-select/permission-select.component'\nimport { PluralizePipe } from './pluralize.pipe'\nimport { PostalAddressComponent } from './postal-address/postal-address.component'\nimport { FileItemComponent } from './profile-documents/file-item.component'\nimport { ProfileDocumentsComponent } from './profile-documents/profile-documents.component'\nimport { UserFileFormComponent } from './profile-documents/user-file-form/user-file-form.component'\nimport { SafeHtmlPipe } from './safe-html.pipe'\nimport { SafeResourceUrlPipe } from './safe-resource-url.pipe'\nimport { SafeUrlPipe } from './safe-url.pipe'\nimport { ConfirmPasswordModalComponent } from './security-check/confirm-password.modal'\nimport { SentenceCasePipe } from './sentence-case.pipe'\nimport { StartCasePipe } from './start-case.pipe'\nimport { TruncatePipe } from './truncate.pipe'\nimport { UserAvatarComponent } from './user-avatar/user-avatar.component'\nimport { UserDetailsFormComponent } from './user-details-form/user-details-form.component'\nimport { UserInfoTableComponent } from './user-info-table/user-info-table.component'\nimport { UserComponent } from './user/user.component'\nimport { UuidComponent } from './uuid/uuid.component'\nimport { ValidateDirective } from './validate.directive'\nimport {\n    BirthdayValidatorDirective,\n    ColorValidatorDirective,\n    CustomValidatorDirective,\n    DecimalValidatorDirective,\n    IntegerValidatorDirective,\n    MaxValidatorDirective,\n    MinValidatorDirective,\n    NumberValidatorDirective,\n    RecipientValidatorDirective,\n    NameValidatorDirective,\n    IpAddressValidatorDirective,\n} from './validators'\nimport { VideoPlayerComponent } from './video-player/video-player.component'\nimport { WelcomeComponent } from './welcome/welcome.component'\n\nconst DECLARATIONS = [\n    AccessErrorsComponent,\n    AccountNumberComponent,\n    AccountNumberPipe,\n    AddressFormComponent,\n    AlertOutletComponent,\n    AmountPipe,\n    BeneficiaryDetailsFormComponent,\n    BeneficiaryFormComponent,\n    BirthdayValidatorDirective,\n    RecipientValidatorDirective,\n    CircleSpinnerComponent,\n    ColorValidatorDirective,\n    ConfirmationModalComponent,\n    ConfirmMailReminderComponent,\n    ConfirmPasswordModalComponent,\n    ContactBookComponent,\n    CopyButtonComponent,\n    CopyIconComponent,\n    CopyWrapComponent,\n    CurrencySelectComponent,\n    CurrencySelectTabComponent,\n    CustomValidatorDirective,\n    DecimalValidatorDirective,\n    DropzoneComponent,\n    EmptyToNullDirective,\n    UserAvatarComponent,\n    UserComponent,\n    FeePreviewComponent,\n    FileItemComponent,\n    FocusDirective,\n    FormatDatePipe,\n    FormatDistanceToNowPipe,\n    IntegerValidatorDirective,\n    ListComponent,\n    MatchPasswordDirective,\n    MaxValidatorDirective,\n    MinValidatorDirective,\n    NameValidatorDirective,\n    IpAddressValidatorDirective,\n    NoAccessModalComponent,\n    NumberValidatorDirective,\n    NumericDirective,\n    PasswordStrengthBarComponent,\n    PasswordStrengthDirective,\n    PermissionSelectComponent,\n    PostalAddressComponent,\n    ProfileDocumentsComponent,\n    SafeHtmlPipe,\n    SafeResourceUrlPipe,\n    SafeUrlPipe,\n    StartCasePipe,\n    CapitalizePipe,\n    TruncatePipe,\n    UserFileFormComponent,\n    UserDetailsFormComponent,\n    UserInfoTableComponent,\n    UuidComponent,\n    ValidateDirective,\n    VideoPlayerComponent,\n    WelcomeComponent,\n    DepositInstructionComponent,\n    DepositInstructionTableComponent,\n    CardFeeScheduleComponent,\n    MaskedPipe,\n    PluralizePipe,\n    IsBeforePipe,\n    SentenceCasePipe,\n]\n\nconst MODULES = [\n    AngularCommonModule,\n    CurrencyMaskModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    NgOptionHighlightModule,\n    ngfModule,\n    NgbTooltipModule,\n    NgbDropdownModule,\n    NgbModalModule,\n    NgbPaginationModule,\n    NgbProgressbarModule,\n    NgbTypeaheadModule,\n    NgbPopoverModule,\n    NgbAccordionModule,\n    NgbCollapseModule,\n    FontAwesomeModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    NgbDatepickerModule,\n    HighlightModule,\n    TranslateModule,\n]\n\n@NgModule({\n    declarations: [...DECLARATIONS],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ErrorHandlerInterceptor,\n            multi: true,\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenRequestInterceptor,\n            multi: true,\n        },\n        Location,\n        {\n            provide: LocationStrategy,\n            useClass: PathLocationStrategy,\n        },\n        {\n            provide: HIGHLIGHT_OPTIONS,\n            useValue: {\n                fullLibraryLoader: () => import('highlight.js'),\n            },\n        },\n    ],\n    imports: [NgxMaskModule.forRoot(), ...MODULES],\n    exports: [...DECLARATIONS, ...MODULES, NgxMaskModule],\n})\nexport class CommonModule {}\n","import { HttpClient, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http'\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faSearch } from '@fortawesome/pro-regular-svg-icons'\nimport { faCaretDown, faChevronDown, faChevronUp, faDownload, faPlus } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap'\nimport formatDate from 'date-fns/format'\nimport { find, findIndex, isEqual, last, matches } from 'lodash'\nimport { BehaviorSubject, merge, Observable, of, Subject, Subscription, throwError } from 'rxjs'\nimport { catchError, debounceTime, filter, map, switchMap, tap } from 'rxjs/operators'\nimport { ConfirmationResult, ConfirmationService } from './services/confirmation.service'\nimport { SessionService } from './services/session.service'\n\nexport enum Scope {\n    DEFAULT = 'default',\n}\n\nexport interface Query {\n    [param: string]: { [operator: string]: string | string[] }\n}\n\n/**\n * Base class for list controllers.\n */\n@Component({\n    selector: 'undef-list', // this is required by angular but we don't want it to be used accidentally\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: '',\n})\nexport class ListComponent<T extends { id: number | string }> implements OnInit, OnDestroy {\n    public scope: string = Scope.DEFAULT\n    public page: number\n    public order: string[][]\n    public search = ''\n    public itemsStream: Observable<T[]>\n    public limitOpts: number[] = [5, 8, 10, 12, 15, 20, 50]\n    public limit: number\n    public offset = 0\n    public count = 0\n    public fill: undefined[]\n    public queryParams: Query = {}\n    public searchEvent = new Subject<void>()\n    public paginationEvent = new Subject<void>()\n    public updateEvent = new Subject<void>()\n    public isFetching = new BehaviorSubject<boolean>(false)\n    public isFilterOptionsCollapsed = true\n    public doCollapseFilterOptionsIfParamsSet = true\n\n    public formatDate = formatDate\n\n    public faPlus = faPlus\n    public faSearch = faSearch\n    public faChevronUp = faChevronUp\n    public faChevronDown = faChevronDown\n    public faDownload = faDownload\n    public faCaretDown = faCaretDown\n\n    /**\n     * The template to use for the edit/create dialog.\n     * The scope inherits from the current scope and gets passed `item` (the item to edit/create) as a scope variable\n     */\n    protected formComponent?: any\n    protected model?: new (...args: any[]) => T\n    protected apiUrl: string\n    protected apiQuery?: string[]\n    protected defaultLimit = this.limitOpts[2]\n    protected defaultOrder: string[][] = [['createdAt', 'DESC']]\n    protected defaultQuery: Query = {}\n    protected subscriptions = new Subscription()\n\n    constructor(\n        protected http: HttpClient,\n        protected ngbModal: NgbModal,\n        protected changeDetector: ChangeDetectorRef,\n        protected route: ActivatedRoute,\n        public router: Router,\n        public session: SessionService,\n        public confirmation: ConfirmationService\n    ) {}\n\n    public ngOnInit(): void {\n        this.limit = this.defaultLimit\n        this.order = this.defaultOrder\n        if (this.apiQuery) {\n            for (const property of this.apiQuery) {\n                this.queryParams[property] = {}\n                if (this.defaultQuery && this.defaultQuery[property]) {\n                    // eslint-disable-next-line guard-for-in\n                    for (const key in this.defaultQuery[property]) {\n                        this.queryParams[property][key] = this.defaultQuery[property][key]\n                    }\n                }\n            }\n        }\n        this.itemsStream = this.mergeFindEvents().pipe(\n            switchMap(() => this.find()),\n            catchError(err => {\n                this.isFetching.next(false)\n                return throwError(err)\n            }),\n            tap(response => {\n                this.count =\n                    response.headers && response.headers.has('x-total-count')\n                        ? ~~response.headers.get('x-total-count')!\n                        : 0\n                this.page = this.offset / this.limit + 1\n                const routeParams: { [K: string]: string | string[] | undefined } = {\n                    page: this.page !== 1 ? this.page + '' : undefined,\n                    perPage: this.limit !== this.defaultLimit ? this.limit + '' : undefined,\n                    order: !isEqual(this.order, this.defaultOrder) ? this.order.map(item => item.join(':')) : undefined,\n                    search: this.search || undefined,\n                    scope: this.scope !== Scope.DEFAULT ? this.scope : undefined,\n                }\n                for (const param of Object.keys(this.queryParams)) {\n                    if (Object.keys(this.queryParams[param]).length > 0) {\n                        routeParams[param] = !isEqual(this.queryParams[param], this.defaultQuery[param])\n                            ? this.encodeQueryParam(this.queryParams[param])\n                            : undefined\n                    }\n                }\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.changeState(routeParams)\n            }),\n            tap(response => {\n                this.fill = new Array(this.limit - response.body!.length)\n            }),\n            map(response => response.body!.map(item => this.mapItem(item))),\n            tap(() => {\n                this.changeDetector.detectChanges()\n                this.isFetching.next(false)\n            })\n        )\n        this.route.queryParamMap.subscribe(params => {\n            if (params.has('perPage')) {\n                this.limit = ~~params.get('perPage')!\n            }\n            if (params.has('page')) {\n                this.offset = (~~params.get('page')! - 1) * this.limit\n            }\n            if (!this.page) {\n                this.page = 1\n            }\n            if (params.has('search')) {\n                this.search = decodeURIComponent(params.get('search')!)\n            }\n            if (params.has('scope')) {\n                this.scope = decodeURIComponent(params.get('scope')!) as Scope\n            }\n            if (params.has('order')) {\n                this.order = params.getAll('order').map(item => item.split(':'))\n            }\n            for (const key of Object.keys(this.queryParams)) {\n                if (params.has(key)) {\n                    this.queryParams[key] = this.decodeQueryParam(params.getAll(key))\n                    // Expand filter options if custom filter is set\n                    if (this.doCollapseFilterOptionsIfParamsSet) {\n                        this.isFilterOptionsCollapsed = false\n                    }\n                }\n            }\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public find(): Observable<HttpResponse<any[]>> {\n        this.isFetching.next(true)\n        return this.http.get<any[]>(this.apiUrl, {\n            observe: 'response',\n            params: this.generateListParams(),\n        })\n    }\n\n    public generateListParams(override: { limit?: number } = {}): HttpParams {\n        let params = new HttpParams().set('limit', (override.limit || this.limit) + '').set('offset', this.offset + '')\n        if (this.order) {\n            for (const item of this.order) {\n                params = params.append('order', item.join(':'))\n            }\n        }\n        if (this.search) {\n            // the + sign is already encoded for space, should actually be a plus though\n            params = params.set('search', this.search.replace('+', '%2B'))\n        }\n        if (this.scope && this.scope !== Scope.DEFAULT) {\n            params = params.set('scope', this.scope)\n        }\n        for (const param of Object.keys(this.queryParams)) {\n            const encoded = this.encodeQueryParam(this.queryParams[param])\n            for (const value of encoded) {\n                params = params.append(param, value)\n            }\n        }\n        return params\n    }\n\n    /** Modal: Read, update and delete */\n    public showForm(_: MouseEvent, item: Partial<T>, options: NgbModalOptions = {}): void {\n        if (!this.formComponent) {\n            throw new Error('No form-template given in controller.')\n        }\n        const modal = this.ngbModal.open(this.formComponent, {\n            backdrop: 'static',\n            windowClass: 'modal-primary',\n            ...options,\n        })\n        modal.componentInstance.item = this.mapItem(item)\n        if (modal.componentInstance.onSave) {\n            modal.componentInstance.onSave.subscribe(() => {\n                modal.close()\n                this.updateEvent.next()\n            })\n        }\n        if (modal.componentInstance.onDelete) {\n            modal.componentInstance.onDelete.subscribe(() => {\n                modal.close()\n                this.updateEvent.next()\n            })\n        }\n    }\n\n    public requestExport(ignoreCount?: boolean): void {\n        if (this.count > 10000 && !ignoreCount) {\n            this.subscriptions.add(\n                this.confirmation\n                    .show({\n                        type: 'warning',\n                        text: 'Export exceeds the maximum of 10,000 records. You can use filters to limit your export query. Do you still want to continue?',\n                        confirmText: 'Yes',\n                        confirmClass: 'warning',\n                        cancelText: 'No',\n                        cancelClass: 'primary',\n                    })\n                    .pipe(filter(result => result === ConfirmationResult.CONFIRMED))\n                    .subscribe(() => {\n                        this.generateList()\n                    })\n            )\n        } else {\n            this.generateList()\n        }\n    }\n\n    public generateList(): void {\n        this.subscriptions.add(\n            this.http\n                .get(this.apiUrl, {\n                    params: this.generateListParams({ limit: 10000 }).delete('offset'),\n                    headers: new HttpHeaders({\n                        Accept: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                    }),\n                    observe: 'response',\n                    responseType: 'blob',\n                })\n                .subscribe(response => {\n                    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(response.body)\n                    } else {\n                        const data = window.URL.createObjectURL(response.body)\n                        const link = document.createElement('a')\n                        link.href = data\n                        const contentDisposition = response.headers.get('Content-Disposition')\n                        link.download = contentDisposition\n                            ? contentDisposition.substring(\n                                  contentDisposition.indexOf('filename=') + 9,\n                                  contentDisposition.length - 1\n                              )\n                            : 'export.xlsx'\n                        link.click()\n                        setTimeout(() => {\n                            // For Firefox it is necessary to delay revoking the ObjectURL\n                            window.URL.revokeObjectURL(data)\n                        }, 100)\n                    }\n                })\n        )\n    }\n\n    /** Select specified page */\n    public select(page?: number): void {\n        if (typeof page !== 'undefined') {\n            this.page = page\n        }\n        this.offset = (this.page - 1) * this.limit\n        this.paginationEvent.next()\n    }\n\n    /**\n     * Change the sorting order\n     * @param order Sequelize Order syntax\n     * @param toggle Whether to toggle the order instead of replacing\n     */\n    public sort(order: string[], toggle = false): void {\n        // TODO: Allow order functions to be additive\n        if (typeof this.order === 'string') {\n            return\n        }\n        // Find out if order for that attribute is active already\n        const index = findIndex(this.order, matches(order))\n        // if is already selected, toggle\n        if (index === -1 || last(this.order[index]) === 'DESC') {\n            order = [...order, 'ASC']\n        } else {\n            order = [...order, 'DESC']\n        }\n\n        if (!toggle) {\n            // Replace whole order\n            this.order = order.length > 0 ? [order] : this.defaultOrder\n        } else {\n            if (index !== -1) {\n                // If sorting for this attribute is active\n                if (order.length === 0) {\n                    // If the same icon is clicked three times, remove it\n                    this.order.splice(index, 1)\n                } else {\n                    // If it was clicked twice, swap the direction\n                    this.order[index] = order\n                }\n            } else {\n                // If not active, add new order criteria\n                this.order.push(order)\n            }\n        }\n        this.select(1)\n    }\n\n    public isActiveSorting(order: string[]): boolean {\n        return !!find(this.order, matches(order))\n    }\n\n    public getSortingDirection(order: string[]): string | null | undefined {\n        const orderElement = find(this.order, matches(order))\n        return last(orderElement)\n    }\n\n    public isActiveQuery(query: Query): boolean {\n        return isEqual(this.queryParams, query)\n    }\n\n    public getDefaultQuery(): Query {\n        return this.defaultQuery\n    }\n\n    protected mergeFindEvents(): Observable<void> {\n        return merge(of(undefined), this.searchEvent.pipe(debounceTime(600)), this.paginationEvent, this.updateEvent)\n    }\n\n    protected mapItem(item: any): T {\n        return this.model ? new this.model(item) : item\n    }\n\n    protected async changeState(queryParams: { [K: string]: string | string[] | undefined }): Promise<void> {\n        const scroll = window.scrollY\n        await this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams,\n            queryParamsHandling: 'merge',\n        })\n        window.scrollTo(0, scroll)\n    }\n\n    private decodeQueryParam(query: string[]): { [operator: string]: string | string[] } {\n        const decoded: { [operator: string]: string | string[] } = {}\n        for (const q of query) {\n            const [op, value] = q.split(':')\n            decoded[op] = value.split(',')\n        }\n        return decoded\n    }\n\n    private encodeQueryParam(query: { [operator: string]: string | string[] }): string[] {\n        const encoded: string[] = []\n        for (const op of Object.keys(query)) {\n            const value = query[op]\n            if (!value || (Array.isArray(value) && value.length === 0)) {\n                continue\n            }\n            encoded.push(`${op}:${Array.isArray(value) ? value.join(',') : value}`)\n        }\n        return encoded\n    }\n}\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[integerValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: IntegerValidatorDirective, multi: true }],\n})\nexport class IntegerValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        const required = Validators.required(control)\n        if (required !== null) {\n            return null\n        }\n        if (!Number.isInteger(control.value)) {\n            return { invalidInteger: true }\n        }\n        return null\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\n@Component({\n    selector: 'uuid',\n    templateUrl: 'uuid.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UuidComponent {\n    @Input() public value: string\n    @Input() public ngClass = 'text-muted'\n}\n","export default \"<table class=\\\"table table-striped table-borderless mb-0\\\">\\n    <tbody>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.topup-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ determineFees('topupFee') }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.atm-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.atmFee\\n                        ? cardFees.atmFee !== '0'\\n                            ? (cardFees.atmFee | amount: 2) + ' USD'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.atm-decline-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.atmDeclineFee\\n                        ? cardFees.atmDeclineFee !== '0'\\n                            ? (cardFees.atmDeclineFee | amount: 2) + ' USD'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">FX</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.fx\\n                        ? cardFees.fx !== '0'\\n                            ? (cardFees.fx | amount: 2) + ' %'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.decline-transaction' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.declineTransaction\\n                        ? (cardFees.declineTransaction | amount: 2) !== '0'\\n                            ? cardFees.declineTransaction + ' USD'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.replacement-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{\\n                    cardFees.replacementFee\\n                        ? cardFees.replacementFee !== '0'\\n                            ? (cardFees.replacementFee | amount: 2) + ' USD'\\n                            : ('common.free' | translate | uppercase)\\n                        : ('common.unknown' | translate)\\n                }}\\n            </td>\\n        </tr>\\n        <tr *ngIf=\\\"cardFees.ecomFee && cardFees.ecomFee !== '0'\\\">\\n            <th scope=\\\"row\\\">{{ 'common.ecommerce-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.ecomFee | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n        <tr *ngIf=\\\"cardFees.posFee && cardFees.posFee !== '0'\\\">\\n            <th scope=\\\"row\\\">{{ 'common.pos-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.posFee | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.unload-fee' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ determineFees('unloadFundsFee') }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.max-balance' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ cardFees.annualLoadingLimit ? (cardFees.annualLoadingLimit | amount: 2) + ' USD' : ('common.unlimited' | translate) }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.monthly-spending-limit' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.monthlySpendingLimit | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.per-transaction-spending-limit' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.dailyPosEcomLimit | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n        <tr>\\n            <th scope=\\\"row\\\">{{ 'common.daily-atm-limit' | translate }}</th>\\n            <td class=\\\"text-right\\\">\\n                {{ (cardFees.dailyAtmLimit | amount: 2) + ' USD' }}\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\";","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms'\nimport { isAccountNumber, isEmail } from '../common.mixin'\n\n@Directive({\n    selector: '[recipientValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: RecipientValidatorDirective, multi: true }],\n})\nexport class RecipientValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (!isAccountNumber(control.value || '', { allowSpaces: true }) && !isEmail(control.value || '')) {\n            return { invalidRecipient: true }\n        }\n        return null\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { CanLoad } from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { SessionService } from '../common/services/session.service'\n\n@Injectable()\nexport class OrganizationAuthGuard implements CanLoad {\n    constructor(private session: SessionService) {}\n    public canLoad(): boolean | Observable<boolean> | Promise<boolean> {\n        return this.session.isAuthenticated() && this.session.user.type === 'business'\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    public transform(value: string): SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(value)\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { assignInWith } from 'lodash'\nimport { from, Observable, of } from 'rxjs'\nimport { catchError, map } from 'rxjs/operators'\nimport { BootstrapComponentType } from '../common.mixin'\nimport { ConfirmationModalComponent } from '../confirmation-modal/confirmation-modal.component'\n\nexport interface ConfirmationOptions {\n    type?: BootstrapComponentType\n    title?: string\n    text: string\n    confirmText?: string\n    confirmClass?: BootstrapComponentType\n    cancelText?: string\n    cancelClass?: BootstrapComponentType\n    showCancel?: boolean\n}\n\nexport interface InputConfirmationOptions extends ConfirmationOptions {\n    input: 'text'\n    inputLabel?: string\n    inputValidator?(value: string): string | null\n}\n\nexport enum ConfirmationResult {\n    CONFIRMED = 'confirmed',\n    CANCELLED = 'cancelled',\n    DISMISSED = 'dismissed',\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ConfirmationService {\n    constructor(private modal: NgbModal) {}\n    public show(options: ConfirmationOptions): Observable<ConfirmationResult>\n    public show(options: InputConfirmationOptions): Observable<[ConfirmationResult, string]>\n    public show(options: InputConfirmationOptions): Observable<ConfirmationResult | [ConfirmationResult, string]> {\n        const modal = this.modal.open(ConfirmationModalComponent, {\n            windowClass: options.type ? 'modal-' + options.type : '',\n            size: 'sm',\n        })\n        const modalInstance = modal.componentInstance as ConfirmationModalComponent\n        assignInWith(modalInstance, options, (initValue, optValue) =>\n            ![undefined, null].includes(optValue) ? optValue : initValue\n        )\n        const mapResult = (result: ConfirmationResult): ConfirmationResult | [ConfirmationResult, string] =>\n            options.input ? [result, modalInstance.inputValue] : result\n        return from(modal.result).pipe(\n            map(confirmed => mapResult(confirmed ? ConfirmationResult.CONFIRMED : ConfirmationResult.CANCELLED)),\n            catchError(() => of(mapResult(ConfirmationResult.DISMISSED)))\n        )\n    }\n}\n","export default \"<div class=\\\"e2e-access-errors callout callout-danger\\\" *ngIf=\\\"whiteListedErrors.length > 0\\\">\\n    <p>\\n        Please complete the verification process to gain access to this feature.\\n        <a href (click)=\\\"$event.preventDefault(); goToVerification()\\\">Verify now</a>\\n    </p>\\n</div>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport BigNumber from 'bignumber.js'\n\n@Pipe({ name: 'pluralize' })\nexport class PluralizePipe implements PipeTransform {\n    public transform(text: string, value: string, otherValue: number = 1): string | null | undefined {\n        return new BigNumber(value || 0).isGreaterThan(otherValue) ? text + (text.endsWith('s') ? 'es' : 's') : text\n    }\n}\n","import { Directive, ElementRef, HostListener, OnChanges, Renderer2 } from '@angular/core'\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms'\n\n@Directive({\n    selector: '[emptyToNull]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: EmptyToNullDirective,\n            multi: true,\n        },\n    ],\n})\nexport class EmptyToNullDirective implements ControlValueAccessor, OnChanges {\n    private lastValue: any\n\n    constructor(private renderer: Renderer2, private element: ElementRef) {}\n\n    public ngOnChanges(): void {\n        // nothing to do\n    }\n\n    public writeValue(value: any): void {\n        const normalizedValue = value === null || value === undefined ? '' : value\n        this.renderer.setProperty(this.element.nativeElement, 'value', normalizedValue)\n    }\n\n    @HostListener('input', ['$event.target.value'])\n    public onInput(value: any): void {\n        if (this.lastValue !== value) {\n            this.lastValue = value\n            this.renderer.setProperty(this.element.nativeElement, 'value', value)\n            this._onChange(value === '' ? null : value)\n        }\n    }\n\n    public registerOnChange(fn: (value: any) => any): void {\n        this._onChange = fn\n    }\n\n    public registerOnTouched(): void {\n        // nothing to do here\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.renderer.setProperty(this.element.nativeElement, 'disabled', isDisabled)\n    }\n\n    private _onChange = (_: any) => {\n        // to be initialized\n    }\n}\n","import { Component } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { faExclamationCircle } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbActiveModal, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { UserService } from '../services/core/user.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\n\nexport type NoAccessError = 'VerificationRequiredError'\n\n@Component({\n    selector: 'no-access-modal',\n    templateUrl: 'no-access-modal.component.html',\n})\nexport class NoAccessModalComponent {\n    public faExclamationCircle = faExclamationCircle\n    public error: NoAccessError\n    public resendTriggered = false\n    private subscriptions = new Subscription()\n\n    constructor(\n        public activeModal: NgbActiveModal,\n        private router: Router,\n        private userService: UserService,\n        private session: SessionService,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {}\n\n    public async goToVerification(): Promise<void> {\n        this.activeModal.dismiss()\n        await this.router.navigate(['/verify'])\n    }\n\n    public async goToRequest(): Promise<void> {\n        this.activeModal.close()\n        await this.router.navigate(['/deposit'])\n    }\n\n    public resend(): void {\n        this.resendTriggered = true\n        this.subscriptions.add(\n            this.userService.resendActivationMail(this.session.user.id).subscribe(\n                () => {\n                    this.toastr.success(this.translate.instant('common.mail-confirmation-sent-again'))\n                },\n                () => {\n                    this.resendTriggered = false\n                }\n            )\n        )\n    }\n}\n\nexport function openNoAccessModal(ngbModal: NgbModal, error: NoAccessError): NgbModalRef {\n    const modal = ngbModal.open(NoAccessModalComponent, {\n        windowClass: 'modal-primary',\n    })\n    modal.componentInstance.error = error\n    return modal\n}\n","export default \"<button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" [routerLink]=\\\"['/admin/realtime']\\\">\\n    <fa-icon class=\\\"mr-1\\\" [fixedWidth]=\\\"true\\\" [icon]=\\\"faUsers\\\"></fa-icon>\\n    <span class=\\\"badge badge-primary badge-pill\\\">\\n        {{ userCount$ | async | number: '1.0-0' }}\\n    </span>\\n</button>\\n\";","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../../common/common.module'\nimport { NotificationModule } from '../../common/notification/notification.module'\nimport { NotFoundModule } from '../not-found/not-found.module'\nimport { FooterComponent } from './footer/footer.component'\nimport { HeaderMailboxComponent } from './header/header-mailbox/header-mailbox.component'\nimport { HeaderNotificationsComponent } from './header/header-notifications/header-notifications.component'\nimport { HeaderComponent } from './header/header.component'\nimport { OnlineUsersCountComponent } from './header/online-users-count/online-users-count.component'\nimport { LogoutTimerModalComponent } from './logout-timer/logout-timer-modal.component'\nimport { LogoutTimerService } from './logout-timer/logout-timer.service'\nimport { MenuProfileComponent } from './menu/menu-profile/menu-profile.component'\nimport { MenuComponent } from './menu/menu.component'\nimport { MenuService } from './menu/menu.service'\nimport { ToastrComponent } from './toastr/toastr.component'\n\n@NgModule({\n    declarations: [\n        FooterComponent,\n        HeaderComponent,\n        HeaderNotificationsComponent,\n        HeaderMailboxComponent,\n        OnlineUsersCountComponent,\n        MenuComponent,\n        ToastrComponent,\n        MenuProfileComponent,\n        LogoutTimerModalComponent,\n    ],\n    exports: [FooterComponent, HeaderComponent, MenuComponent, ToastrComponent],\n    providers: [LogoutTimerService, MenuService],\n    imports: [CommonModule, NotFoundModule, NotificationModule],\n})\nexport class CoreModule {}\n","import { HttpClient } from '@angular/common/http'\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, Output, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { Observable, of } from 'rxjs'\nimport { catchError, debounceTime, distinctUntilChanged, finalize, switchMap } from 'rxjs/operators'\nimport { IAddress } from '../api-interfaces'\nimport { transformAddress } from '../common.mixin'\nimport { countriesSortedByName } from '../countries'\n\n@Component({\n    selector: 'address-form',\n    templateUrl: 'address-form.component.html',\n})\nexport class AddressFormComponent implements OnChanges, AfterViewInit {\n    @Input()\n    public address: IAddress\n    @Output()\n    public readonly addressChange = new EventEmitter<IAddress>()\n    @Input()\n    public prefix: string\n    @Input()\n    public isLarge = false\n    /* Removes most required constraints on inputs as the admin route allows many blank fields */\n    @Input()\n    public requireAll = true\n    @Input()\n    public disabled = false\n    @Input()\n    public showToggleButton = true\n    @ViewChild('addressForm')\n    public form: NgForm\n    public countriesSortedByName = countriesSortedByName\n    public submitted = false\n    /** Street from places api. Street is stored here so that it can be assigned to the this.user.addressLine1 on submit. */\n    public addressLine1: { name: string | null } | { formatted_address: string } | null\n    public placesAutocomplete = new EventEmitter<string>()\n    public placesStream: Observable<any[]> = this.placesAutocomplete.pipe(\n        distinctUntilChanged(),\n        debounceTime(200),\n        switchMap(text =>\n            text && text.length > 2\n                ? this.http.get<any[]>('/places', {\n                      params: {\n                          search: text,\n                      },\n                  })\n                : of([])\n        ),\n        catchError(() => of([]))\n    )\n\n    constructor(private http: HttpClient) {}\n\n    public ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.addressChange.emit(this.address)\n        })\n    }\n\n    public ngOnChanges(): void {\n        if (!this.address) {\n            this.address = {} as any\n        }\n        this.transformAddress()\n    }\n\n    public submit(): void {\n        this.submitted = true\n    }\n\n    public isValid(): boolean {\n        return !!this.form.valid\n    }\n\n    public setAddress(place: any): void {\n        if (place && place.structured_formatting && place.structured_formatting.main_text) {\n            this.addressLine1 = place.structured_formatting.main_text\n        }\n        if (place && place.place_id) {\n            this.disabled = true\n            this.http\n                .get<any>('/places/' + place.place_id)\n                .pipe(\n                    finalize(() => {\n                        this.disabled = false\n                    })\n                )\n                .subscribe(details => {\n                    const getType = (type: string) =>\n                        details.address_components.find((component: any) => component.types.includes(type))\n                    this.address.addressLine1 = details.name || null\n                    this.address.city = (getType('locality') && getType('locality').long_name) || null\n                    this.address.zipCode = (getType('postal_code') && getType('postal_code').long_name) || null\n                    this.address.state =\n                        (getType('administrative_area_level_1') && getType('administrative_area_level_1').long_name) ||\n                        null\n                    this.address.country = (getType('country') && getType('country').short_name) || null\n                    this.transformAddress()\n                    this.addressChange.emit(this.address)\n                })\n        } else if (place && place.name) {\n            this.address.addressLine1 = place.name\n            this.addressChange.emit(this.address)\n        }\n    }\n\n    public transformAddress(): void {\n        this.addressLine1 = transformAddress(this.address)\n    }\n}\n","export { IntegerValidatorDirective } from './integer-validator.directive'\nexport { MinValidatorDirective } from './min-validator.directive'\nexport { MaxValidatorDirective } from './max-validator.directive'\nexport { NumberValidatorDirective } from './number-validator.directive'\nexport { DecimalValidatorDirective } from './decimal-validator.directive'\nexport { BirthdayValidatorDirective } from './birthday-validator.directive'\nexport { CustomValidatorDirective } from './custom-validator.directive'\nexport { ColorValidatorDirective } from './color-validator.directive'\nexport { RecipientValidatorDirective } from './recipient-validator.directive'\nexport { NameValidatorDirective } from './name-validator.directive'\nexport { IpAddressValidatorDirective } from './ip-address-validator.directive'\n","import { Directive } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[number][formControlName],[number][formControl],[number][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: NumberValidatorDirective,\n            multi: true,\n        },\n    ],\n})\nexport class NumberValidatorDirective implements Validator {\n    public validate(control: AbstractControl): ValidationErrors | null {\n        const required = Validators.required(control)\n        if (required !== undefined && required !== null) {\n            return null\n        }\n        // eslint-disable-next-line id-blacklist\n        return /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(control.value) ? null : { number: true }\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { switchMap, take, tap } from 'rxjs/operators'\nimport { Wallet } from '../../common/api-interfaces'\nimport { SessionService } from '../../common/services/session.service'\nimport { WalletsStore } from './wallets.store'\n\n@Injectable({ providedIn: 'root' })\nexport class WalletsService {\n    constructor(protected store: WalletsStore, private session: SessionService, private http: HttpClient) {}\n\n    public fetchAsObservable(): Observable<Wallet[]> {\n        return this.session.userStream.pipe(\n            take(1),\n            switchMap(user =>\n                this.http.get<Wallet[]>(`/users/${user.id}/wallets`, {\n                    params: {\n                        limit: '20',\n                    },\n                })\n            ),\n            tap(wallets => {\n                this.store.set(wallets)\n            })\n        )\n    }\n\n    public fetch(): void {\n        this.fetchAsObservable().subscribe(() => undefined)\n    }\n}\n","export default \"<ng-container *ngIf=\\\"user$ | async; let user\\\">\\n    <a\\n        href\\n        class=\\\"profile\\\"\\n        [ngClass]=\\\"{ open: isOpen }\\\"\\n        (click)=\\\"isOpen = !isOpen; $event.preventDefault()\\\"\\n        [ngbTooltip]=\\\"profileTooltip\\\"\\n        placement=\\\"right\\\"\\n    >\\n        <user-avatar [user]=\\\"user\\\" [border]=\\\"true\\\" [online]=\\\"true\\\" elementClass=\\\"mr-2\\\"></user-avatar>\\n        <ng-container *ngTemplateOutlet=\\\"profileTooltip\\\"></ng-container>\\n        <ng-template #profileTooltip>\\n            <div>\\n                <div class=\\\"e2e-profile-name\\\">\\n                    {{ user.name }}\\n                </div>\\n                <span class=\\\"text-primary\\\"\\n                    >{{ currentBalance$ | async | amount: user.preferredCurrency.decimalPlaces }} {{ user.preferredCurrency.code }}</span\\n                >\\n            </div>\\n        </ng-template>\\n        <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faAngleDown\\\" [rotate]=\\\"isOpen ? 180 : undefined\\\" class=\\\"ml-auto\\\"></fa-icon>\\n    </a>\\n    <div class=\\\"list-group\\\" [@toggleBalances]=\\\"isOpen\\\">\\n        <a\\n            href\\n            class=\\\"list-group-item list-group-item-action\\\"\\n            *ngFor=\\\"let wallet of wallets$ | async\\\"\\n            (click)=\\\"changePreferredCurrency(wallet.currency); $event.preventDefault()\\\"\\n        >\\n            <span class=\\\"text-white\\\">{{ wallet.availableBalance | amount: wallet.currency?.decimalPlaces }}</span> {{ wallet.currency?.code }}\\n        </a>\\n    </div>\\n</ng-container>\\n\";","import { Component, Input } from '@angular/core'\nimport { faCheckCircle, faSpinner, faTimesCircle } from '@fortawesome/pro-light-svg-icons'\nimport { File } from '../api-interfaces'\nimport { toStartCase } from '../common.mixin'\n\n@Component({\n    selector: 'file-item',\n    templateUrl: 'file-item.component.html',\n})\nexport class FileItemComponent {\n    @Input()\n    public file: File\n    @Input()\n    public canView = true\n    public faSpinner = faSpinner\n    public faTimesCircle = faTimesCircle\n    public faCheckCircle = faCheckCircle\n    public toStartCase = toStartCase\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ title }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body e2e-confirmation-modal\\\">\\n    <div class=\\\"media align-items-center\\\" [ngClass]=\\\"{ 'mb-3': input }\\\">\\n        <fa-icon class=\\\"mt-1 mr-3\\\" [ngClass]=\\\"'text-' + type\\\" [icon]=\\\"icon\\\" size=\\\"2x\\\"></fa-icon>\\n        <div class=\\\"media-body\\\" [innerHtml]=\\\"text\\\"></div>\\n    </div>\\n    <form #inputForm=\\\"ngForm\\\" class=\\\"form-validation\\\" [ngClass]=\\\"{ 'ng-submitted': submitted }\\\" *ngIf=\\\"input\\\" novalidate>\\n        <ng-container *ngIf=\\\"input === 'text'\\\">\\n            <label class=\\\"text-body\\\" for=\\\"input\\\" *ngIf=\\\"inputLabel\\\">{{ inputLabel }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"input\\\"\\n                name=\\\"input\\\"\\n                [(ngModel)]=\\\"inputValue\\\"\\n                #inputText=\\\"ngModel\\\"\\n                [customValidator]=\\\"inputValidator\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"inputText.invalid && (submitted || inputText.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"inputText?.errors?.customError\\\">{{ inputValidator(inputValue) }}</div>\\n            </div>\\n        </ng-container>\\n    </form>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn mr-2 e2e-confirmation-modal-confirm-btn\\\" [ngClass]=\\\"'btn-' + confirmClass\\\" (click)=\\\"confirm()\\\">\\n        {{ confirmText }}\\n    </button>\\n    <button\\n        *ngIf=\\\"showCancel\\\"\\n        type=\\\"button\\\"\\n        class=\\\"btn e2e-confirmation-modal-cancel-btn\\\"\\n        [ngClass]=\\\"'btn-' + cancelClass\\\"\\n        (click)=\\\"activeModal.close(false)\\\"\\n    >\\n        {{ cancelText }}\\n    </button>\\n</div>\\n\";","import { Component, Input, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { faUnlockAlt } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { capitalize } from 'lodash'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, finalize } from 'rxjs/operators'\nimport { SessionService, TokenScope, User } from '../services/session.service'\nimport { TokenService } from '../services/token.service'\n\n@Component({\n    selector: 'confirm-password-modal',\n    templateUrl: 'confirm-password.modal.html',\n})\nexport class ConfirmPasswordModalComponent implements OnInit {\n    @ViewChild('passwordForm', { static: true })\n    public passwordForm: NgForm\n    public password: string | undefined\n    public alert: string | undefined\n    @Input()\n    public scope: TokenScope\n    public twoFactorCode?: string | undefined\n    public showTwoFactorForm = false\n    public isLoading = false\n    public faUnlockAlt = faUnlockAlt\n\n    constructor(public modal: NgbActiveModal, private tokenService: TokenService, private session: SessionService) {}\n\n    public ngOnInit(): void {\n        // don't ask for PW for users which use twoFactor auth\n        if (this.session.user.twoFactor) {\n            this.showTwoFactorForm = true\n        }\n    }\n\n    public canSubmit(): boolean {\n        return !this.isLoading && !!this.passwordForm.valid\n    }\n\n    public grantTokenScope(): Observable<User> {\n        this.isLoading = true\n        return this.tokenService\n            .refresh({\n                password: this.session.user.twoFactor ? undefined : this.password,\n                scopes: Array.from(new Set([...this.session.getTokenScopes(), this.scope])),\n                twoFactorCode: this.twoFactorCode,\n            })\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                }),\n                catchError(error => {\n                    if (error.name === 'Require2FACodeError') {\n                        this.showTwoFactorForm = true\n                        this.alert = undefined\n                    } else {\n                        this.alert = capitalize(\n                            error.name === 'WrongCredentialsError'\n                                ? 'The password you entered was not correct'\n                                : error.message\n                        )\n                    }\n                    return throwError(error)\n                })\n            )\n    }\n\n    public submit(): void {\n        this.grantTokenScope().subscribe(response => this.modal.close(response))\n    }\n\n    public reset(): void {\n        this.isLoading = false\n        this.password = undefined\n        this.twoFactorCode = undefined\n        this.alert = undefined\n        if (this.passwordForm) {\n            this.passwordForm.resetForm()\n        }\n    }\n}\n","export default \"<nav class=\\\"navbar navbar-dashboard px-0 e2e-header\\\">\\n    <div [ngClass]=\\\"router.isActive('/admin', false) ? 'container-fluid' : 'container'\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li class=\\\"nav-item d-flex align-items-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent mr-1 d-lg-none\\\" (click)=\\\"openMobileNav()\\\">\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faBars\\\"></fa-icon>\\n                </button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent mr-1 d-none d-lg-block\\\" (click)=\\\"toggleSidebar()\\\">\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faBars\\\"></fa-icon>\\n                </button>\\n            </li>\\n            <li class=\\\"nav-item d-none d-lg-flex align-items-center\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" [routerLink]=\\\"['/transactions']\\\">\\n                    <fa-icon class=\\\"mr-1\\\" [fixedWidth]=\\\"true\\\" [icon]=\\\"faSearch\\\"></fa-icon> {{ 'header.search' | translate }}\\n                </button>\\n            </li>\\n        </ul>\\n        <ul class=\\\"nav navbar-nav\\\" *ngIf=\\\"session.userStream | async; let user\\\">\\n            <li class=\\\"nav-item d-flex align-items-center\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" ngbDropdownToggle>\\n                    <span>{{ translate.currentLang | uppercase }}</span>\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                </button>\\n                <div class=\\\"dropdown-menu-right\\\" ngbDropdownMenu>\\n                    <button *ngFor=\\\"let lang of languages\\\" ngbDropdownItem (click)=\\\"changeLanguage(lang)\\\">\\n                        <span>{{ getCountryEmoji(lang) }}&nbsp;</span> {{ mapCountryName(lang) }}\\n                    </button>\\n                </div>\\n            </li>\\n            <ng-container *ngIf=\\\"!router.isActive('/admin', false)\\\">\\n                <li class=\\\"nav-item d-flex align-items-center e2e-header-mailbox\\\">\\n                    <header-mailbox></header-mailbox>\\n                </li>\\n                <li class=\\\"nav-item d-flex align-items-center e2e-header-notifications\\\">\\n                    <header-notifications></header-notifications>\\n                </li>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"router.isActive('/admin', false)\\\">\\n                <li class=\\\"nav-item d-none d-lg-flex align-items-center\\\">\\n                    <online-users-count></online-users-count>\\n                </li>\\n            </ng-container>\\n            <li class=\\\"nav-item d-none d-lg-flex align-items-center\\\">\\n                <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-transparent\\\"\\n                    placement=\\\"left\\\"\\n                    [ngbTooltip]=\\\"'common.reset-session-timeout' | translate\\\"\\n                    (click)=\\\"logoutTimerService.reset()\\\"\\n                >\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faClock\\\" class=\\\"mr-1\\\"></fa-icon>\\n                    <span class=\\\"font-sm font-weight-bold\\\">\\n                        {{ sessionTimeLeft$ | async }}\\n                    </span>\\n                </button>\\n            </li>\\n            <li class=\\\"nav-item d-flex align-items-center e2e-account-button\\\" ngbDropdown placement=\\\"bottom-right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\" ngbDropdownToggle>\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faUserCircle\\\" class=\\\"mr-1\\\"></fa-icon>\\n                    <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"faAngleDown\\\"></fa-icon>\\n                </button>\\n                <div class=\\\"dropdown-menu-lg dropdown-menu-right\\\" ngbDropdownMenu>\\n                    <a class=\\\"dropdown-item d-flex flex-column text-center py-3\\\" [routerLink]=\\\"['/account/profile']\\\">\\n                        <div>\\n                            <user-avatar [user]=\\\"user\\\" size=\\\"md\\\" elementClass=\\\"mb-2\\\"></user-avatar>\\n                        </div>\\n                        <div class=\\\"text-primary\\\">{{ user.fullname }}</div>\\n                        <div class=\\\"small text-body\\\">{{ user.email }}</div>\\n                    </a>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <a ngbDropdownItem [routerLink]=\\\"['/account/security']\\\">{{ 'header.change-password' | translate }}</a>\\n                    <a ngbDropdownItem [routerLink]=\\\"!router.isActive('/admin', false) ? ['/admin'] : ['/dashboard']\\\" *ngIf=\\\"user.role !== null\\\">{{\\n                        (!router.isActive('/admin', false) ? 'header.administration' : 'header.back-to-dashboard') | translate\\n                    }}</a>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <a ngbDropdownItem href (click)=\\\"logout(); $event.preventDefault()\\\">{{ 'header.logout' | translate }}</a>\\n                </div>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'sentenceCase' })\nexport class SentenceCasePipe implements PipeTransform {\n    public transform(value: any): string {\n        if (typeof value !== 'string') {\n            return value\n        }\n        return value.toLowerCase().replace(/(^\\s*\\w|[\\.\\!\\?]\\s*\\w)/g, c => c.toUpperCase())\n    }\n}\n","export default \"<address [ngClass]=\\\"theme === 'input' ? 'address-input' : theme\\\">\\n    <ng-container *ngIf=\\\"user\\\"> {{ user.name }}<br /> </ng-container>\\n    <ng-container *ngIf=\\\"address; else noAddress\\\">\\n        {{ address.addressLine1 }}<br />\\n        <ng-container *ngIf=\\\"address.addressLine2\\\"> {{ address.addressLine2 }}<br /> </ng-container>\\n        <!-- US format -->\\n        {{ address.city ? address.city + ', ' : '' }} {{ address.state }} {{ address.zipCode }}\\n        <ng-container *ngIf=\\\"address.country\\\">\\n            <br />\\n            {{ countryMap[address.country]?.name }}\\n        </ng-container>\\n    </ng-container>\\n    <ng-template #noAddress>{{ theme === 'input' ? '-' : '' }}</ng-template>\\n</address>\\n\";","import { Injectable } from '@angular/core'\nimport { Meta } from '@angular/platform-browser'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ViewportService {\n    public static readonly MINIMUM_WIDTH = 375\n    private originalViewport: string | undefined\n\n    constructor(private meta: Meta) {}\n\n    public update(): void {\n        // Ensures a minimum viewport width\n        const metaEl = this.meta.getTag('name = \"viewport\"')\n        if (!metaEl) {\n            return\n        }\n        if (window.outerWidth < ViewportService.MINIMUM_WIDTH) {\n            if (!this.originalViewport) {\n                this.originalViewport = metaEl.content\n                metaEl.content = `width=${ViewportService.MINIMUM_WIDTH}, user-scalable=0`\n            }\n        } else {\n            if (this.originalViewport) {\n                metaEl.content = this.originalViewport\n                this.originalViewport = undefined\n            }\n        }\n    }\n}\n","export default \"<ng-select\\n    [ngClass]=\\\"{ 'ng-select-lg': isLarge }\\\"\\n    name=\\\"currency-select\\\"\\n    [placeholder]=\\\"placeholder\\\"\\n    [(ngModel)]=\\\"currency\\\"\\n    [items]=\\\"balances$ | async\\\"\\n    [clearable]=\\\"false\\\"\\n    [searchable]=\\\"false\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [required]=\\\"required\\\"\\n    (change)=\\\"currencyChange.emit($event)\\\"\\n    [compareWith]=\\\"compareCurrencies\\\"\\n    #currencyInput=\\\"ngModel\\\"\\n>\\n    <ng-template ng-label-tmp let-item=\\\"item\\\">\\n        <b class=\\\"mr-1\\\">\\n            <ng-container [ngSwitch]=\\\"item.code\\\">\\n                <ng-container *ngSwitchCase=\\\"'AU'\\\"> Gold </ng-container>\\n                <ng-container *ngSwitchCase=\\\"'AG'\\\"> Silver </ng-container>\\n                <ng-container *ngSwitchDefault>{{ useFullName ? item.name : item.code }}</ng-container>\\n            </ng-container>\\n        </b>\\n        <span class=\\\"small text-muted\\\">\\n            <ng-container *ngIf=\\\"!(appName === 'sgpmx' && salesProceeds); else sgpmxLabel\\\">\\n                {{ item.balance | amount: item.decimalPlaces }} {{ item.code }}\\n                <ng-container *ngIf=\\\"['crypto', 'metal'].includes(item.type) && !item.code.includes('USD')\\\">\\n                    (≈ {{ item.usdValue | amount: 2 }} USD)\\n                </ng-container>\\n            </ng-container>\\n            <ng-template #sgpmxLabel>{{ item.salesProceeds | amount: 2 }} {{ item.code }}</ng-template>\\n        </span>\\n    </ng-template>\\n    <ng-template ng-option-tmp let-item=\\\"item\\\">\\n        <ng-container [ngSwitch]=\\\"item.code\\\">\\n            <ng-container *ngSwitchCase=\\\"'AU'\\\"> Gold </ng-container>\\n            <ng-container *ngSwitchCase=\\\"'AG'\\\"> Silver </ng-container>\\n            <ng-container *ngSwitchDefault>{{ useFullName ? item.name : item.code }}</ng-container>\\n        </ng-container>\\n        <span class=\\\"float-right small text-muted\\\">\\n            <ng-container *ngIf=\\\"!(appName === 'sgpmx' && salesProceeds); else sgpmxOption\\\">\\n                {{ item.balance | amount: item.decimalPlaces }} {{ item.code }}\\n                <ng-container *ngIf=\\\"['crypto', 'metal'].includes(item.type) && !item.code.includes('USD')\\\">\\n                    (≈ {{ item.usdValue | amount: 2 }} USD)\\n                </ng-container>\\n            </ng-container>\\n            <ng-template #sgpmxOption>{{ item.salesProceeds | amount: 2 }} {{ item.code }}</ng-template>\\n        </span>\\n    </ng-template>\\n</ng-select>\\n\";","import { Injectable } from '@angular/core'\n\nexport enum MobileNavLayout {\n    HIDDEN = '',\n    VISIBLE = 'sidebar-show',\n}\n\nexport enum SidebarLayout {\n    DEFAULT = '',\n    TOGGLED = 'sidebar-toggled',\n}\n\n@Injectable()\nexport class MenuService {\n    public mobileNav: MobileNavLayout = MobileNavLayout.HIDDEN\n\n    public sidebar: SidebarLayout = SidebarLayout.DEFAULT\n\n    public get style(): string {\n        return [this.mobileNav, this.sidebar].join(' ')\n    }\n}\n","export default \"<form #beneficiaryDetailsForm=\\\"ngForm\\\" [ngClass]=\\\"{ 'ng-submitted': submitted }\\\" class=\\\"form-validation\\\" novalidate>\\n    <div class=\\\"pt-2 mb-1\\\"></div>\\n    <div class=\\\"d-flex align-items-center\\\">\\n        <h6 class=\\\"text-primary pr-1\\\">{{ 'common.beneficiary' | translate }}</h6>\\n        <hr class=\\\"w-100 m-0 pb-2\\\" />\\n    </div>\\n    <ng-container *ngIf=\\\"beneficiary.method !== 'crypto'\\\">\\n        <div class=\\\"form-group\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"accountHolder\\\">{{ 'common.account-name' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"accountHolder\\\"\\n                name=\\\"accountHolder\\\"\\n                [(ngModel)]=\\\"beneficiary.accountHolder\\\"\\n                emptyToNull\\n                #accountHolder=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                required\\n            />\\n            <div *ngIf=\\\"accountHolder.invalid && (submitted || accountHolder.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"accountHolder?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n    </ng-container>\\n    <div class=\\\"form-group\\\">\\n        <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"accountNumber\\\">\\n            {{ getAccountNumberLabel() }}\\n        </label>\\n        <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n            id=\\\"accountNumber\\\"\\n            name=\\\"accountNumber\\\"\\n            [(ngModel)]=\\\"beneficiary.accountNumber\\\"\\n            emptyToNull\\n            #accountNumber=\\\"ngModel\\\"\\n            [disabled]=\\\"disabled\\\"\\n            required\\n        />\\n        <div *ngIf=\\\"accountNumber.invalid && (submitted || accountNumber.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"accountNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"beneficiary.method === 'crypto'\\\">\\n        <div class=\\\"form-group\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"accountHolder\\\">\\n                {{ 'common.wallet-label' | translate }}\\n                <small class=\\\"text-muted\\\">({{ 'common.optional' | translate }})</small>\\n            </label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"accountHolder\\\"\\n                name=\\\"accountHolder\\\"\\n                [(ngModel)]=\\\"beneficiary.accountHolder\\\"\\n                emptyToNull\\n                #accountHolder=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n            />\\n        </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"beneficiary.method === 'swift' || beneficiary.method === 'local'\\\">\\n        <div class=\\\"pt-2 mb-1\\\"></div>\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'beneficiary-details-form.beneficiary-address' | translate | titlecase }}</h6>\\n            <hr class=\\\"w-100 m-0 pb-2\\\" />\\n        </div>\\n        <address-form\\n            [(address)]=\\\"beneficiary.accountHolderAddress\\\"\\n            [isLarge]=\\\"isLarge\\\"\\n            [requireAll]=\\\"requireAll\\\"\\n            [disabled]=\\\"disabled\\\"\\n            prefix=\\\"accountHolder\\\"\\n            #accountHolderAddressForm\\n        ></address-form>\\n        <div class=\\\"pt-2 mb-1\\\"></div>\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'common.beneficiary-bank' | translate }}</h6>\\n            <hr class=\\\"w-100 m-0 pb-2\\\" />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"bankName\\\">{{ 'common.name' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"bankName\\\"\\n                name=\\\"bankName\\\"\\n                [(ngModel)]=\\\"beneficiary.bankName\\\"\\n                emptyToNull\\n                #bankName=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                required\\n            />\\n            <div *ngIf=\\\"bankName.invalid && (submitted || bankName.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"bankName?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"showSwift()\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"bankSwiftCode\\\">\\n                {{ getSwiftLabel() }} <small class=\\\"text-muted\\\" *ngIf=\\\"!isIntermediateBankCollapsed\\\">({{ 'common.optional' | translate }})</small>\\n            </label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"bankSwiftCode\\\"\\n                name=\\\"bankSwiftCode\\\"\\n                [(ngModel)]=\\\"beneficiary.bankSwiftCode\\\"\\n                emptyToNull\\n                #bankSwiftCode=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [required]=\\\"isIntermediateBankCollapsed\\\"\\n            />\\n            <div *ngIf=\\\"bankSwiftCode.invalid && (submitted || bankSwiftCode.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"bankSwiftCode?.errors?.required\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"showRoutingNumber()\\\">\\n            <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"routingNumber\\\">{{ getRoutingNumberLabel() }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                id=\\\"routingNumber\\\"\\n                name=\\\"routingNumber\\\"\\n                [(ngModel)]=\\\"beneficiary.routingNumber\\\"\\n                emptyToNull\\n                #routingNumber=\\\"ngModel\\\"\\n                [disabled]=\\\"disabled\\\"\\n                required\\n            />\\n            <div *ngIf=\\\"routingNumber.invalid && (submitted || routingNumber.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"routingNumber?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"pt-2 mb-1\\\"></div>\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'beneficiary-details-form.beneficiary-bank-address' | translate }}</h6>\\n            <hr class=\\\"w-100 m-0 pb-2\\\" />\\n        </div>\\n        <address-form\\n            [(address)]=\\\"beneficiary.bankAddress\\\"\\n            [isLarge]=\\\"isLarge\\\"\\n            [requireAll]=\\\"requireAll\\\"\\n            [disabled]=\\\"disabled\\\"\\n            prefix=\\\"bank\\\"\\n            #bankAddressForm\\n        ></address-form>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"beneficiary.method === 'swift'\\\">\\n            <a\\n                href\\n                class=\\\"d-block\\\"\\n                (click)=\\\"\\n                    isIntermediateBankCollapsed = !isIntermediateBankCollapsed;\\n                    beneficiary.intermediateBankName = null;\\n                    beneficiary.intermediateBankSwiftCode = null;\\n                    beneficiary.intermediateBankAddress = null;\\n                    $event.preventDefault()\\n                \\\"\\n                >{{ isIntermediateBankCollapsed ? '+ ' + ('common.add' | translate) : '-' + ('common.remove' | translate) }}\\n                {{ 'common.intermediate-bank' | translate | lowercase }}</a\\n            >\\n        </div>\\n        <ng-container *ngIf=\\\"!isIntermediateBankCollapsed\\\">\\n            <div class=\\\"pt-2 mb-1\\\"></div>\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'common.intermediate-bank' | translate }}</h6>\\n                <hr class=\\\"w-100 m-0 pb-2\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"intermediateBankName\\\">{{ 'common.name' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                    id=\\\"intermediateBankName\\\"\\n                    name=\\\"intermediateBankName\\\"\\n                    [(ngModel)]=\\\"beneficiary.intermediateBankName\\\"\\n                    emptyToNull\\n                    #intermediateBankName=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    required\\n                />\\n                <div *ngIf=\\\"intermediateBankName.invalid && (submitted || intermediateBankName.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"intermediateBankName?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"intermediateBankSwiftCode\\\">{{ 'common.swift-code' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                    id=\\\"intermediateBankSwiftCode\\\"\\n                    name=\\\"intermediateBankSwiftCode\\\"\\n                    [(ngModel)]=\\\"beneficiary.intermediateBankSwiftCode\\\"\\n                    emptyToNull\\n                    #intermediateBankSwiftCode=\\\"ngModel\\\"\\n                    [disabled]=\\\"disabled\\\"\\n                    required\\n                />\\n                <div *ngIf=\\\"intermediateBankSwiftCode.invalid && (submitted || intermediateBankSwiftCode.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"intermediateBankSwiftCode?.errors?.required\\\">\\n                        {{ 'common.this-is-required' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"pt-2 mb-1\\\"></div>\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <h6 class=\\\"text-primary pr-1 text-nowrap\\\">{{ 'common.intermediate-bank' | translate }} {{ 'common.address' | translate }}</h6>\\n                <hr class=\\\"w-100 m-0 pb-2\\\" />\\n            </div>\\n            <address-form\\n                [(address)]=\\\"beneficiary.intermediateBankAddress\\\"\\n                [isLarge]=\\\"isLarge\\\"\\n                [requireAll]=\\\"requireAll\\\"\\n                [disabled]=\\\"disabled\\\"\\n                prefix=\\\"intermediateBank\\\"\\n                #intermediateBankAddressForm\\n            ></address-form>\\n        </ng-container>\\n    </ng-container>\\n</form>\\n\";","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row no-gutters\\\">\\n        <div class=\\\"col-lg-12 footer-left\\\">\\n            <ng-container *ngIf=\\\"showCopyRight()\\\"> &copy; {{ year }} Aerapass Ltd. - All rights reserved. </ng-container>\\n        </div>\\n        <div class=\\\"col-lg-12 footer-right\\\">\\n            <ul>\\n                <li>\\n                    <a [routerLink]=\\\"['/fees']\\\" class=\\\"text-muted\\\">{{ 'common.fee-schedule' | translate | titlecase }}</a>\\n                </li>\\n                <li *ngIf=\\\"helpCenterUrl\\\">\\n                    <a [href]=\\\"helpCenterUrl\\\" class=\\\"text-muted\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">{{ 'footer.help-center' | translate }}</a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/terms']\\\" class=\\\"text-muted\\\">{{ 'common.terms-conditions' | translate }}</a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/privacy']\\\" class=\\\"text-muted\\\">{{ 'common.data-privacy-notice' | translate | titlecase }}</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component } from '@angular/core'\nimport { environment } from 'src/environments/environment'\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: 'footer.component.html',\n})\nexport class FooterComponent {\n    public year: number = new Date().getFullYear()\n    public displayName = environment.displayName\n    public helpCenterUrl = window.HELP_CENTER_URL\n\n    public showCopyRight(): boolean {\n        switch (environment.appName) {\n            case 'etransfer':\n                return false\n            default:\n                return true\n        }\n    }\n}\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { Component, Input } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { environment } from 'src/environments/environment'\nimport { IUser } from '../api-interfaces'\n\n@Component({\n    selector: 'user-display',\n    templateUrl: 'user.component.html',\n})\nexport class UserComponent {\n    public appName = environment.appName\n    public displayName = environment.displayName\n    @Input()\n    public user: IUser\n    @Input()\n    public displayAccountNumber = false\n    @Input()\n    public displayBadges = true\n    @Input()\n    public disableLink = false\n    @Input()\n    public maxCharacters = 30\n\n    constructor(private router: Router) {}\n\n    public handleClick(event: MouseEvent, userId: string): void {\n        event.preventDefault()\n\n        if (!this.disableLink) {\n            this.router.navigate(['/admin/accounts/users', userId])\n        }\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { BehaviorSubject, interval, merge, Observable, of } from 'rxjs'\nimport { tap, mergeMap, filter } from 'rxjs/operators'\nimport { AlertService } from 'src/app/common/services/alert.service'\nimport { LogoutService } from 'src/app/common/services/logout.service'\nimport { SessionService } from 'src/app/common/services/session.service'\nimport { ToastrService } from 'src/app/common/services/toastr.service'\nimport { TokenService } from 'src/app/common/services/token.service'\nimport { LogoutTimerModalComponent } from './logout-timer-modal.component'\n\n@Injectable()\nexport class LogoutTimerService {\n    public leftInMinutes$ = new BehaviorSubject<number>(-1)\n    public expiryTime$: Observable<number>\n\n    constructor(\n        public session: SessionService,\n        private logout: LogoutService,\n        private alerts: AlertService,\n        private tokenService: TokenService,\n        private toastr: ToastrService,\n        private ngbModal: NgbModal,\n        public translate: TranslateService\n    ) {}\n\n    public init(): void {\n        let modal: NgbModalRef | undefined\n        merge(of(undefined), this.session.tokenChangeEvent, interval(10000))\n            .pipe(\n                filter(() => this.session.hasValidRefreshToken()),\n                tap(() => {\n                    const secondsLeft = this.session.getExpiryTimeInSeconds()\n                    this.leftInMinutes$.next(Math.ceil(secondsLeft / 60))\n                    if (secondsLeft <= 60 && !modal) {\n                        modal = this.ngbModal.open(LogoutTimerModalComponent, {\n                            windowClass: 'modal-primary',\n                        })\n                        const handler = () => (modal = undefined)\n                        modal.result.then(handler, handler)\n                    }\n                }),\n                filter(() => this.session.getExpiryTimeInSeconds() < 15),\n                mergeMap(() => this.logout.logout())\n            )\n            .subscribe(() => {\n                this.alerts.add({ message: this.translate.instant('common.your-session-expired'), severity: 'warning' })\n            })\n    }\n\n    public reset(): void {\n        this.tokenService.refresh().subscribe(() => {\n            this.toastr.success(this.translate.instant('logout-timer.your-session-has-been-refreshed'))\n        })\n    }\n}\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { AddressFormComponent } from '../../address-form/address-form.component'\nimport { IBeneficiary, ICurrency } from '../../api-interfaces'\nimport { countriesSortedByName } from '../../countries'\n\n@Component({\n    selector: 'beneficiary-details-form',\n    templateUrl: 'beneficiary-details-form.component.html',\n})\nexport class BeneficiaryDetailsFormComponent implements OnInit, OnDestroy {\n    @Input()\n    public beneficiary: IBeneficiary\n    @Input()\n    public currency?: ICurrency\n    @Input()\n    public isLarge = false\n    @Input()\n    public disabled = false\n    @Input()\n    public requireAll = true\n    @ViewChild('beneficiaryDetailsForm')\n    public form: NgForm\n    @ViewChild('accountHolderAddressForm')\n    public accountHolderAddressForm: AddressFormComponent\n    @ViewChild('bankAddressForm')\n    public bankAddressForm: AddressFormComponent\n    @ViewChild('intermediateBankAddressForm')\n    public intermediateBankAddressForm: AddressFormComponent\n    public countriesSortedByName = countriesSortedByName\n    public isIntermediateBankCollapsed = true\n    public submitted = false\n    public subscriptions = new Subscription()\n\n    constructor(public translate: TranslateService) {}\n\n    public ngOnInit(): void {\n        if (this.beneficiary.intermediateBankAddress) {\n            this.isIntermediateBankCollapsed = false\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public submit(): void {\n        this.submitted = true\n        if (this.accountHolderAddressForm) {\n            this.accountHolderAddressForm.submit()\n        }\n        if (this.bankAddressForm) {\n            this.bankAddressForm.submit()\n        }\n        if (this.intermediateBankAddressForm) {\n            this.intermediateBankAddressForm.submit()\n        }\n        Object.assign(this.beneficiary, {\n            // Remove intermediateBank if collapsed\n            intermediateBankName: this.isIntermediateBankCollapsed ? null : this.beneficiary.intermediateBankName,\n            intermediateBankSwiftCode: this.isIntermediateBankCollapsed\n                ? null\n                : this.beneficiary.intermediateBankSwiftCode,\n            intermediateBankAddress: this.isIntermediateBankCollapsed ? null : this.beneficiary.intermediateBankAddress,\n        })\n    }\n\n    public isValid(): boolean {\n        let valid = !!this.form.valid\n        if (this.accountHolderAddressForm) {\n            valid = valid && this.accountHolderAddressForm.isValid()\n        }\n        if (this.bankAddressForm) {\n            valid = valid && this.bankAddressForm.isValid()\n        }\n        if (this.intermediateBankAddressForm && !this.isIntermediateBankCollapsed) {\n            valid = valid && this.intermediateBankAddressForm.isValid()\n        }\n        return valid\n    }\n\n    public reset(): void {\n        this.submitted = false\n        this.form.reset()\n        if (this.accountHolderAddressForm) {\n            this.accountHolderAddressForm.form.reset()\n            this.accountHolderAddressForm.submitted = false\n        }\n        if (this.bankAddressForm) {\n            this.bankAddressForm.form.reset()\n            this.bankAddressForm.submitted = false\n        }\n        if (this.intermediateBankAddressForm) {\n            this.intermediateBankAddressForm.form.reset()\n            this.intermediateBankAddressForm.submitted = false\n        }\n    }\n\n    /** For local method branching */\n\n    public getAccountNumberLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.getCurrencyCode() === 'EUR') {\n                return 'IBAN'\n            }\n        }\n        if (this.beneficiary.method === 'crypto') {\n            return `${this.translate.instant('common.wallet-address')}`\n        }\n        return `${this.translate.instant('common.account-number')}`\n    }\n\n    public showSwift(): boolean {\n        return !(this.beneficiary.method === 'local' && this.getCurrencyCode() === 'USD')\n    }\n\n    public getSwiftLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.getCurrencyCode() === 'AUD') {\n                return 'BSB'\n            }\n            if (this.getCurrencyCode() === 'EUR') {\n                return 'BIC'\n            }\n            if (this.getCurrencyCode() === 'GBP') {\n                return 'Sort Code'\n            }\n        }\n        return 'SWIFT Code'\n    }\n\n    public showRoutingNumber(): boolean {\n        return this.beneficiary.method === 'local' && ['AUD', 'CAD', 'USD'].includes(this.getCurrencyCode())\n    }\n\n    public getRoutingNumberLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.getCurrencyCode() === 'AUD') {\n                return 'Pay ID'\n            }\n            if (this.getCurrencyCode() === 'CAD') {\n                return 'Transit Code'\n            }\n        }\n        return 'Routing Number'\n    }\n\n    private getCurrencyCode(): string {\n        return this.currency?.code || this.beneficiary.currency?.code\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { faCaretDown } from '@fortawesome/pro-solid-svg-icons'\nimport { xor } from 'lodash'\nimport { forkJoin, Subject, Subscription } from 'rxjs'\nimport { switchMap, take } from 'rxjs/operators'\nimport { CurrenciesQuery } from '../../store/currencies/currencies.query'\nimport { IBeneficiary, ICurrency, IFee, IUser } from '../api-interfaces'\n\n@Component({\n    selector: 'currency-select-tab',\n    templateUrl: 'currency-select-tab.component.html',\n    styleUrls: ['currency-select-tab.component.scss'],\n})\nexport class CurrencySelectTabComponent implements OnInit {\n    @Input()\n    public currency: ICurrency\n    @Output()\n    public readonly currencyChange = new EventEmitter<ICurrency>()\n    @Input()\n    public user: IUser | null\n    @Input()\n    public useShortCurrencyNames = false\n    @Input()\n    public moreButtonOptions: { text: string; hasCaret: boolean } = { text: '+', hasCaret: false }\n    @Input()\n    public type: 'deposit-instructions' | 'fees' = 'fees'\n    public usd: ICurrency\n    public setCurrencies: ICurrency[] = []\n    public unsetCurrencies: ICurrency[] = []\n\n    public faCaretDown = faCaretDown\n\n    private fetchEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(private currenciesQuery: CurrenciesQuery, private http: HttpClient) {}\n\n    public ngOnInit(): void {\n        this.currenciesQuery\n            .selectEntity('USD')\n            .pipe(take(1))\n            .subscribe(usd => (this.usd = usd!))\n\n        this.subscriptions.add(\n            this.fetchEvent\n                .pipe(\n                    switchMap(() =>\n                        forkJoin<ICurrency[], (IFee | IBeneficiary)[]>([\n                            this.currenciesQuery\n                                .selectAll({\n                                    filterBy: [\n                                        entity => {\n                                            switch (this.type) {\n                                                case 'deposit-instructions':\n                                                    return entity.code !== 'USD' && entity.type === 'fiat'\n                                                default:\n                                                    return entity.code !== 'USD'\n                                            }\n                                        },\n                                    ],\n                                })\n                                .pipe(take(1)),\n                            this.type === 'deposit-instructions'\n                                ? this.http.get<IBeneficiary[]>(`/deposit-instructions`, {\n                                      params: this.user ? { userId: this.user.id } : {},\n                                  })\n                                : this.http.get<IFee[]>(`/fees`, { params: this.user ? { userId: this.user.id } : {} }),\n                        ])\n                    )\n                )\n                .subscribe(([currencies, items]) => {\n                    this.setCurrencies = currencies.filter(currency =>\n                        items.find(item => item.currency.code === currency.code)\n                    )\n                    this.unsetCurrencies = xor(currencies, this.setCurrencies)\n                })\n        )\n        this.fetchEvent.next()\n    }\n\n    public selectCurrency(code: string): void {\n        this.subscribeCurrencyQuery(code)\n        this.refreshTabs()\n    }\n\n    public createTabSelectedCurrency(currency: ICurrency): void {\n        this.setCurrencies.push(currency)\n        this.unsetCurrencies = this.unsetCurrencies.filter(data => data !== currency)\n        this.subscribeCurrencyQuery(currency.code)\n    }\n\n    public isMoreTabActive(): boolean {\n        return this.unsetCurrencies.map(currency => currency.code).indexOf(this.currency.code) > -1\n    }\n\n    public refreshTabs(): void {\n        this.fetchEvent.next()\n    }\n\n    public getCurrencyName(currency: ICurrency | undefined): string {\n        if (!currency) {\n            return ''\n        }\n        return this.useShortCurrencyNames ? currency.code : `${currency.code} - ${currency.name}`\n    }\n\n    private subscribeCurrencyQuery(code: string) {\n        this.currenciesQuery\n            .selectEntity(code)\n            .pipe(take(1))\n            .subscribe(currency => {\n                this.currencyChange.next(currency)\n            })\n    }\n}\n","export default \"<ul class=\\\"nav nav-tabs b-b-0 fee-schedule-tabs\\\">\\n    <li class=\\\"nav-item\\\">\\n        <a\\n            class=\\\"nav-link clickable\\\"\\n            [ngClass]=\\\"{ active: currency?.code === usd?.code }\\\"\\n            (click)=\\\"selectCurrency(usd?.code); $event.preventDefault()\\\"\\n            >{{ getCurrencyName(usd) }}</a\\n        >\\n    </li>\\n    <li *ngFor=\\\"let item of setCurrencies\\\" class=\\\"nav-item\\\">\\n        <a\\n            class=\\\"nav-link clickable\\\"\\n            [ngClass]=\\\"{ active: currency?.code === item.code }\\\"\\n            (click)=\\\"selectCurrency(item.code); $event.preventDefault()\\\"\\n            >{{ getCurrencyName(item) | truncate: false:14 }}</a\\n        >\\n    </li>\\n    <li class=\\\"nav-item\\\" ngbDropdown container=\\\"body\\\" placement=\\\"bottom-left\\\" *ngIf=\\\"unsetCurrencies.length\\\">\\n        <a class=\\\"nav-link clickable\\\" [ngClass]=\\\"{ active: isMoreTabActive() }\\\" ngbDropdownToggle>\\n            {{ moreButtonOptions.text }}\\n            <fa-icon *ngIf=\\\"moreButtonOptions.hasCaret\\\" [icon]=\\\"faCaretDown\\\"></fa-icon>\\n        </a>\\n        <div ngbDropdownMenu>\\n            <div\\n                class=\\\"clickable\\\"\\n                ngbDropdownItem\\n                *ngFor=\\\"let item of unsetCurrencies\\\"\\n                (click)=\\\"createTabSelectedCurrency(item); $event.preventDefault()\\\"\\n            >\\n                {{ getCurrencyName(item) }}\\n            </div>\\n        </div>\\n    </li>\\n</ul>\\n\";","export default \"<iframe [src]=\\\"url | safeResourceUrl\\\" allowfullscreen></iframe>\\n\";","export default \"<a *ngIf=\\\"file.status === 'safe' && file.signedUrl && canView; else processing\\\" [href]=\\\"file.signedUrl\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">\\n    <div>{{ file.name }}</div>\\n</a>\\n<ng-template #processing>\\n    <div *ngIf=\\\"file.status === 'processing'; else infected\\\" class=\\\"text-warning\\\">\\n        {{ file.name }} <small>({{ 'common.scanning' | translate }})</small>\\n    </div>\\n</ng-template>\\n<ng-template #infected>\\n    <div *ngIf=\\\"file.status === 'infected'; else plain\\\" class=\\\"text-danger\\\">\\n        {{ file.name }} <small>({{ 'common.virus-found' | translate }})</small>\\n    </div>\\n</ng-template>\\n<ng-template #plain>\\n    <div class=\\\"text-primary\\\">{{ file.name }}</div>\\n</ng-template>\\n<small *ngIf=\\\"file.userFile; else alternativeInfo\\\" class=\\\"text-muted cursor\\\"\\n    >{{ file.size / 1024 / 1024 | number: '.2' }} MB / {{ file.userFile.type ? toStartCase(file.userFile.type) : 'Undeclared' }}</small\\n>\\n<ng-template #alternativeInfo>\\n    <small class=\\\"text-muted\\\">{{ file.size / 1024 / 1024 | number: '.2' }} MB</small>\\n</ng-template>\\n\";","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common.module'\nimport { NotificationComponent } from './notification.component'\n\n@NgModule({\n    declarations: [NotificationComponent],\n    exports: [NotificationComponent],\n    imports: [CommonModule],\n})\nexport class NotificationModule {}\n","export default \"<div class=\\\"table-responsive\\\">\\n    <ul *ngIf=\\\"user.type === 'business'\\\" class=\\\"nav nav-pills nav-fill mb-2\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a href class=\\\"nav-link\\\" [ngClass]=\\\"{ active: currentTab === 'business' }\\\" (click)=\\\"currentTab = 'business'; $event.preventDefault()\\\">\\n                {{ 'common.business' | translate }}\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a href class=\\\"nav-link\\\" [ngClass]=\\\"{ active: currentTab === 'manager' }\\\" (click)=\\\"currentTab = 'manager'; $event.preventDefault()\\\">\\n                {{ 'common.manager' | translate }}\\n            </a>\\n        </li>\\n    </ul>\\n    <ng-container *ngIf=\\\"user.type === 'personal' || (user.type === 'business' && currentTab === 'manager'); else business\\\">\\n        <table *ngIf=\\\"details\\\" class=\\\"table table-striped table-bordered\\\">\\n            <tbody>\\n                <tr *ngFor=\\\"let property of fields\\\">\\n                    <td class=\\\"text-gray\\\">{{ getProperty(property) }}</td>\\n                    <td>\\n                        <ng-container *ngIf=\\\"property !== 'address'; else address\\\">\\n                            {{ getValue(property) }}\\n                        </ng-container>\\n                        <ng-template #address>\\n                            <postal-address [address]=\\\"details.address\\\"></postal-address>\\n                        </ng-template>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </ng-container>\\n    <ng-template #business>\\n        <table *ngIf=\\\"businessDetails\\\" class=\\\"table table-striped table-bordered\\\">\\n            <tbody>\\n                <tr *ngFor=\\\"let property of businessFields\\\">\\n                    <td class=\\\"text-gray\\\">{{ getProperty(property) }}</td>\\n                    <td>\\n                        <ng-container *ngIf=\\\"!['address', 'businessAddress'].includes(property)\\\">\\n                            {{ getBusinessValue(property) }}\\n                        </ng-container>\\n                        <postal-address *ngIf=\\\"property === 'address'\\\" [address]=\\\"businessDetails.address\\\"></postal-address>\\n                        <postal-address *ngIf=\\\"property === 'businessAddress'\\\" [address]=\\\"businessDetails.businessAddress\\\"></postal-address>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </ng-template>\\n</div>\\n\";","export default \"<ngb-progressbar [type]=\\\"color\\\" [value]=\\\"progress\\\" height=\\\"0.4rem\\\"></ngb-progressbar>\\n\";","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: MinValidatorDirective,\n            multi: true,\n        },\n    ],\n})\nexport class MinValidatorDirective implements Validator, OnChanges {\n    @Input()\n    public min: number\n    private onChanges: () => void\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.min) {\n            this.min = changes.min.currentValue\n            if (this.onChanges) {\n                this.onChanges()\n            }\n        }\n    }\n\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (this.min === undefined || this.min === null) {\n            return null\n        }\n        const required = Validators.required(control)\n        if (required !== null) {\n            return null\n        }\n        const v = +control.value\n        return v >= +this.min ? null : { actualValue: v, requiredValue: +this.min, min: true }\n    }\n\n    public registerOnValidatorChange(fn: () => void): void {\n        this.onChanges = fn\n    }\n}\n","export default \"<span [ngClass]=\\\"{ 'text-line-through': user.status !== 'pending' }\\\">\\n    {{ 'common.remember-email' | translate }}\\n    <a href (click)=\\\"$event.preventDefault(); resend()\\\" *ngIf=\\\"user.status === 'pending' && !resendTriggered\\\">{{ 'common.resend' | translate }}</a>\\n</span>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { ComponentFactoryResolver, Injectable, Type, ViewContainerRef, ViewRef } from '@angular/core'\nimport { interval, merge, of } from 'rxjs'\nimport { catchError, map, switchMap } from 'rxjs/operators'\nimport { Setting } from '../../common/api-interfaces'\n\n@Injectable()\nexport class StatusMessageService {\n    public message: string | undefined\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, private http: HttpClient) {}\n\n    public initializeListener(viewContainerRef: ViewContainerRef, statusMessageComponent: Type<any>): void {\n        let insertedViewRef: ViewRef | undefined\n        merge(of(undefined), interval(120 * 1000))\n            .pipe(\n                switchMap(() =>\n                    this.http\n                        .get<Setting>('/settings/status-message', {\n                            headers: { 'X-Ignore-Error-Handling': 'true' },\n                        })\n                        .pipe(\n                            // ignore errors\n                            catchError(() => []),\n                            map(setting => setting && (setting.value as string))\n                        )\n                )\n            )\n            .subscribe(message => {\n                if (this.message === message) {\n                    // no change in status\n                    return\n                }\n                const wasEmpty = !this.message\n                this.message = message\n                if (wasEmpty && !!this.message) {\n                    // inject status message to given outlet, we have the <status-message-outlet> component therefore\n                    const componentFactory =\n                        this.componentFactoryResolver.resolveComponentFactory(statusMessageComponent)\n                    const component = componentFactory.create(viewContainerRef.parentInjector)\n                    // insert into the outlet, to maintain DOM structure\n                    insertedViewRef = viewContainerRef.insert(component.hostView)\n                } else if (!this.message && insertedViewRef) {\n                    insertedViewRef.destroy()\n                    insertedViewRef = undefined\n                }\n            })\n    }\n}\n","import { Directive, Input } from '@angular/core'\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, Validators } from '@angular/forms'\n\n@Directive({\n    selector: '[decimalValidator]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: DecimalValidatorDirective, multi: true }],\n})\nexport class DecimalValidatorDirective implements Validator {\n    @Input()\n    public decimal: number\n\n    public validate(control: AbstractControl): ValidationErrors | null {\n        if (!control) {\n            return null\n        }\n        // Determines if control passes the required validator\n        const required = Validators.required(control)\n        // Determines if control has required validator\n        const isRequired = control.validator && control.validator({} as AbstractControl)\n        if (isRequired !== null && required !== null) {\n            return null\n        }\n        const decimal = control.value?.toString().split('.')[1]\n        if (decimal && decimal.length > this.decimal) {\n            return { invalidDecimal: true }\n        }\n        return null\n    }\n}\n","export default \"<div class=\\\"toastr-anchor\\\">\\n    <div\\n        *ngFor=\\\"let toast of toasts\\\"\\n        [@flyInOut]\\n        (click)=\\\"hide(toast)\\\"\\n        (mouseover)=\\\"stopTimer(toast)\\\"\\n        (mouseleave)=\\\"startTimer(toast)\\\"\\n        class=\\\"toast toast-{{ toast.type }} media\\\"\\n    >\\n        <div class=\\\"d-flex pt-1 mr-3\\\">\\n            <fa-icon [icon]=\\\"toast.icon\\\" size=\\\"2x\\\"></fa-icon>\\n        </div>\\n        <div class=\\\"media-body\\\">\\n            <p class=\\\"toast-message\\\">\\n                <b>{{ toast.title }}</b>\\n            </p>\\n            <p class=\\\"toast-message\\\">{{ toast.message }}</p>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component, Input } from '@angular/core'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\n\n@Component({\n    selector: 'video-player',\n    templateUrl: 'video-player.component.html',\n})\nexport class VideoPlayerComponent {\n    @Input()\n    public url: string\n}\n\nexport function playVideo(ngbModal: NgbModal): (url: string) => void {\n    return (url: string) => {\n        const videoPlayer = ngbModal.open(VideoPlayerComponent, {\n            windowClass: 'video-player',\n            size: 'lg',\n        })\n        ;(videoPlayer.componentInstance as VideoPlayerComponent).url = url\n    }\n}\n","export default \"<form #addressForm=\\\"ngForm\\\" [ngClass]=\\\"{ 'ng-submitted': submitted }\\\" class=\\\"form-validation e2e-address-form\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}addressLine1\\\">{{\\n            'address-form.street-and-number' | translate\\n        }}</label>\\n        <ng-select\\n            id=\\\"{{ prefix }}addressLine1\\\"\\n            name=\\\"addressLine1\\\"\\n            bindLabel=\\\"name\\\"\\n            [(ngModel)]=\\\"addressLine1\\\"\\n            (change)=\\\"setAddress($event)\\\"\\n            #addressLine1Input=\\\"ngModel\\\"\\n            [ngClass]=\\\"{ 'ng-select-lg': isLarge }\\\"\\n            [items]=\\\"placesStream | async\\\"\\n            [typeahead]=\\\"placesAutocomplete\\\"\\n            aria-autocomplete=\\\"false\\\"\\n            autocomplete=\\\"false\\\"\\n            [required]=\\\"requireAll\\\"\\n            [addTag]=\\\"true\\\"\\n            [disabled]=\\\"disabled\\\"\\n            addTagText=\\\"Use\\\"\\n        >\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item.description }}</ng-template>\\n            <ng-template ng-footer-tmp>\\n                <img src=\\\"/img/powered_by_google.png\\\" class=\\\"powered-by-google-brand\\\" alt=\\\"Powered by Google\\\" draggable=\\\"false\\\" />\\n            </ng-template>\\n        </ng-select>\\n        <div *ngIf=\\\"addressLine1Input.invalid && (submitted || addressLine1Input.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"addressLine1Input?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}addressLine2\\\">\\n            {{ 'common.suite-unit-floor-building-optional' | translate }} <small class=\\\"text-muted\\\">({{ 'common.optional' | translate }})</small>\\n        </label>\\n        <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            id=\\\"{{ prefix }}addressLine2\\\"\\n            name=\\\"addressLine2\\\"\\n            [(ngModel)]=\\\"address.addressLine2\\\"\\n            [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n            [disabled]=\\\"disabled\\\"\\n            emptyToNull\\n            #addressLine2=\\\"ngModel\\\"\\n        />\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-sm-14\\\">\\n            <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}city\\\">{{ 'common.city' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"{{ prefix }}city\\\"\\n                name=\\\"city\\\"\\n                [(ngModel)]=\\\"address.city\\\"\\n                #city=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                autocomplete=\\\"address-level2\\\"\\n                [required]=\\\"requireAll\\\"\\n                [disabled]=\\\"disabled\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"city.invalid && (submitted || city.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"city?.errors?.required\\\">{{ 'common.optional' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group col-sm-10\\\">\\n            <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}zipCode\\\">{{\\n                'address-form.postal-code' | translate\\n            }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"{{ prefix }}zipCode\\\"\\n                name=\\\"zipCode\\\"\\n                [(ngModel)]=\\\"address.zipCode\\\"\\n                #zipCode=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                autocomplete=\\\"postal-code\\\"\\n                [required]=\\\"requireAll\\\"\\n                [disabled]=\\\"disabled\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"zipCode.invalid && (submitted || zipCode.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"zipCode?.errors?.required\\\">{{ 'common.optional' | translate }}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-sm-12\\\">\\n            <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}state\\\">{{ 'common.state' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"{{ prefix }}state\\\"\\n                name=\\\"state\\\"\\n                [(ngModel)]=\\\"address.state\\\"\\n                #state=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'form-control-lg': isLarge }\\\"\\n                autocomplete=\\\"address-level1\\\"\\n                [disabled]=\\\"disabled\\\"\\n                emptyToNull\\n            />\\n            <div *ngIf=\\\"state.invalid && (submitted || state.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"state?.errors?.required\\\">{{ 'common.optional' | translate }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group col-sm-12\\\">\\n            <label class=\\\"form-control-label\\\" [ngClass]=\\\"{ 'font-md': isLarge }\\\" for=\\\"{{ prefix }}country\\\">{{ 'common.country' | translate }}</label>\\n            <ng-select\\n                id=\\\"{{ prefix }}country\\\"\\n                name=\\\"country\\\"\\n                [(ngModel)]=\\\"address.country\\\"\\n                bindLabel=\\\"name\\\"\\n                bindValue=\\\"alpha2\\\"\\n                [items]=\\\"countriesSortedByName\\\"\\n                [clearable]=\\\"false\\\"\\n                #country=\\\"ngModel\\\"\\n                [ngClass]=\\\"{ 'ng-select-lg': isLarge }\\\"\\n                [disabled]=\\\"disabled\\\"\\n                autocomplete=\\\"false\\\"\\n                aria-autocomplete=\\\"false\\\"\\n                [required]=\\\"requireAll\\\"\\n            ></ng-select>\\n            <div *ngIf=\\\"country.invalid && (submitted || country.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"country?.errors?.required\\\">{{ 'common.optional' | translate }}</div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\";","import { Injectable } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { pick } from 'lodash'\nimport { filter, withLatestFrom } from 'rxjs/operators'\nimport { AvatarService } from './avatar.service'\nimport { SessionService, UserEventType } from './session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class IntercomService {\n    private isEnabled = false\n\n    constructor(session: SessionService, router: Router, private avatarService: AvatarService) {\n        window.intercomSettings = window.intercomSettings || {}\n        this.boot()\n        if (this.isEnabled) {\n            session.userEvent.pipe(withLatestFrom(session.userStream)).subscribe(([event, user]) => {\n                const avatarUrl = this.avatarService.getAvatarUrl(user)\n                if (event.type === UserEventType.LOGIN) {\n                    window.intercomSettings = {\n                        ...window.intercomSettings,\n                        user_id: user.id,\n                        user_hash: user.intercomHash,\n                        name: user.name,\n                        email: user.email,\n                        created_at: new Date(user.createdAt).getTime(),\n                        avatar: {\n                            type: 'avatar',\n                            image_url: avatarUrl,\n                        },\n                        // Custom fields\n                        ...(pick(user, ['accountNumber', 'status', 'approvedAt']) as any),\n                    }\n                    this.update()\n                } else if (event.type === UserEventType.LOGOUT) {\n                    this.shutdown()\n                    this.boot()\n                }\n            })\n            router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n                this.update()\n            })\n        }\n    }\n\n    public boot(): void {\n        if (window.INTERCOM_APP_ID) {\n            if (!window.Intercom) {\n                /* eslint-disable */\n                ;(function () {\n                    var w = window\n                    var ic = w.Intercom\n                    if (typeof ic === 'function') {\n                        ic('reattach_activator')\n                        ic('update', w.intercomSettings)\n                    } else {\n                        var d = document\n                        var i: any = function () {\n                            i.c(arguments)\n                        }\n                        i.q = []\n                        i.c = function (args: any) {\n                            i.q.push(args)\n                        }\n                        w.Intercom = i\n                        const l = () => {\n                            var s = d.createElement('script')\n                            s.type = 'text/javascript'\n                            s.async = true\n                            s.src = `https://widget.intercom.io/widget/${window.INTERCOM_APP_ID}`\n                            var x = d.getElementsByTagName('script')[0]\n                            x.parentNode!.insertBefore(s, x)\n                        }\n                        if ((w as any).attachEvent) {\n                            ;(w as any).attachEvent('onload', l)\n                        } else {\n                            w.addEventListener('load', l, false)\n                        }\n                    }\n                })()\n                /* eslint-enable */\n            }\n            this.isEnabled = true\n            window.Intercom!('boot', { app_id: window.INTERCOM_APP_ID })\n        }\n    }\n\n    public trackEvent(event: string, data?: any): void {\n        if (this.isEnabled) {\n            window.Intercom!('trackEvent', event, data)\n        }\n    }\n\n    public shutdown(): void {\n        if (this.isEnabled) {\n            window.intercomSettings = {}\n            window.Intercom!('shutdown')\n            this.isEnabled = false\n        }\n    }\n\n    public update(options?: { email?: string; hide_default_launcher?: boolean }): void {\n        if (this.isEnabled) {\n            window.Intercom!('update', options)\n        }\n    }\n\n    public hide(): void {\n        if (this.isEnabled) {\n            window.Intercom!('hide')\n        }\n    }\n\n    public show(): void {\n        if (this.isEnabled) {\n            window.Intercom!('show')\n        }\n    }\n\n    public startConversation(prePopulatedMessage?: string): void {\n        if (this.isEnabled) {\n            window.Intercom!('showNewMessage', prePopulatedMessage)\n        }\n    }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faEdit, faTimes } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { forkJoin, Observable, of } from 'rxjs'\nimport { catchError, filter, finalize, flatMap, map } from 'rxjs/operators'\nimport { File as IFile, IUser } from '../api-interfaces'\nimport { toStartCase } from '../common.mixin'\nimport { DropzoneComponent } from '../dropzone/dropzone.component'\nimport { buildFileUrl } from '../file'\nimport { ListComponent } from '../list.component'\nimport { ConfirmationResult, ConfirmationService } from '../services/confirmation.service'\nimport { SessionService } from '../services/session.service'\nimport { ToastrService } from '../services/toastr.service'\nimport { UserFileFormComponent } from './user-file-form/user-file-form.component'\n\n@Component({\n    selector: 'profile-documents',\n    templateUrl: 'profile-documents.component.html',\n})\nexport class ProfileDocumentsComponent extends ListComponent<IFile> implements OnInit, OnDestroy {\n    @Input()\n    public user: IUser\n    @Input()\n    public buttonAlign = 'left'\n    @Input()\n    public showButton = true\n    @Input()\n    public canCreate = true\n    @Input()\n    public canView = true\n    @Input()\n    public canEdit = true\n    @Input()\n    public canDelete = true\n    @Input()\n    public purpose: string\n    @Input()\n    public requiredMessage: string\n    @Output()\n    public readonly onUpload = new EventEmitter<void>()\n\n    @ViewChild('dropzone')\n    public dropzone: DropzoneComponent\n\n    public isUploading = false\n\n    public files: File[] = []\n    public existingFiles: IFile[]\n\n    public toStartCase = toStartCase\n    public getFileUrl = buildFileUrl\n    public faTimes = faTimes\n    public faEdit = faEdit\n    protected apiUrl: string\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        confirmation: ConfirmationService,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session, confirmation)\n    }\n\n    public ngOnInit(): void {\n        this.apiUrl = `/users/${this.user.id}/files`\n        super.ngOnInit()\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy()\n    }\n\n    public uploadFiles(): void {\n        this.submit()\n        if (!this.isValid()) {\n            return\n        }\n        this.isUploading = true\n        this.subscriptions.add(\n            this.upload()\n                .pipe(\n                    finalize(() => {\n                        this.isUploading = false\n                    })\n                )\n                .subscribe(results => {\n                    if (results.some(result => !result)) {\n                        this.toastr.error(\n                            this.translate.instant('profile-documents.some-requests-has-failed-please-try-again')\n                        )\n                        return\n                    } else if (results.length > 0) {\n                        this.toastr.success(this.translate.instant('common.file-uploaded'))\n                    }\n                    this.onUpload.emit()\n                })\n        )\n    }\n\n    public upload(options?: { purpose?: any }): Observable<(IFile | boolean)[]> {\n        return forkJoin(\n            this.files.map((file, index) => {\n                const headers = {\n                    'X-File-Name': encodeURIComponent(file.name),\n                    'Content-Type': file.type,\n                    'X-No-Toast': 'true',\n                } as any\n                if (options && options.purpose) {\n                    headers['X-File-Purpose'] = options.purpose\n                }\n                return this.http\n                    .post<IFile>(this.apiUrl, file, {\n                        headers: new HttpHeaders(headers),\n                    })\n                    .pipe(\n                        map(result => [result, index]),\n                        catchError(() => of(false))\n                    )\n            })\n        ).pipe(\n            map(results => {\n                // Remove successful uploads from pending\n                const successfulUploads: number[] = []\n                for (const result of results) {\n                    if (!Array.isArray(result)) {\n                        continue\n                    }\n                    successfulUploads.push(result[1] as number)\n                }\n                this.files = this.files.filter((_, index) => !successfulUploads.includes(index))\n\n                this.updateEvent.next()\n                return results.map(result => (Array.isArray(result) ? (result[0] as IFile) : result))\n            })\n        )\n    }\n\n    public deleteFile(file: IFile): void {\n        this.subscriptions.add(\n            this.confirmation\n                .show({\n                    type: 'danger',\n                    text: `${this.translate.instant(\n                        'common.are-you-sure-want-to-delete-file'\n                    )}<br>${this.translate.instant('common.you-cant-undo-action')}`,\n                    confirmText: this.translate.instant('common.delete'),\n                    confirmClass: 'danger',\n                })\n                .pipe(\n                    filter(result => result === ConfirmationResult.CONFIRMED),\n                    flatMap(() => this.http.delete<void>(`${this.apiUrl}/${file.id}`))\n                )\n                .subscribe(() => {\n                    this.updateEvent.next()\n                    this.toastr.success(`${file.name} ${this.translate.instant('common.removed')}`)\n                })\n        )\n    }\n\n    public showFileModal(file: IFile): void {\n        const fileForm = this.ngbModal.open(UserFileFormComponent, {\n            backdrop: 'static',\n            windowClass: 'modal-primary',\n        })\n        const fileFormComponent = fileForm.componentInstance as UserFileFormComponent\n        fileFormComponent.file = file\n        if (file.userFile) {\n            ;(fileFormComponent as UserFileFormComponent).user = this.user\n        }\n        fileFormComponent.onSave.subscribe(() => {\n            this.updateEvent.next()\n            fileForm.close()\n        })\n    }\n\n    public submit(): void {\n        if (this.dropzone) {\n            this.dropzone.submit()\n        }\n    }\n\n    public isValid(): boolean {\n        return this.dropzone.isValid()\n    }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { faBell, faEye } from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { combineLatest, Subject, Subscription } from 'rxjs'\nimport { debounceTime, flatMap, switchMap, take } from 'rxjs/operators'\nimport { Notification, RPCResult } from '../../../../common/api-interfaces'\nimport { NotificationsService } from '../../../../common/services/notifications.service'\nimport { SessionService } from '../../../../common/services/session.service'\n\n@Component({\n    selector: 'header-notifications',\n    templateUrl: 'header-notifications.component.html',\n})\nexport class HeaderNotificationsComponent implements OnInit, OnDestroy {\n    public notifications: Notification[]\n    public faBell = faBell\n    public faEye = faEye\n    private fetchEvent = new Subject<void>()\n    private subscriptions = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        public notificationsService: NotificationsService,\n        private router: Router,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            combineLatest(this.notificationsService.notifyEvent, this.fetchEvent, this.session.userStream)\n                .pipe(\n                    debounceTime(600),\n                    switchMap(([_, __, user]) =>\n                        this.http.get<Notification[]>(`/users/${user.id}/notifications`, {\n                            params: new HttpParams().set('limit', 10 + ''),\n                        })\n                    )\n                )\n                .subscribe(notifications => {\n                    this.notifications = notifications\n                })\n        )\n        this.notificationsService.notifyEvent.next()\n        this.fetchEvent.next()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public markAllAsRead(): void {\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    take(1),\n                    flatMap(user =>\n                        this.http.post<RPCResult<void>>(\n                            `/users/${user.id}/notifications`,\n                            {\n                                id: Math.floor(Math.random() * 10000),\n                                jsonrpc: '2.0',\n                                method: 'markAllAsRead',\n                            },\n                            {\n                                headers: new HttpHeaders({ 'Content-Type': 'application/json-rpc' }),\n                            }\n                        )\n                    )\n                )\n                .subscribe(() => {\n                    this.fetchEvent.next()\n                    this.notificationsService.notifyEvent.next()\n                })\n        )\n    }\n\n    public async goto(notification: Notification): Promise<void> {\n        if (notification.invoice) {\n            await this.router.navigate(['/services/invoices', notification.invoice.id])\n        } else if (notification.transaction) {\n            await this.router.navigate(['/transactions', notification.transaction.id])\n        } else if (notification.conversion) {\n            await this.router.navigate(['/services/conversions', notification.conversion.id])\n        } else {\n            await this.router.navigate(['/notifications'])\n        }\n    }\n\n    public handleDropdownClosed(payload: boolean): void {\n        const unreadNotifications = this.notifications.filter(notification => !notification.read)\n        if (!payload && unreadNotifications.length) {\n            this.markAllAsRead()\n        }\n    }\n}\n","import { countries, Country } from '@aerapass/country-data'\nimport BigNumber from 'bignumber.js'\nimport { omitBy, startCase } from 'lodash'\nimport validateEmail from 'validator/lib/isEmail'\nimport { AccountBill, IAddress, Permission } from './api-interfaces'\nimport { countryMap } from './countries'\n\nexport type BootstrapComponentType = 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'danger' | 'default'\n\nexport function convertToISODate(date: string): string {\n    return `${date.slice(4)}-${date.slice(2, 4)}-${date.slice(0, 2)}`\n}\n\nexport function convertPercentage(percentage: string): string {\n    return new BigNumber(percentage).div(100).toPrecision(9, 1)\n}\n\n/**\n * Returns the calling code of a country\n * @param country Alpha2 of a country\n */\nexport function toCountryCallingCode(country: string): string {\n    return countryMap[country]?.countryCallingCodes[0] ?? ''\n}\n\nexport function nanToNull<T>(value: T): T | null {\n    return isNaN(value as any) ? null : value\n}\n\nexport function emptyToNull<T>(value: T): T | null {\n    return !value ? null : value\n}\n\nexport function toStartCase(text: string | null): string {\n    return text ? startCase(text.replace(/-/g, ' ')) : ''\n}\n\nexport function isZero(value: number | string): boolean {\n    return new BigNumber(value).isZero()\n}\n\nexport function formatAccountNumber(value: string): string {\n    return `${value.substring(0, 2)} ${value.substring(2, 6)} ${value.substring(6, 10)} ${value.substring(10)}`\n}\n\n/**\n * Removes properties with null or undefined values\n */\nexport function deepOmitEmptyProperties(object: any): any {\n    if (typeof object !== 'object') {\n        throw new Error('Argument not an object')\n    }\n    object = omitBy(object, prop => prop === null || prop === undefined)\n    for (const key in object) {\n        if (Array.isArray(object[key])) {\n            object[key] = object[key].map((item: any) => {\n                if (typeof item === 'object') {\n                    return deepOmitEmptyProperties(item)\n                }\n                return item\n            })\n        } else if (typeof object[key] === 'object') {\n            object[key] = deepOmitEmptyProperties(object[key])\n        }\n    }\n    return object\n}\n\nexport function searchCountryCode(term: string, country: Country): boolean {\n    return (\n        country.alpha2.toLocaleLowerCase().includes(term.toLocaleLowerCase()) ||\n        country.countryCallingCodes[0].toLocaleLowerCase().includes(term.toLocaleLowerCase())\n    )\n}\n\nexport function transformAddress(address: {\n    addressLine1: string | null\n    addressLine2?: string | null\n    zipCode: string | null\n    city: string | null\n    country: string | null\n}): { name: string | null } | { formatted_address: string } | null {\n    return address.addressLine1 ? { name: address.addressLine1 } : null\n}\n\nexport function dataUrlToBlob(dataUrl: string, type: string): Blob {\n    const byteString = atob(dataUrl.split(',')[1])\n    const ia = new Uint8Array(byteString.length)\n    let i = byteString.length\n    while (i--) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], { type })\n}\n\nexport const permissionMap: { [key in Permission]: string } = {\n    'payment-swift': 'Swift',\n    'payment-local': 'Local',\n    'payment-crypto': 'Crypto',\n    redeem: 'Redeem',\n    cards: 'Cards',\n    conversions: 'Conversions',\n    invoices: 'Invoices',\n    marketplaces: 'Marketplaces',\n    trades: 'Trades',\n    'spot-trades': 'Spot Trades',\n}\n\nexport function determineAccountBillStatus(accountBill: AccountBill): string {\n    if (new BigNumber(accountBill.amount).eq(0)) {\n        return 'free'\n    }\n    if (!accountBill.transaction) {\n        return 'unpaid'\n    }\n    return 'paid'\n}\n\nexport function readFileAsDataURL(file: File): Promise<string | ArrayBuffer | null> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.onload = () => {\n            resolve(reader.result)\n        }\n        reader.onerror = error => {\n            reject(error)\n        }\n        reader.readAsDataURL(file)\n    })\n}\n\nexport function isEmail(input: string): boolean {\n    return validateEmail(input)\n}\n\nexport function isAccountNumber(input: string, option?: { allowSpaces: boolean }): boolean {\n    const format = RegExp('^[A-Z]{2}[0-9]{10}$', 'g')\n    const value = !!option && option.allowSpaces ? input.replace(/\\s/g, '') : input\n    return (\n        format.test(value) &&\n        parseInt(`${value.charCodeAt(0)}${value.charCodeAt(1)}${value.substring(2)}`, 10) % 97 === 1\n    )\n}\n\nexport function findCountry(alpha2: string): Country | undefined {\n    return countries.all.find(country => country.alpha2 === alpha2)\n}\n\nexport function formatAddressToUSFormat(address: IAddress): string {\n    if (!address) {\n        return ''\n    }\n\n    const { addressLine1, addressLine2, city, state, zipCode, country } = address\n\n    const countryName = country ? countryMap[country].name : ''\n\n    return `${addressLine1}\\n${addressLine2 ? `${addressLine2}\\n` : ''}${city ? city + ' ' : ''}${\n        state ? state + ' ' : ''\n    }${zipCode ? zipCode : ''}${countryName ? '\\n' + countryName : ''}`\n}\n","import {\n    animate,\n    state as animationState,\n    style,\n    transition as animationTransition,\n    trigger,\n} from '@angular/animations'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { NavigationStart, Router } from '@angular/router'\nimport {\n    faBalanceScale,\n    faBell,\n    faBook,\n    faChartNetwork,\n    faCity,\n    faCog,\n    faCompass,\n    faCreditCardFront,\n    faDesktop,\n    faFileInvoice,\n    faInbox,\n    faLink,\n    faReceipt,\n    faShieldAlt,\n    faSitemap,\n    faSync,\n    faToolbox,\n    faUniversity,\n    faUser,\n    faUserFriends,\n    faUsers,\n    faWallet,\n    faChartBar,\n    faChartLine,\n} from '@fortawesome/pro-regular-svg-icons'\nimport {\n    faAngleDown,\n    faBox,\n    faArrowAltToBottom,\n    faCaretRight,\n    faExchange,\n    faPaperPlane,\n    faTimes,\n    faPlus,\n    faMinus,\n} from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\nimport { filter } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { SessionService } from '../../../common/services/session.service'\nimport { MenuService, MobileNavLayout } from './menu.service'\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: 'menu.component.html',\n    animations: [\n        trigger('toggleMenu', [\n            animationState('false', style({ height: '0px' })),\n            animationState('true', style({ height: '*' })),\n            animationTransition('1 => 0', animate('280ms ease-in')),\n            animationTransition('0 => 1', animate('280ms ease-out')),\n        ]),\n    ],\n})\nexport class MenuComponent implements OnInit, OnDestroy {\n    public faArrowAltToBottom = faArrowAltToBottom\n    public faDesktop = faDesktop\n    public faPaperPlane = faPaperPlane\n    public faBook = faBook\n    public faCreditCardFront = faCreditCardFront\n    public faToolbox = faToolbox\n    public faInbox = faInbox\n    public faCog = faCog\n    public faUser = faUser\n    public faUsers = faUsers\n    public faCity = faCity\n    public faWallet = faWallet\n    public faBell = faBell\n    public faCaretRight = faCaretRight\n    public faSync = faSync\n    public faBalanceScale = faBalanceScale\n    public faUniversity = faUniversity\n    public faCompass = faCompass\n    public faChartNetwork = faChartNetwork\n    public faLink = faLink\n    public faShieldAlt = faShieldAlt\n    public faReceipt = faReceipt\n    public faFileInvoice = faFileInvoice\n    public faTimes = faTimes\n    public faAngleDown = faAngleDown\n    public faUserFriends = faUserFriends\n    public faChartBar = faChartBar\n    public faPlus = faPlus\n    public faMinus = faMinus\n    public faExchange = faExchange\n    public faBox = faBox\n    public faSitemap = faSitemap\n    public faChartLine = faChartLine\n\n    public appName = environment.appName\n\n    private subscriptions = new Subscription()\n    private _activeMenu: string | undefined\n\n    constructor(\n        public session: SessionService,\n        private router: Router,\n        private menuService: MenuService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.router.events\n                .pipe(filter((event): event is NavigationStart => event instanceof NavigationStart))\n                .subscribe((event: NavigationStart) => {\n                    this.activeMenu = event.url\n                })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public isActive(state: string, strict = false): boolean {\n        return this.router.isActive(state, strict)\n    }\n\n    public isOpen(menu: string): boolean {\n        return this.activeMenu === menu\n    }\n\n    public toggleMenu(menu: string): void {\n        this.activeMenu = this.activeMenu !== menu ? menu : undefined\n    }\n\n    public closeMobileNav(): void {\n        this.menuService.mobileNav = MobileNavLayout.HIDDEN\n    }\n\n    public get activeMenu(): string | undefined {\n        return this._activeMenu\n    }\n\n    public set activeMenu(route: string | undefined) {\n        if (!route) {\n            this._activeMenu = undefined\n            return\n        }\n        if (route.startsWith('/admin')) {\n            route = route.substring('/admin'.length)\n        }\n        if (route.startsWith('/')) {\n            route = route.substring(1)\n        }\n        const routeParts = route.split('/')\n        this._activeMenu = routeParts[0] || undefined\n    }\n}\n","export default \"<copy-wrap [value]=\\\"value\\\">\\n    <span [ngClass]=\\\"ngClass\\\" placement=\\\"right\\\" [ngbTooltip]=\\\"value\\\">{{ value | truncate: false:7:'' }}</span>\\n</copy-wrap>\\n\";","import { Component, Input } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { environment } from 'src/environments/environment'\nimport { IBeneficiary, Transaction } from '../api-interfaces'\nimport { calculateCreditableAmount } from '../transactions.mixins'\n\n@Component({\n    selector: 'deposit-instruction-table',\n    templateUrl: 'deposit-instruction-table.component.html',\n})\nexport class DepositInstructionTableComponent {\n    public appName = environment.appName\n    @Input()\n    public beneficiary: IBeneficiary\n    @Input()\n    public transaction: Transaction\n    @Input()\n    public showWarning = false\n    @Input()\n    public showMethod = true\n    @Input()\n    public showCurrency = false\n    @Input()\n    public borderless = false\n\n    public calculateCreditableAmount = calculateCreditableAmount\n\n    constructor(public translate: TranslateService) {}\n\n    /** For local method branching */\n\n    public getAccountNumberLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.beneficiary.currency?.code === 'EUR') {\n                return 'IBAN'\n            }\n        }\n        if (this.beneficiary.method === 'crypto') {\n            return `${this.translate.instant('common.wallet-address')}`\n        }\n        return `${this.translate.instant('common.account-number')}`\n    }\n\n    public showSwift(): boolean {\n        return !(this.beneficiary.method === 'local' && this.beneficiary.currency.code === 'USD')\n    }\n\n    public getSwiftLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.beneficiary.currency.code === 'AUD') {\n                return 'BSB'\n            }\n            if (this.beneficiary.currency.code === 'EUR') {\n                return 'BIC'\n            }\n            if (this.beneficiary.currency.code === 'GBP') {\n                return 'Sort Code'\n            }\n        }\n        return `${this.translate.instant('common.swift-code')}`\n    }\n\n    public showRoutingNumber(): boolean {\n        return this.beneficiary.method === 'local' && ['AUD', 'CAD', 'USD'].includes(this.beneficiary.currency.code!)\n    }\n\n    public getRoutingNumberLabel(): string {\n        if (this.beneficiary.method === 'local') {\n            if (this.beneficiary.currency.code === 'AUD') {\n                return 'Pay ID'\n            }\n            if (this.beneficiary.currency.code === 'CAD') {\n                return 'Transit Code'\n            }\n        }\n        return 'Routing Number'\n    }\n}\n","export default \"<div\\n    *ngIf=\\\"canCreate\\\"\\n    ngfDrop\\n    [accept]=\\\"'image/jpeg,image/gif,image/png,application/pdf' + (allowVideo ? ',video/mp4' : '')\\\"\\n    maxSize=\\\"52428800\\\"\\n    selectable=\\\"true\\\"\\n    [files]=\\\"files\\\"\\n    (filesChange)=\\\"files = $event; filesChange.next(files)\\\"\\n    class=\\\"dropzone\\\"\\n    [ngClass]=\\\"{\\n        'ng-invalid': files?.length === 0 && existingFiles?.length === 0 && submitted,\\n        dragover: isDragValid,\\n        'invalid-dragover': isDragInvalid\\n    }\\\"\\n    [(invalidDrag)]=\\\"isDragInvalid\\\"\\n    [(validDrag)]=\\\"isDragValid\\\"\\n>\\n    <fa-icon class=\\\"dz-icon\\\" [icon]=\\\"faCloudUpload\\\"></fa-icon>\\n    <div class=\\\"small\\\">\\n        <span *ngIf=\\\"!isDragValid && !isDragInvalid\\\"> {{ 'common.drag-files-here' | translate }} </span>\\n        <span *ngIf=\\\"isDragValid\\\" class=\\\"valid\\\">{{ 'common.drop-file' | translate }}</span>\\n        <span *ngIf=\\\"isDragInvalid\\\" class=\\\"invalid\\\">{{ 'common.this-file-is-invalid' | translate }}</span>\\n    </div>\\n</div>\\n<div class=\\\"small text-muted\\\" *ngIf=\\\"canCreate\\\">\\n    {{ 'common.the-following-image-format' | translate }}: jpg, gif, png, pdf{{ allowVideo ? ', mp4' : '' }} (Max. 5{{ allowVideo ? '0' : '' }}MB)\\n</div>\\n<div *ngIf=\\\"files?.length === 0 && existingFiles?.length === 0 && submitted\\\" class=\\\"error-messages\\\">\\n    <div class=\\\"form-control-feedback\\\">{{ requiredMessage || 'File is required.' }}</div>\\n</div>\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"showTable && ((files && files.length > 0) || (existingFiles && existingFiles.length > 0))\\\">\\n    <table class=\\\"table table-hover align-items-center table-borderless mt-1\\\">\\n        <thead>\\n            <tr>\\n                <th scope=\\\"col\\\" colspan=\\\"2\\\">{{ 'common.file-name' | translate }}</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr class=\\\"bg-white e2e-file\\\" *ngFor=\\\"let existingFile of existingFiles\\\">\\n                <th scope=\\\"row\\\">\\n                    <file-item [file]=\\\"existingFile\\\"></file-item>\\n                </th>\\n                <td class=\\\"text-right\\\" nowrap>\\n                    <button *ngIf=\\\"canDelete\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"onDelete.emit(existingFile)\\\">\\n                        <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                    </button>\\n                </td>\\n            </tr>\\n            <tr class=\\\"bg-white e2e-file\\\" *ngFor=\\\"let item of files; let i = index\\\">\\n                <th scope=\\\"row\\\">\\n                    <div *ngIf=\\\"['image/gif', 'image/png', 'image/jpeg'].indexOf(item.type) >= 0\\\">\\n                        <div class=\\\"previewIcon\\\" [ngfBackground]=\\\"item\\\"></div>\\n                    </div>\\n                    <div>{{ item.name }}</div>\\n                    <small class=\\\"text-muted\\\">{{ item.type }} / {{ item.size / 1024 / 1024 | number: '.2' }} MB</small>\\n                </th>\\n                <td class=\\\"text-right\\\" nowrap>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"files.splice(i, 1)\\\">\\n                        <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                    </button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport { formatAccountNumber, isAccountNumber } from './common.mixin'\n\n@Pipe({ name: 'accountNumber' })\nexport class AccountNumberPipe implements PipeTransform {\n    public transform(value: string | null | undefined): string {\n        if (!value || !isAccountNumber(value)) {\n            return value ? value : ''\n        }\n        return formatAccountNumber(value)\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { User } from './session.service'\nimport { StorageService } from './storage.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AvatarService {\n    private static readonly AVATAR_CACHE_KEY = 'avatar_last_cached_at'\n    // use 1 by default to improve caching\n    private _timestamp: number\n    public set timestamp(value: string) {\n        this._timestamp = ~~value\n        this.storage.setItem(AvatarService.AVATAR_CACHE_KEY, this.timestamp)\n    }\n    public get timestamp(): string {\n        return this._timestamp + ''\n    }\n    constructor(private storage: StorageService) {\n        this.timestamp = this.storage.hasItem(AvatarService.AVATAR_CACHE_KEY)\n            ? this.storage.getItem(AvatarService.AVATAR_CACHE_KEY)!\n            : '1'\n    }\n    public reload(): void {\n        this.timestamp = Date.now() + ''\n    }\n    public getAvatarUrl(user: User): string {\n        return `/.api/users/${user.id}/avatar` + `?v=${this.timestamp}`\n    }\n}\n","import { Component, Input } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport { IUser } from '../api-interfaces'\nimport { UserService } from '../services/core/user.service'\nimport { ToastrService } from '../services/toastr.service'\n\n@Component({\n    selector: 'confirm-mail-reminder',\n    templateUrl: 'confirm-mail-reminder.component.html',\n})\nexport class ConfirmMailReminderComponent {\n    @Input()\n    public user: IUser\n    public resendTriggered = false\n    constructor(private toastr: ToastrService, private userService: UserService, public translate: TranslateService) {}\n\n    public resend(): void {\n        this.resendTriggered = true\n        this.userService.resendActivationMail(this.user.id).subscribe(\n            () => {\n                this.toastr.success(this.translate.instant('common.mail-confirmation-sent-again'))\n            },\n            () => {\n                this.resendTriggered = false\n            }\n        )\n    }\n}\n","import {\n    AfterContentInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SkipSelf,\n    ViewChild,\n} from '@angular/core'\nimport { ControlContainer, NgForm, NgModel } from '@angular/forms'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { CurrenciesQuery } from '../../store/currencies/currencies.query'\nimport { WalletsQuery } from '../../store/wallets/wallets.query'\nimport { CurrencyType, ICurrency, IUser } from '../api-interfaces'\nimport { SessionService } from '../services/session.service'\n\n@Component({\n    selector: 'currency-select',\n    templateUrl: 'currency-select.component.html',\n    viewProviders: [\n        {\n            provide: ControlContainer,\n            useFactory: (ngForm: NgForm) => ngForm,\n            deps: [[new Optional(), new SkipSelf(), NgForm]],\n        },\n    ],\n})\nexport class CurrencySelectComponent implements OnChanges, AfterContentInit, OnDestroy {\n    @Input()\n    public currency: ICurrency\n    @Output()\n    public readonly currencyChange = new EventEmitter<ICurrency>(true)\n    @Input()\n    public placeholder = `${this.translate.instant('common.select-currency')}`\n    @Input()\n    public disabled = false\n    @Input()\n    public required = false\n    @Input()\n    public user: IUser\n    @Input()\n    public isLarge = false\n    @Input()\n    public currencyTypes: CurrencyType[] = ['fiat', 'crypto']\n    @Input()\n    public depositable: boolean\n    @Input()\n    public holdable: boolean\n    @Input()\n    public transferable: boolean\n    @Input()\n    public filterBy: string[]\n    @Input()\n    public salesProceeds = false\n    @ViewChild('currencyInput', { static: true })\n    public currencyInput: NgModel\n    @Input()\n    public useFullName = false\n    @Input()\n    public hideZeroBalance = false\n\n    public appName = environment.appName\n    public balances$: Observable<(ICurrency & { balance: string })[]>\n\n    private criteria: BehaviorSubject<{\n        currencyTypes: CurrencyType[]\n        depositable: boolean\n        holdable: boolean\n        transferable: boolean\n    }>\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private currenciesQuery: CurrenciesQuery,\n        private walletsQuery: WalletsQuery,\n        private session: SessionService,\n        public translate: TranslateService\n    ) {\n        this.criteria = new BehaviorSubject({\n            currencyTypes: this.currencyTypes,\n            depositable: this.depositable,\n            holdable: this.holdable,\n            transferable: this.transferable,\n        })\n        this.balances$ = combineLatest(\n            this.currenciesQuery.selectAll(),\n            this.walletsQuery.balances$,\n            this.criteria\n        ).pipe(\n            map(([currencies, wallets, criteria]) => {\n                let balances\n                balances = currencies\n                    .filter(currency => {\n                        if (this.filterBy && !this.filterBy.includes(currency.code)) {\n                            return false\n                        }\n                        let query = this.currencyTypes.includes(currency.type)\n                        if (criteria.depositable !== undefined) {\n                            query = query && currency.depositable === criteria.depositable\n                        }\n                        if (criteria.holdable !== undefined) {\n                            query = query && currency.holdable === criteria.holdable\n                        }\n                        if (criteria.transferable !== undefined) {\n                            query = query && currency.transferable === criteria.transferable\n                        }\n                        return query\n                    })\n                    .map(currency => {\n                        const wallet = wallets.find(w => w.currency.code === currency.code)\n                        const balance = (wallet && wallet.availableBalance) || 0\n                        const salesProceeds = wallet\n                            ? new BigNumber(wallet.usdValue).minus((wallet as any).topupAmount).toFixed(2, 1)\n                            : 0\n                        return {\n                            ...currency,\n                            balance: new BigNumber(balance).toFixed(currency.decimalPlaces, 1),\n                            usdValue: wallet ? wallet.usdValue : '0.00',\n                            salesProceeds,\n                        }\n                    })\n                    .filter(wallet => (this.hideZeroBalance ? !new BigNumber(wallet.balance).isZero() : true))\n\n                if (!balances.length) {\n                    balances = currencies\n                        .filter(currency => currency.code === (this.currencyTypes.includes('fiat') ? 'USD' : 'BTC'))\n                        .map(currency => ({\n                            ...currency,\n                            balance: '0.00',\n                            usdValue: '0.00',\n                            salesProceeds: '0.00',\n                        }))\n                }\n\n                return balances\n            })\n        )\n    }\n\n    public ngOnChanges(): void {\n        this.criteria?.next({\n            currencyTypes: this.currencyTypes,\n            depositable: this.depositable,\n            holdable: this.holdable,\n            transferable: this.transferable,\n        })\n    }\n\n    public ngAfterContentInit(): void {\n        this.subscriptions.add(\n            this.balances$.subscribe(balances => {\n                if (this.currency === undefined) {\n                    this.currency =\n                        balances.find(balance => balance.code === this.session.user.preferredCurrency.code) ||\n                        balances.find(balance => balance.code === 'USD') ||\n                        balances.find(balance => balance.code === 'BTC') ||\n                        balances[0]\n                    this.currencyChange.emit(this.currency)\n                }\n            })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public compareCurrencies(a: ICurrency, b: ICurrency): boolean {\n        return a.code === b.code\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../../common/common.module'\nimport { NotFoundComponent } from './not-found.component'\n\n@NgModule({\n    declarations: [NotFoundComponent],\n    exports: [NotFoundComponent],\n    imports: [CommonModule],\n})\nexport class NotFoundModule {}\n","import { NgModule } from '@angular/core'\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router'\nimport { NotFoundComponent } from './app/not-found/not-found.component'\nimport { OrganizationAuthGuard } from './organization/organization.auth-guard'\n\nconst routes: Routes = [\n    {\n        path: 'admin',\n        loadChildren: () => import('./admin/admin.module').then(mod => mod.AdminModule),\n    },\n    {\n        path: 'account',\n        loadChildren: () => import('./account/account.module').then(mod => mod.AccountModule),\n    },\n    {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then(mod => mod.DashboardModule),\n    },\n    {\n        path: 'mailbox',\n        loadChildren: () => import('./mailbox/mailbox.module').then(mod => mod.MailboxModule),\n    },\n    {\n        path: 'transactions',\n        loadChildren: () => import('./transactions/transactions.module').then(mod => mod.TransactionsModule),\n    },\n    {\n        path: 'services',\n        loadChildren: () => import('./services/services.module').then(mod => mod.ServicesModule),\n    },\n    {\n        path: 'verify',\n        loadChildren: () => import('./kyc-wizard/kyc-wizard.module').then(mod => mod.KycWizardModule),\n    },\n    {\n        path: 'cards',\n        loadChildren: () => import('./user-cards/user-cards.module').then(mod => mod.UserCardsModule),\n    },\n    {\n        path: 'discover',\n        loadChildren: () => import('./discover/discover.module').then(mod => mod.DiscoverModule),\n    },\n    {\n        path: 'deposit',\n        loadChildren: () => import('./deposit/deposit.module').then(mod => mod.DepositModule),\n    },\n    {\n        path: 'transfer',\n        loadChildren: () => import('./transfer/transfer.module').then(mod => mod.TransferModule),\n    },\n    {\n        path: 'withdraw',\n        loadChildren: () => import('./withdraw/withdraw.module').then(mod => mod.WithdrawModule),\n    },\n    {\n        path: 'spot-trading',\n        loadChildren: () =>\n            import('./user-spot-trading/user-spot-trading.module').then(mod => mod.UserSpotTradingModule),\n    },\n    {\n        path: 'redeem',\n        loadChildren: () => import('./user-redemption/user-redemption.module').then(mod => mod.UserRedemptionModule),\n    },\n    {\n        path: 'buy-and-sell',\n        loadChildren: () => import('./user-trades/user-trades.module').then(mod => mod.UserTradesModule),\n    },\n    {\n        path: 'fees',\n        loadChildren: () => import('./fees/fees.module').then(mod => mod.FeesModule),\n    },\n    {\n        path: 'login',\n        loadChildren: () => import('./login/login.module').then(mod => mod.LoginModule),\n    },\n    {\n        path: 'register',\n        loadChildren: () => import('./registration/registration.module').then(mod => mod.RegistrationModule),\n    },\n    {\n        path: 'privacy',\n        loadChildren: () => import('./privacy/privacy.module').then(mod => mod.PrivacyModule),\n    },\n    {\n        path: 'terms',\n        loadChildren: () => import('./terms/terms.module').then(mod => mod.TermsModule),\n    },\n    {\n        path: 'notifications',\n        loadChildren: () => import('./notifications/notifications.module').then(mod => mod.NotificationsModule),\n    },\n    {\n        path: 'activities',\n        loadChildren: () => import('./user-activities/user-activities.module').then(mod => mod.UserActivitiesModule),\n    },\n    {\n        path: 'organization',\n        canLoad: [OrganizationAuthGuard],\n        loadChildren: () => import('./organization/organization.module').then(mod => mod.OrganizationModule),\n    },\n    {\n        path: 'embedded',\n        loadChildren: () => import('./embedded/embedded.module').then(mod => mod.EmbeddedModule),\n    },\n    // redirect / to /login\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'login',\n    },\n    // cover all other states by 404 state\n    {\n        path: '**',\n        component: NotFoundComponent,\n    },\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules, scrollPositionRestoration: 'enabled' }),\n    ],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n    Association,\n    File,\n    IAddress,\n    ICardProgram,\n    IUser,\n    Permission,\n    Referrer,\n    Risk,\n    UserDetails,\n    UserFlag,\n    UserRole,\n    UserSegment,\n    UserStatus,\n    UserType,\n} from '../../api-interfaces'\nimport { Currency } from '../accounting/currency.model'\n\nexport class User implements IUser {\n    public id: string\n    public type: UserType\n    public segment: UserSegment\n    public accountNumber: string\n    public email: string\n    public status: UserStatus\n    public role: UserRole | null\n    public lastLogin: string | null\n    public loginCount: number\n    public permissions: Permission[] | null\n    public twoFactor: boolean\n    public riskRating: Risk\n    public flags: UserFlag[]\n    public approvedAt: Date | null\n    public name: string\n    public phoneCountryCode: string | null\n    public phoneNumber: string | null\n    public referrer: Referrer | null\n    public preferredCurrency: Currency\n    public billingCurrency: Currency\n    public files: File[]\n    public sendEmailNotifications: boolean\n    public expectedTurnover: string | null\n    public address: IAddress\n    public details: UserDetails\n    public association: Association | null\n    public cardProgram: ICardProgram | null\n    public isManaged: boolean\n    public createdAt: string\n    public updatedAt: string\n    public externalId: string\n    public niumCustomerId?: string | null\n    public accountOpeningFeePaidAt?: Date | null\n\n    constructor(data: Partial<IUser>) {\n        Object.assign(this, data)\n        if (data.preferredCurrency) {\n            this.preferredCurrency = new Currency(data.preferredCurrency)\n        }\n    }\n}\n","import { animate, keyframes, state, style, transition, trigger } from '@angular/animations'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Subscription } from 'rxjs'\nimport { Toast, ToastrService } from '../../../common/services/toastr.service'\n\n@Component({\n    selector: 'toastr',\n    templateUrl: 'toastr.component.html',\n    animations: [\n        trigger('flyInOut', [\n            state('in', style({ transform: 'translateY(-100%)' })),\n            transition(':enter', [\n                animate(\n                    300,\n                    keyframes([\n                        style({ opacity: 0, transform: 'translateY(-100%)', offset: 0 }),\n                        style({ opacity: 1, transform: 'translateY(8px)', offset: 0.3 }),\n                        style({ opacity: 1, transform: 'translateY(0)', offset: 1 }),\n                    ])\n                ),\n            ]),\n            transition(':leave', [\n                animate(\n                    400,\n                    keyframes([\n                        style({ opacity: 1, transform: 'translateX(0)', offset: 0 }),\n                        style({ opacity: 1, transform: 'translateX(-15px)', offset: 0.7 }),\n                        style({ opacity: 0, transform: 'translateX(100%)', offset: 1 }),\n                    ])\n                ),\n            ]),\n        ]),\n    ],\n})\nexport class ToastrComponent implements OnInit, OnDestroy {\n    public toasts: Toast[] = []\n    private toastSubscription: Subscription\n\n    constructor(private toastr: ToastrService) {}\n\n    public ngOnInit(): void {\n        this.toastSubscription = this.toastr.toastPushed.subscribe(toast => {\n            this.toasts.unshift(toast)\n            this.startTimer(toast)\n        })\n    }\n\n    public ngOnDestroy(): void {\n        this.toastSubscription.unsubscribe()\n    }\n\n    public hide(toast: Toast): void {\n        this.toasts.splice(\n            this.toasts.findIndex(t => t.id === toast.id),\n            1\n        )\n    }\n\n    public stopTimer(toast: Toast): void {\n        if (toast.timeout) {\n            clearTimeout(toast.timeout)\n        }\n    }\n\n    public startTimer(toast: Toast): void {\n        this.stopTimer(toast)\n        toast.timeout = setTimeout(() => this.hide(toast), 6000)\n    }\n}\n","export default \"<ng-container [ngSwitch]=\\\"notification.type\\\">\\n    <!-- Verification -->\\n    <ng-container *ngSwitchCase=\\\"'verification-approved'\\\"> {{ 'common.your-account-verified' | translate }} </ng-container>\\n\\n    <!-- Transactions -->\\n    <ng-container *ngSwitchCase=\\\"'transaction-processed'\\\">\\n        <ng-container [ngSwitch]=\\\"transaction?.type\\\">\\n            <ng-container *ngSwitchCase=\\\"'deposit'\\\">\\n                {{ 'common.your' | translate }} <span class=\\\"text-info text-uppercase\\\">{{ transaction?.method }}</span>\\n                {{ 'common.deposit' | translate | lowercase }} <span class=\\\"text-info\\\">{{ transaction?.id | truncate: false:7:'' }}</span>\\n                {{ 'common.of' | translate }}\\n                <span class=\\\"text-green\\\"\\n                    >{{ transaction?.amount | amount: transaction?.currency?.decimalPlaces }} {{ transaction?.currency?.code }}</span\\n                >\\n                {{ 'common.has-been-completed' | translate }}\\n            </ng-container>\\n            <ng-container *ngSwitchCase=\\\"'transfer'\\\">\\n                {{ 'common.you-received' | translate }}\\n                <span class=\\\"text-green\\\"\\n                    >{{ transaction?.settledAmount | amount: transaction?.currency?.decimalPlaces }} {{ transaction?.currency?.code }}</span\\n                >\\n                {{ 'common.from' | translate | lowercase }}\\n                <ng-container *ngTemplateOutlet=\\\"userOrAppTemplate; context: transaction?.baseWallet\\\"></ng-container> {{ 'common.using' | translate }}\\n                <span class=\\\"text-info\\\">{{ transaction?.id | truncate: false:7:'' }}</span>\\n            </ng-container>\\n            <ng-container *ngSwitchCase=\\\"'withdrawal'\\\">\\n                {{ 'common.your' | translate }} <span class=\\\"text-info text-uppercase\\\">{{ transaction?.method }}</span>\\n                {{ 'common.withdrawal' | translate | lowercase }} <span class=\\\"text-info\\\">{{ transaction?.id | truncate: false:7:'' }}</span>\\n                {{ 'common.of' | translate }}\\n                <span class=\\\"text-green\\\"\\n                    >{{ transaction?.amount | amount: transaction?.currency?.decimalPlaces }} {{ transaction?.currency?.code }}</span\\n                >\\n                {{ 'common.has-been-completed' | translate }}\\n            </ng-container>\\n        </ng-container>\\n    </ng-container>\\n\\n    <!-- Conversions -->\\n    <ng-container *ngSwitchCase=\\\"'conversion-offered'\\\">\\n        {{ 'common.you-received-an-offer' | translate }}\\n        <span class=\\\"text-danger\\\"\\n            >{{ conversion?.baseTransaction?.amount | amount: conversion?.baseTransaction?.currency?.decimalPlaces }}\\n            {{ conversion?.baseTransaction?.currency?.code }}</span\\n        >\\n        to\\n        <span class=\\\"text-green\\\"\\n            >{{ conversion?.counterTransaction?.amount | amount: conversion?.counterTransaction?.currency?.decimalPlaces }}\\n            {{ conversion?.counterTransaction?.currency?.code }}\\n        </span>\\n        <ng-container *ngIf=\\\"conversion?.status === 'offered'\\\"\\n            ><button\\n                class=\\\"btn btn-success btn-sm e2e-accept-conversion-offer-btn\\\"\\n                [routerLink]=\\\"['/services/conversions', conversion?.id]\\\"\\n                [queryParams]=\\\"{ action: 'accept' }\\\"\\n                (click)=\\\"$event.preventDefault(); $event.stopPropagation()\\\"\\n            >\\n                {{ 'common.accept' | translate }}\\n            </button>\\n            /\\n            <button\\n                class=\\\"btn btn-danger btn-sm e2e-reject-conversion-offer-btn\\\"\\n                [routerLink]=\\\"['/services/conversions', conversion?.id]\\\"\\n                [queryParams]=\\\"{ action: 'decline' }\\\"\\n                (click)=\\\"$event.preventDefault(); $event.stopPropagation()\\\"\\n            >\\n                {{ 'common.decline' | translate }}\\n            </button></ng-container\\n        >\\n        <span class=\\\"text-danger\\\" *ngIf=\\\"conversion && ['declined', 'cancelled'].includes(conversion.status)\\\"\\n            >({{ (conversion?.status === 'declined' ? 'common.declined' : 'common.cancelled') | translate }})</span\\n        >\\n    </ng-container>\\n\\n    <!-- Invoice -->\\n    <ng-container *ngSwitchCase=\\\"'invoice-received'\\\">\\n        {{ 'common.you-receive-an-invoice' | translate }}: <span class=\\\"text-info\\\">{{ invoice?.subject }}</span>\\n    </ng-container>\\n    <ng-container *ngSwitchCase=\\\"'invoice-cancelled'\\\">\\n        {{ 'common.invoice-cancelled' | translate }}: <span class=\\\"text-danger\\\">{{ invoice?.subject }}</span>\\n    </ng-container>\\n    <ng-container *ngSwitchCase=\\\"'invoice-settled'\\\">\\n        {{ 'common.invoice-settled' | translate }}: <span class=\\\"text-success\\\">{{ invoice?.subject }}</span>\\n    </ng-container>\\n\\n    <!-- File -->\\n    <ng-container *ngSwitchCase=\\\"'poi-document-expiry'\\\">\\n        <span class=\\\"text-warning\\\">{{ 'common.your-poi-expire' | translate }}</span>\\n    </ng-container>\\n\\n    <!-- Contact -->\\n    <ng-container *ngSwitchCase=\\\"'added-as-contact'\\\">\\n        <ng-container *ngTemplateOutlet=\\\"userOrAppTemplate; context: { user: contact?.baseUser }\\\"></ng-container>\\n        {{ 'common.added-as-contact' | translate }}\\n    </ng-container>\\n\\n    <!-- Card Order -->\\n    <ng-container *ngSwitchCase=\\\"'card-order-approved'\\\">\\n        {{ 'common.your-card-order' | translate }} <span class=\\\"text-info\\\">{{ cardOrder?.id | truncate: false:7:'' }}</span>\\n        {{ 'common.has-been-approved' | translate }}\\n    </ng-container>\\n    <ng-container *ngSwitchCase=\\\"'card-order-shipped'\\\">\\n        {{ 'common.your-card-order' | translate }} <span class=\\\"text-info\\\">{{ cardOrder?.id | truncate: false:7:'' }}</span>\\n        {{ 'common.has-been-shipped' | translate }}\\n    </ng-container>\\n</ng-container>\\n\\n<!-- Helper -->\\n<ng-template let-user=\\\"user\\\" #userTemplate>\\n    <copy-wrap [value]=\\\"user?.accountNumber\\\">\\n        <span [ngbTooltip]=\\\"user?.accountNumber | accountNumber\\\">{{ user?.name }}</span>\\n    </copy-wrap>\\n</ng-template>\\n<ng-template let-user=\\\"user\\\" #userOrAppTemplate>\\n    <ng-container *ngIf=\\\"user; else app\\\">\\n        <copy-wrap *ngIf=\\\"allowUserCopy\\\" [value]=\\\"user.accountNumber\\\">\\n            <ng-container *ngTemplateOutlet=\\\"account\\\"></ng-container>\\n        </copy-wrap>\\n        <ng-container *ngIf=\\\"!allowUserCopy\\\">\\n            <ng-container *ngTemplateOutlet=\\\"account\\\"></ng-container>\\n        </ng-container>\\n        <ng-template #account>\\n            <span [ngbTooltip]=\\\"user?.accountNumber | accountNumber\\\">{{ user.name }}</span>\\n        </ng-template>\\n    </ng-container>\\n    <ng-template #app>\\n        {{ displayName }}\\n    </ng-template>\\n</ng-template>\\n\";","import { Pipe, PipeTransform } from '@angular/core'\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser'\n\n@Pipe({ name: 'safeUrl' })\nexport class SafeUrlPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    public transform(value: string): SafeUrl {\n        return this.sanitizer.bypassSecurityTrustUrl(value)\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { forkJoin, Subscription } from 'rxjs'\nimport { switchMap } from 'rxjs/operators'\nimport { ICardProgram, IFee } from '../api-interfaces'\nimport { SessionService } from '../services/session.service'\n\ninterface CardFeeSchedule {\n    topupFee: IFee | null\n    atmFee: string | null\n    atmDeclineFee: string | null\n    fx: string | null\n    declineTransaction: string | null\n    replacementFee: string | null\n    ecomFee: string | null\n    posFee: string | null\n    annualLoadingLimit: string | null\n    monthlySpendingLimit: string | null\n    dailyPosEcomLimit: string | null\n    dailyAtmLimit: string | null\n    unloadFundsFee: IFee | null\n}\n\nenum NiumCardProgram {\n    AERAPASS_P1 = '117cab0b-7992-4e4a-9581-1c241e77684d',\n    AERAPASS_P2 = '4409785f-3df4-42af-bcf2-df1d23194872',\n    AERAPASS_P3 = '5e4572d8-195c-4f3d-84da-6788c467543f',\n    AERAPASS_P4 = '96e53529-3807-44f2-88cc-8514b8826819',\n    AERAPASS_P5 = '172ba6d8-714b-45d2-9106-c2cc691af4d7',\n    QNET = '198b1bf4-5b99-45c1-b7ee-2785c2d05e92',\n    SGPMX_SILVER = '77b97782-788f-4102-b6bc-1607ce97b0c4',\n    SGPMX_GOLD = '2f45a69f-5adb-4cab-b4d6-5af9a3cf4c8b',\n}\n\n@Component({\n    selector: 'card-fee-schedule',\n    templateUrl: 'card-fee-schedule.component.html',\n})\nexport class CardFeeScheduleComponent implements OnInit {\n    public cardFees: CardFeeSchedule = {\n        topupFee: null,\n        atmFee: null,\n        atmDeclineFee: null,\n        fx: null,\n        declineTransaction: null,\n        replacementFee: null,\n        ecomFee: null,\n        posFee: null,\n        annualLoadingLimit: null,\n        monthlySpendingLimit: null,\n        dailyPosEcomLimit: null,\n        dailyAtmLimit: null,\n        unloadFundsFee: null,\n    }\n\n    private subscriptions = new Subscription()\n\n    constructor(protected http: HttpClient, public session: SessionService, public translate: TranslateService) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    switchMap(user =>\n                        forkJoin<IFee[], ICardProgram | undefined>([\n                            this.http.get<IFee[]>(`/users/${user.id}/fee-schedule`, {\n                                params: {\n                                    currencyCode: 'USD',\n                                },\n                            }),\n                            this.http.get<ICardProgram>(`/users/${this.session.user.id}/card-program`),\n                        ])\n                    )\n                )\n                .subscribe(([fees, userCardProgram]) => {\n                    const cardFee = fees.find(fee => fee.method === 'card') || null\n                    const unloadFundsFee = fees.find(fee => fee.method === 'card' && fee.type === 'deposit') || null\n\n                    if (!userCardProgram) {\n                        this.cardFees = this.getCardFeeSchedule(null, cardFee, unloadFundsFee)\n                    } else {\n                        this.cardFees = this.getCardFeeSchedule(userCardProgram, cardFee, unloadFundsFee)\n                    }\n                })\n        )\n    }\n\n    public getCardFeeSchedule(\n        cardProgram: ICardProgram | null,\n        topupFee: IFee | null,\n        unloadFundsFee: IFee | null\n    ): CardFeeSchedule {\n        switch (cardProgram?.niumClientId) {\n            case NiumCardProgram.AERAPASS_P1:\n                return {\n                    topupFee,\n                    atmFee: '4',\n                    atmDeclineFee: '0.5',\n                    fx: '2.75',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.AERAPASS_P2:\n                return {\n                    topupFee,\n                    atmFee: '8',\n                    atmDeclineFee: '0.5',\n                    fx: '2.75',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0.05',\n                    posFee: '0.05',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.AERAPASS_P3:\n                return {\n                    topupFee,\n                    atmFee: '5',\n                    atmDeclineFee: '0.5',\n                    fx: '2.75',\n                    declineTransaction: '0.25',\n                    replacementFee: '5',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.AERAPASS_P4:\n                return {\n                    topupFee,\n                    atmFee: '10',\n                    atmDeclineFee: '1',\n                    fx: '1.25',\n                    declineTransaction: '10',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.AERAPASS_P5:\n                return {\n                    topupFee,\n                    atmFee: '8',\n                    atmDeclineFee: '0.5',\n                    fx: '3.25',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0.25',\n                    posFee: '0.25',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.QNET:\n                return {\n                    topupFee,\n                    atmFee: '5',\n                    atmDeclineFee: '0.5',\n                    fx: '2.00',\n                    declineTransaction: '0',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.SGPMX_GOLD:\n                return {\n                    topupFee,\n                    atmFee: '5',\n                    atmDeclineFee: '0.5',\n                    fx: '2.95',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            case NiumCardProgram.SGPMX_SILVER:\n                return {\n                    topupFee,\n                    atmFee: '5',\n                    atmDeclineFee: '0.5',\n                    fx: '3.50',\n                    declineTransaction: '0.25',\n                    replacementFee: '10',\n                    ecomFee: '0',\n                    posFee: '0',\n                    annualLoadingLimit: cardProgram.maxCardBalance || null,\n                    monthlySpendingLimit: '750000',\n                    dailyPosEcomLimit: '25000',\n                    dailyAtmLimit: '1500',\n                    unloadFundsFee,\n                }\n            default:\n                return {\n                    topupFee,\n                    atmFee: null,\n                    atmDeclineFee: null,\n                    fx: null,\n                    declineTransaction: null,\n                    replacementFee: null,\n                    ecomFee: null,\n                    posFee: null,\n                    annualLoadingLimit: null,\n                    monthlySpendingLimit: null,\n                    dailyPosEcomLimit: null,\n                    dailyAtmLimit: null,\n                    unloadFundsFee: null,\n                }\n        }\n    }\n\n    public isZeroFee(fee: string): boolean {\n        return new BigNumber(fee).isZero()\n    }\n\n    public determineFees(type: keyof CardFeeSchedule): string {\n        let result = ''\n        const fee = this.cardFees[type] as IFee\n        if (\n            (fee && fee.fixed && !this.isZeroFee(fee.fixed || '0')) ||\n            (fee && fee.relative && !this.isZeroFee(fee.relative))\n        ) {\n            if (fee.fixed && !this.isZeroFee(fee.fixed)) {\n                result += new BigNumber(fee.fixed).toFixed(2) + ' USD'\n            }\n            if (fee.fixed && !this.isZeroFee(fee.fixed) && fee.relative && !this.isZeroFee(fee.relative)) {\n                result += ' + '\n            }\n            if (fee.relative && !this.isZeroFee(fee.relative)) {\n                result += new BigNumber(fee.relative).times(100).toFixed(2) + '%'\n            }\n        } else {\n            result = this.translate.instant('common.free').toUpperCase()\n        }\n        return result\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita'\nimport { ICurrency } from '../../common/api-interfaces'\n\nexport interface CurrenciesState extends EntityState<ICurrency, string> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'currencies', idKey: 'code' })\nexport class CurrenciesStore extends EntityStore<CurrenciesState> {\n    constructor() {\n        super()\n    }\n}\n","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable, of, NEVER } from 'rxjs'\nimport { mergeMap, switchMap } from 'rxjs/operators'\nimport { LogoutService } from './services/logout.service'\nimport { SessionService } from './services/session.service'\n\n@Injectable()\nexport class TokenRequestInterceptor implements HttpInterceptor {\n    public readonly unauthorizedRoutes = ['/token']\n    constructor(private session: SessionService, private logout: LogoutService) {}\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return of(undefined).pipe(\n            switchMap(() => {\n                if (this.session.hasValidRefreshToken() && this.session.getExpiryTimeInSeconds() < 15) {\n                    return this.logout.logout().pipe(mergeMap(() => NEVER))\n                }\n                let headers = req.headers || new HttpHeaders()\n                if (req.url !== '/token' && this.session.hasValidToken() && !headers.has('Authorization')) {\n                    headers = headers.set('Authorization', 'Bearer ' + this.session.token)\n                }\n                return next.handle(req.clone({ headers, url: '/.api' + req.url }))\n            })\n        )\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'truncate' })\nexport class TruncatePipe implements PipeTransform {\n    public transform(value: string | null | undefined, wordwise = true, max = 100, tail = '...'): string {\n        if (!value) {\n            return ''\n        }\n        if (value.length <= max) {\n            return value\n        }\n        value = value.substr(0, max)\n        if (wordwise) {\n            const lastSpace = value.lastIndexOf(' ')\n            if (lastSpace !== -1) {\n                value = value.substr(0, lastSpace)\n                if (value[value.length - 1] === ',') {\n                    value = value.substr(0, value.length - 1)\n                }\n            }\n        }\n        return value + tail\n    }\n}\n","import { Component, Input } from '@angular/core'\nimport { IUser } from '../api-interfaces'\n\n@Component({\n    selector: 'account-number',\n    templateUrl: 'account-number.component.html',\n})\nexport class AccountNumberComponent {\n    @Input()\n    public user: IUser\n}\n","import { Component } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { SessionService } from 'src/app/common/services/session.service'\nimport { TokenService } from 'src/app/common/services/token.service'\nimport { LogoutService } from '../../../common/services/logout.service'\nimport { ToastrService } from '../../../common/services/toastr.service'\n\n@Component({ selector: 'logout-timer-modal', templateUrl: 'logout-timer-modal.component.html' })\nexport class LogoutTimerModalComponent {\n    constructor(\n        public activeModal: NgbActiveModal,\n        private logoutService: LogoutService,\n        private toastr: ToastrService,\n        public session: SessionService,\n        private tokenService: TokenService,\n        public translate: TranslateService\n    ) {}\n\n    public logout(): void {\n        this.logoutService.logout().subscribe(() => {\n            this.toastr.success(this.translate.instant('common.you-have-been-logged-out'))\n        })\n    }\n\n    public refresh(): void {\n        this.tokenService.refresh().subscribe(() => {\n            this.toastr.success(this.translate.instant('logout-timer.your-session-has-been-refreshed'))\n        })\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core'\nimport { CopyIconComponent } from '../copy-icon/copy-icon.component'\n\n@Component({\n    selector: 'copy-wrap',\n    templateUrl: 'copy-wrap.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CopyWrapComponent extends CopyIconComponent {}\n","import { IContact } from '../../api-interfaces'\nimport { User } from './user.model'\n\nexport class Contact implements IContact {\n    public id: string\n    public baseUser: User\n    public counterUser: User\n\n    constructor(data: IContact = {} as IContact) {\n        Object.assign(this, data)\n        if (data.baseUser) {\n            this.baseUser = new User(data.baseUser)\n        }\n        if (data.counterUser) {\n            this.counterUser = new User(data.counterUser)\n        }\n    }\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\nimport { enableAkitaProdMode, persistState } from '@datorama/akita'\nimport BigNumber from 'bignumber.js'\nimport { AppModule } from './app/app.module'\n\nfunction logSelfXssMessage(): void {\n    /* eslint-disable no-console */\n    console.log('%cStop!', 'color: red; font-size: x-large')\n    console.log(\n        `%cThis is a browser feature intended for developers only. If someone told you to copy-paste something here, it is a scam and will give them access to your account.`,\n        'font-size: large'\n    )\n    console.log('%cAre you a developer seeking a job? Ask hire() for more information.', 'color: orange')\n    /* eslint-enable no-console */\n}\n\n;(window as any).hire = () => {\n    // eslint-disable-next-line no-console\n    console.log('%cHey there! For job inquiries, contact us at jobs@aerapass.com', 'color:green')\n}\n\nBigNumber.config({ EXPONENTIAL_AT: [-6, 18] })\nif (!window.DEBUG) {\n    enableProdMode()\n    enableAkitaProdMode()\n    logSelfXssMessage()\n}\n\nconst storage = persistState()\n\nconst providers = [{ provide: 'persistStorage', useValue: storage }]\n\nplatformBrowserDynamic(providers)\n    .bootstrapModule(AppModule)\n    // eslint-disable-next-line no-console\n    .catch(error => console.error(error))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}