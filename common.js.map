{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/common/models/accounting/conversion.model.ts","./src/app/common/services/accounting/conversion.service.ts","./src/app/common/guards/permission.guard.ts","./node_modules/@ionic/core/dist/esm/button-active-d4bd4f74.js","./src/app/common/services/accounting/beneficiary.service.ts","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./src/app/common/services/login.service.ts","./node_modules/@ionic/core/dist/esm/framework-delegate-94e770cc.js","./src/app/common/payment/payment.guard.ts"],"names":[],"mappings":"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BAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"common.js","sourcesContent":["const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { ConversionStatus, IConversion, Transaction } from '../../api-interfaces'\nimport { User } from '../core/user.model'\nimport { Currency } from './currency.model'\n\nexport class Conversion implements IConversion {\n    public id: string\n    public status: ConversionStatus\n    public exchangeRate: string | null\n    public user: User\n    public currency: Currency\n    public baseTransaction: Transaction\n    public counterTransaction: Transaction\n    public expiresAt: string\n    public createdAt: string\n    public updatedAt: string\n\n    constructor(data: IConversion) {\n        Object.assign(this, data)\n        if (data.currency) {\n            this.currency = new Currency(data.currency)\n        }\n        if (data.user) {\n            this.user = new User(data.user)\n        }\n    }\n\n    public get userName(): string {\n        return this.user.name\n    }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Operation } from 'fast-json-patch'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { IConversion, RPCResult } from '../../api-interfaces'\nimport { Conversion } from '../../models/accounting/conversion.model'\n\nexport interface ConversionCreatePayload {\n    currency: {\n        code: string\n        [k: string]: any\n    }\n    baseTransaction: {\n        amount: string\n        currency: {\n            code: string\n            [k: string]: any\n        }\n    }\n    user?: {\n        id: string\n        [k: string]: any\n    } | null\n}\n\nexport interface ConversionOfferPayload {\n    exchangeRate: string\n    expiresAt: string\n}\n\nexport interface ConversionDirectPayload {\n    exchangeRate: string\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ConversionService {\n    public static readonly apiUrl = '/conversions'\n\n    constructor(private http: HttpClient) {}\n\n    public fetchById(id: string): Observable<Conversion> {\n        return this.http\n            .get<IConversion>(`${ConversionService.apiUrl}/${id}`)\n            .pipe(map(payload => new Conversion(payload)))\n    }\n\n    public create(conversionPayload: ConversionCreatePayload): Observable<Conversion> {\n        return this.http\n            .post<IConversion>(ConversionService.apiUrl, conversionPayload)\n            .pipe(map(payload => new Conversion(payload)))\n    }\n\n    public patch(id: string, operations: Operation[]): Observable<Conversion> {\n        return this.http\n            .patch<Conversion>(`${ConversionService.apiUrl}/${id}`, operations, {\n                headers: new HttpHeaders({ 'Content-Type': 'application/json-patch+json' }),\n            })\n            .pipe(map(payload => new Conversion(payload)))\n    }\n\n    public makeOffer(id: string, params: ConversionOfferPayload): Observable<Conversion> {\n        return this.http\n            .post<RPCResult<IConversion>>(\n                `${ConversionService.apiUrl}/${id}`,\n                {\n                    id: Math.round(Math.random() * 10000),\n                    jsonrpc: '2.0',\n                    method: 'makeOffer',\n                    params,\n                },\n                {\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json-rpc',\n                    }),\n                }\n            )\n            .pipe(map(rpcResult => new Conversion(rpcResult.result)))\n    }\n\n    public directlyConvert(id: string, params: ConversionDirectPayload): Observable<Conversion> {\n        return this.http\n            .post<RPCResult<IConversion>>(\n                `${ConversionService.apiUrl}/${id}`,\n                {\n                    id: Math.round(Math.random() * 10000),\n                    jsonrpc: '2.0',\n                    method: 'directlyConvert',\n                    params,\n                },\n                {\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json-rpc',\n                    }),\n                }\n            )\n            .pipe(map(rpcResult => new Conversion(rpcResult.result)))\n    }\n\n    public accept(id: string): Observable<Conversion> {\n        return this.http\n            .post<RPCResult<IConversion>>(\n                `${ConversionService.apiUrl}/${id}`,\n                {\n                    id: Math.round(Math.random() * 10000),\n                    jsonrpc: '2.0',\n                    method: 'accept',\n                },\n                {\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json-rpc',\n                    }),\n                }\n            )\n            .pipe(map(rpcResult => new Conversion(rpcResult.result)))\n    }\n\n    public count(where: any, urlPrefix = ''): Observable<number> {\n        return this.http\n            .head(`${urlPrefix}${ConversionService.apiUrl}`, {\n                observe: 'response',\n                params: new HttpParams().set('where', JSON.stringify(where)),\n            })\n            .pipe(\n                map(response =>\n                    response.headers && response.headers.has('x-total-count')\n                        ? ~~response.headers.get('x-total-count')!\n                        : 0\n                )\n            )\n    }\n\n    public countByUserId(userId: string, where: any): Observable<number> {\n        return this.count(where, `/users/${userId}`)\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, UrlTree } from '@angular/router'\nimport { Permission } from '../api-interfaces'\nimport { SessionService } from '../services/session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PermissionGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n    public canActivate(route: ActivatedRouteSnapshot): boolean | UrlTree | Promise<UrlTree> {\n        const permissions = route.data.permissions as Permission[]\n        if (!permissions.every(permission => this.session.user.hasPermission(permission))) {\n            return this.router.parseUrl('/404')\n        }\n        return true\n    }\n}\n","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-34cb2743.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { BeneficiaryMethod, BeneficiaryType, IBeneficiary } from '../../api-interfaces'\nimport { Beneficiary } from '../../models/accounting/beneficiary.model'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BeneficiaryService {\n    constructor(private http: HttpClient) {}\n\n    public count(params: {\n        type: BeneficiaryType\n        method: BeneficiaryMethod\n        currencyCode: string\n    }): Observable<number> {\n        return this.http\n            .head('/beneficiaries', {\n                observe: 'response',\n                params: {\n                    type: params.type,\n                    method: params.method,\n                    currencyCode: params.currencyCode,\n                },\n            })\n            .pipe(\n                map(response =>\n                    response.headers && response.headers.has('x-total-count')\n                        ? ~~response.headers.get('x-total-count')!\n                        : 0\n                )\n            )\n    }\n\n    public fetchDepositInstruction(\n        method: BeneficiaryMethod,\n        currencyCode: string,\n        userId?: string\n    ): Observable<Beneficiary | null> {\n        return this.http\n            .get<IBeneficiary[]>((userId ? `/users/${userId}` : '') + '/deposit-instructions', {\n                params: {\n                    method,\n                },\n            })\n            .pipe(\n                map(beneficiaries => {\n                    const withSameCurrency = beneficiaries?.find(\n                        beneficiary => beneficiary.currency.code === currencyCode\n                    )\n                    switch (method) {\n                        case 'swift':\n                            if (withSameCurrency) {\n                                return new Beneficiary(withSameCurrency)\n                            }\n                            const withUsd = beneficiaries?.find(beneficiary => beneficiary.currency.code === 'USD')\n                            if (withUsd) {\n                                return new Beneficiary(withUsd)\n                            }\n                            return null\n                        case 'local':\n                            if (withSameCurrency) {\n                                return new Beneficiary(withSameCurrency)\n                            }\n                            return null\n                        default:\n                            return null\n                    }\n                })\n            )\n    }\n}\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","import { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { flatMap } from 'rxjs/operators'\nimport { SessionService, User } from './session.service'\nimport { TokenOptions, TokenService } from './token.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LoginService {\n    constructor(private session: SessionService, private tokenService: TokenService) {}\n\n    public login(options: TokenOptions): Observable<User> {\n        return this.tokenService\n            .fetch(options)\n            .pipe(flatMap(({ refreshToken, token }) => this.session.login(refreshToken, token)))\n    }\n}\n","import { c as componentOnReady } from './helpers-1457892a.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, UrlTree } from '@angular/router'\nimport { Permission } from '../api-interfaces'\nimport { SessionService } from '../services/session.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n\n    public canActivate(route: ActivatedRouteSnapshot): boolean | UrlTree | Promise<UrlTree> {\n        if (\n            !this.session.user.hasPermission('payment-swift') &&\n            !this.session.user.hasPermission('payment-local') &&\n            !this.session.user.hasPermission('payment-crypto')\n        ) {\n            return this.router.parseUrl('/404')\n        }\n        const method = route.queryParamMap.get('method') || 'swift'\n        if (!this.session.user.hasPermission(`payment-${method}` as Permission)) {\n            const permissions = this.session.user.permissions\n                .filter(permission => permission.startsWith('payment'))\n                .map(permission => permission.split('-')[1])\n            const paymentPermission =\n                permissions.find(permission => permission === 'swift') ||\n                permissions.find(permission => permission === 'local') ||\n                'crypto'\n            return this.router.parseUrl(\n                route.data.redirectTo + `${paymentPermission === 'swift' ? '' : '?method=' + paymentPermission}`\n            )\n        }\n        return true\n    }\n}\n"],"sourceRoot":"webpack:///"}