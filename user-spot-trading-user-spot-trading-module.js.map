{"version":3,"sources":["./src/app/user-spot-trading/user-spot-trading.component.ts","./src/app/user-spot-trading/user-spot-trading.module.ts","./src/app/user-spot-trading/user-spot-trading-routing.module.ts","./src/app/user-spot-trading/user-spot-trading.component.html"],"names":[],"mappings":"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","file":"user-spot-trading-user-spot-trading-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http'\nimport { ChangeDetectorRef, Component } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport BigNumber from 'bignumber.js'\nimport { Observable } from 'rxjs'\nimport { WalletsQuery } from 'src/app/store/wallets/wallets.query'\nimport { ISpotTrade, SpotTradeInstrument, Trade, Wallet } from '../common/api-interfaces'\nimport { ListV2Component } from '../common/list-v2.component'\nimport { SessionService } from '../common/services/session.service'\nimport { ToastrService } from '../common/services/toastr.service'\n\n@Component({\n    selector: 'user-spot-trading',\n    templateUrl: 'user-spot-trading.component.html',\n})\nexport class UserSpotTradingComponent extends ListV2Component<ISpotTrade> {\n    public wallets$: Observable<(Wallet & { value: string })[]>\n\n    public defaultLimit = this.limitOpts[0]\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        protected toastr: ToastrService,\n        private walletsQuery: WalletsQuery\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session)\n\n        this.apiUrl = `/users/${this.session.user.id}/spot-trades`\n        this.wallets$ = this.walletsQuery.filteredBalances$\n    }\n\n    public buildCurrencyPair(instrument: SpotTradeInstrument): string {\n        if (!instrument) {\n            return ''\n        }\n        const parts = instrument.split('.')\n        return `${parts[0].slice(0, 3)} / ${parts[0].slice(3, 6)}`\n    }\n\n    public getBaseCurrency(instrument: SpotTradeInstrument): string {\n        if (!instrument) {\n            return ''\n        }\n        const parts = instrument!.split('.')\n        return parts[0].slice(0, 3)\n    }\n\n    public getCounterCurrency(instrument: SpotTradeInstrument): string {\n        if (!instrument) {\n            return ''\n        }\n        const parts = instrument!.split('.')\n        return parts[0].slice(3, 6)\n    }\n\n    public getTotal(trade: Trade): string {\n        return new BigNumber(trade.price!).times(trade.quantity).toFixed(2, 1)\n    }\n\n    public onExecuteTrade(): void {\n        this.updateEvent.next()\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { SpotTradingModule } from '../common/spot-trading/spot-trading.module'\nimport { DashboardModule } from '../dashboard/dashboard.module'\nimport { UserSpotTradingRoutingModule } from './user-spot-trading-routing.module'\nimport { UserSpotTradingComponent } from './user-spot-trading.component'\n\n@NgModule({\n    declarations: [UserSpotTradingComponent],\n    exports: [UserSpotTradingComponent],\n    imports: [CommonModule, UserSpotTradingRoutingModule, DashboardModule, SpotTradingModule],\n})\nexport class UserSpotTradingModule {}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { PermissionGuard } from '../common/guards/permission.guard'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { UserSpotTradingComponent } from './user-spot-trading.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UserSpotTradingComponent,\n        canActivate: [LoggedInAuthGuard, PermissionGuard],\n        data: {\n            permissions: ['spot-trades'],\n        },\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class UserSpotTradingRoutingModule {}\n","export default \"<div class=\\\"container pt-page\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <spot-trading-feed></spot-trading-feed>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-7\\\">\\n            <account-balance class=\\\"card\\\" [compact]=\\\"true\\\" [extended]=\\\"true\\\" filter=\\\"['BTC', 'ETH', 'LTC', 'USDT.erc20', 'USD']\\\"></account-balance>\\n        </div>\\n        <div class=\\\"col-lg-10\\\">\\n            <section class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <h5 class=\\\"mb-0\\\">{{ 'common.spot-trading' | translate | titlecase }}</h5>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <spot-trading-form (onExecuteTrade)=\\\"onExecuteTrade()\\\"></spot-trading-form>\\n                </div>\\n            </section>\\n        </div>\\n        <div class=\\\"col-lg-7\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{ 'common.history' | translate }}</div>\\n                <ul class=\\\"list-group list-group-flush\\\">\\n                    <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n                        <li class=\\\"list-group-item py-2\\\" *ngFor=\\\"let trade of items\\\">\\n                            <div class=\\\"d-flex justify-content-between\\\">\\n                                <span> {{ buildCurrencyPair(trade.instrument) }}</span>\\n                                <span class=\\\"text-right\\\" [ngClass]=\\\"trade.side === 'buy' ? 'text-primary' : 'text-danger'\\\">\\n                                    {{ trade.side === 'buy' ? '+' : '-' }}{{ trade.quantity | amount: 7 }} {{ getBaseCurrency(trade.instrument) }}\\n                                </span>\\n                            </div>\\n                            <small class=\\\"d-flex justify-content-between\\\">\\n                                <span class=\\\"text-muted\\\">{{ trade.createdAt | date: 'short' }}</span>\\n                                <span class=\\\"text-muted text-right\\\">\\n                                    {{ getTotal(trade) | amount: 2 }} {{ getCounterCurrency(trade.instrument) }}\\n                                </span>\\n                            </small>\\n                        </li>\\n                        <li class=\\\"list-group-item py-3 text-center text-muted\\\" *ngIf=\\\"items.length === 0\\\">\\n                            <i>{{ 'common.no-trades-found' | translate }}</i>\\n                        </li>\\n                    </ng-container>\\n                </ul>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center mb-3\\\">\\n                <ngb-pagination\\n                    [(page)]=\\\"page\\\"\\n                    [collectionSize]=\\\"count\\\"\\n                    (pageChange)=\\\"select()\\\"\\n                    [pageSize]=\\\"limit\\\"\\n                    [maxSize]=\\\"5\\\"\\n                    [ellipses]=\\\"false\\\"\\n                    [rotate]=\\\"true\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                >\\n                </ngb-pagination>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}