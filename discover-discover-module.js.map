{"version":3,"sources":["./src/app/discover/offer/investment-confirmation/investment-confirmation.component.ts","./src/app/discover/offer/product-terms/product-terms.component.html","./src/app/discover/offer/offer.component.ts","./src/app/discover/discover.component.html","./src/app/discover/offer/investment-confirmation/investment-confirmation.component.html","./src/app/discover/discover.component.ts","./src/app/discover/user-allocations/user-allocations.component.ts","./node_modules/ease-component/index.js","./src/app/discover/offer/offer.component.html","./src/app/discover/user-allocations/user-allocations.component.html","./src/app/discover/offer/product-terms/product-terms.component.ts","./src/app/discover/discover.module.ts","./src/app/discover/discover-routing.module.ts","./node_modules/scroll/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAiD;AACa;AACH;AACL;AAClB;AACgC;AAEV;AACP;AACwB;AAC+C;AAC/C;AACF;AACJ;IAMxD,+BAA+B,SAA/B,+BAAgC,SAAQ,iIAA4B;IAS7E,YACI,KAAqB,EACrB,YAA0B,EAC1B,OAAuB,EACvB,YAA0B,EAC1B,SAA2B,EACpB,QAAyB;QAEhC,KAAK,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,CAAC;QAFrD,aAAQ,GAAR,QAAQ,CAAiB;QAd7B,gBAAW,GAAG,gEAAW;QACzB,iBAAY,GAAG,yDAAY;QAC3B,cAAS,GAAG,4EAAS;QAGrB,kBAAa,GAAG,KAAK;IAY5B,CAAC;IAEM,QAAQ;QACX,KAAK,CAAC,QAAQ,EAAE;QAChB,IAAI,CAAC,MAAM,GAAG,kFAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;IACpH,CAAC;IAEM,iBAAiB,CAAC,MAAc,EAAE,KAAa;QAClD,OAAO,IAAI,mDAAS,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;IACtD,CAAC;CACJ;;YA7CQ,yEAAc;YAWd,4EAAY;YADZ,gFAAc;YAPd,kFAAY;YAFZ,oEAAgB;YAQhB,kFAAe;;AAQX,+BAA+B;IAJ3C,+DAAS,CAAC;QACP,QAAQ,EAAE,yBAAyB;QACnC,oGAAqD;KACxD,CAAC;GACW,+BAA+B,CA4B3C;AA5B2C;;;;;;;;;;;;;ACnB5C;AAAe,8HAA+D,4CAA4C,sHAAsH,oDAAoD,0DAA0D,yHAAyH,sXAAsX,sCAAsC,4NAA4N,yCAAyC,kJAAkJ,gCAAgC,iHAAiH,+BAA+B,gCAAgC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz6C;AACsB;AAEf;AACM;AACC;AACV;AACtB;AAC2B;AACb;AAYU;AACP;AACU;AACY;AACuC;AAC9B;IAMlE,cAAc,SAAd,cAAc;IAsBvB,YACY,KAAqB,EACrB,IAAgB,EAChB,QAAkB,EAClB,OAAuB,EACvB,MAAc;QAJd,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAY;QAChB,aAAQ,GAAR,QAAQ,CAAU;QAClB,YAAO,GAAP,OAAO,CAAgB;QACvB,WAAM,GAAN,MAAM,CAAQ;QA1BnB,mBAAc,GAAG,IAAI;QACrB,gBAAW,GAAG,iEAAW;QACzB,iBAAY,GAAG,0DAAY;QAC3B,cAAS,GAAG,4EAAS;QACrB,iBAAY,GAAG,6EAAY;QAC3B,eAAU,GAAgB,EAAE;QAI5B,eAAU,GAAwB;YACrC,eAAe,EAAE;gBACb,IAAI,EAAE,YAAY;aACN;YAChB,OAAO,EAAE,EAAa;SACzB;QAKO,kBAAa,GAAG,IAAI,iDAAY,EAAE;IAQvC,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6FAAqB,EAAE;gBACpD,WAAW,EAAE,eAAe;gBAC5B,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,KAAK;aAClB,CAAC;YACF,MAAM,SAAS,GAAG,KAAK,CAAC,iBAA0C;YAClE,MAAM,qBAAqB,GAAG,IAAI,4CAAO,EAAiB;YAC1D,SAAS,CAAC,aAAa,GAAG,qBAAqB,CAAC,YAAY,EAAE;YAC9D,KAAK,CAAC,MAAM;iBACP,IAAI,CAAC,GAAG,EAAE;gBACP,IAAI,CAAC,cAAc,GAAG,KAAK;YAC/B,CAAC,CAAC;iBACD,KAAK,CAAC,GAAG,EAAE;gBACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;YACvC,CAAC,CAAC;YAEN,IAAI,CAAC,IAAI;iBACJ,GAAG,CAAU,aAAa,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC;iBACtD,IAAI,CACD,2DAAG,CAAC,OAAO,CAAC,EAAE;gBACV,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC;YACrD,CAAC,CAAC,EACF,+DAAO,CAAC,OAAO,CAAC,EAAE,CACd,qDAAQ,CAAC;gBACL,+CAAE,CAAC,OAAO,CAAC;gBACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAA0C,aAAa,OAAO,CAAC,EAAE,QAAQ,CAAC;aAC1F,CAAC,CACL,CACJ;iBACA,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE;gBAC5B,IAAI,CAAC,OAAO,GAAG,OAAO;gBACtB,IAAI,CAAC,KAAK,GAAG,qDAAM,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;gBAC5D,IAAI,CAAC,UAAU,CAAC,OAAQ,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE;gBACxC,IAAI,CAAC,UAAU,CAAC,eAAgB,CAAC,aAAa,GAAG;oBAC7C,OAAO;iBACA;YACf,CAAC,CAAC;YAEN,IAAI,CAAC,aAAa,CAAC,GAAG,CAClB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACrC,IAAI,CAAC,UAAU,CAAC,eAAgB,CAAC,UAAU,GAAG;oBAC1C,IAAI,EAAE,IAAI,oEAAI,CAAC,IAAI,CAAU;iBACtB;gBACX,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,oEAAI,CAAC,IAAI,CAAU;YAClD,CAAC,CAAC,CACL;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,IAAI;aACJ,GAAG,CAAuB,aAAa,EAAE;YACtC,MAAM,EAAE;gBACJ,KAAK,EAAE,GAAG,GAAG,EAAE;gBACf,aAAa,EAAE,MAAM;aACxB;SACJ,CAAC;aACD,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI;YAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,UAAU,CAAC,eAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;aACjE;QACL,CAAC,CAAC;IACV,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IACpC,CAAC;IAEM,MAAM;QACT,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YACxB,OAAM;SACT;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2HAA+B,EAAE;YAC9D,WAAW,EAAE,eAAe;YAC5B,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,KAAK;SAClB,CAAC;QACF,MAAM,SAAS,GAAG,KAAK,CAAC,iBAAoD;QAC5E,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,eAAgB;QACxD,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;QAChC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;QAE5B,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,IAAI;iBACJ,IAAI,CAAa,cAAc,EAAE;gBAC9B,eAAe,EAAE;oBACb,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,eAAgB,CAAC,MAAM,GAAG,EAAE;oBACpD,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,eAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE;iBACrE;gBACD,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,OAAQ,CAAC,EAAE,EAAE;gBAC5C,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,IAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;aACvE,CAAC;iBACD,SAAS,CACN,GAAG,EAAE;gBACD,SAAS,CAAC,WAAW,GAAG,IAAI;gBAC5B,SAAS,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,EAAE;oBACxC,KAAK,CAAC,KAAK,EAAE;oBACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,CAAC,CAAC;YACN,CAAC,EACD,GAAG,EAAE;gBACD,SAAS,CAAC,WAAW,GAAG,KAAK;gBAC7B,SAAS,CAAC,KAAK,EAAE;YACrB,CAAC,CACJ;QACT,CAAC,CAAC;IACN,CAAC;CACJ;;YAvKQ,8DAAc;YAHd,+DAAU;YAMV,mEAAQ;YAkBR,gFAAc;YArBE,sDAAM;;;wBA8C1B,uDAAS,SAAC,WAAW;;AAjBb,cAAc;IAJ1B,+DAAS,CAAC;QACP,QAAQ,EAAE,OAAO;QACjB,kFAAmC;KACtC,CAAC;GACW,cAAc,CA0I1B;AA1I0B;;;;;;;;;;;;;AChC3B;AAAe,sNAAuJ,2DAA2D,iNAAiN,iCAAiC,wDAAwD,2CAA2C,6CAA6C,4BAA4B,iPAAiP,kCAAkC,wDAAwD,wBAAwB,QAAQ,aAAa,EAAE,GAAG,6CAA6C,gCAAgC,4vBAA4vB,gBAAgB,oOAAoO,kBAAkB,4EAA4E,wCAAwC,sHAAsH,mCAAmC,wOAAwO,E;;;;;;;;;;;;ACAhkF;AAAe,8HAA+D,2CAA2C,gHAAgH,sFAAsF,mHAAmH,6BAA6B,gCAAgC,sBAAsB,GAAG,8BAA8B,uBAAuB,6CAA6C,+CAA+C,mBAAmB,GAAG,iCAAiC,4MAA4M,oCAAoC,8LAA8L,8BAA8B,gJAAgJ,iBAAiB,IAAI,2BAA2B,kFAAkF,oHAAoH,4EAA4E,4CAA4C,GAAG,iCAAiC,iHAAiH,iCAAiC,sDAAsD,mBAAmB,GAAG,iCAAiC,yLAAyL,iCAAiC,wIAAwI,8BAA8B,0FAA0F,mBAAmB,GAAG,iCAAiC,yGAAyG,kDAAkD,0TAA0T,yCAAyC,yTAAyT,iDAAiD,MAAM,8DAA8D,sOAAsO,SAAS,wyDAAwyD,qBAAqB,wHAAwH,gCAAgC,4IAA4I,+BAA+B,sIAAsI,mIAAmI,+PAA+P,wCAAwC,kDAAkD,E;;;;;;;;;;;;;;;;;;;;;ACAlyM;AAEI;AACW;IAM3C,iBAAiB,SAAjB,iBAAkB,SAAQ,oEAAsB;;;QAClD,iBAAY,GAAG,yDAAY;QAC3B,iBAAY,GAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC;QAClF,WAAM,GAAG,WAAW;QACpB,aAAQ,GAAG,CAAC,MAAM,CAAC;QACnB,iBAAY,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE;IACzC,CAAC;CAAA;AANY,iBAAiB;IAJ7B,+DAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,qFAAsC;KACzC,CAAC;GACW,iBAAiB,CAM7B;AAN6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRW;AACsE;AAC/C;AAC3B;AACwB;AACwB;AAErC;AACU;IAM7C,wBAAwB,SAAxB,wBAAyB,SAAQ,8FAAoB;;;QACvD,gBAAW,GAAG,8EAAW;QACzB,sBAAiB,GAAG,kFAAiB;QACrC,qBAAgB,GAAG,iFAAgB;QACnC,YAAO,GAAG,wEAAO;QACjB,mBAAc,GAAG,+EAAc;QAC/B,iBAAY,GAAG,yDAAY;QAGxB,aAAQ,GAAG,CAAC,QAAQ,CAAC;QACrB,iBAAY,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE;IAY3C,CAAC;IAVU,IAAI;QACP,OAAO,+CAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CACrB,qEAAc,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EACvC,0DAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,mEAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,EAAE,cAAc;QACjD,CAAC,CAAC,EACF,8DAAO,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAC9B;IACL,CAAC;CACJ;AAtBY,wBAAwB;IAJpC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,6FAA8C;KACjD,CAAC;GACW,wBAAwB,CAsBpC;AAtBoC;;;;;;;;;;;;;ACdrzKA;AAAe,kFAAmB,0BAA0B,ueAAue,iBAAiB,oDAAoD,mBAAmB,gTAAgT,qCAAqC,sIAAsI,iBAAiB,iNAAiN,2CAA2C,mIAAmI,gDAAgD,GAAG,kCAAkC,iNAAiN,qCAAqC,4EAA4E,2CAA2C,2KAA2K,qCAAqC,4EAA4E,2CAA2C,oZAAoZ,sCAAsC,gUAAgU,+BAA+B,o9BAAo9B,yCAAyC,6MAA6M,+CAA+C,6RAA6R,iCAAiC,ykBAAykB,mCAAmC,uXAAuX,iCAAiC,6KAA6K,mCAAmC,6HAA6H,4CAA4C,uHAAuH,uCAAuC,0QAA0Q,kCAAkC,wbAAwb,yCAAyC,iOAAiO,E;;;;;;;;;;;;ACAxkO;AAAe,oPAAqL,oCAAoC,yOAAyO,6BAA6B,qIAAqI,iCAAiC,oFAAoF,oCAAoC,2SAA2S,4JAA4J,4BAA4B,8OAA8O,sEAAsE,UAAU,kBAAkB,EAAE,kFAAkF,gCAAgC,wMAAwM,sEAAsE,UAAU,oBAAoB,EAAE,kFAAkF,kCAAkC,0LAA0L,oCAAoC,mOAAmO,6BAA6B,mDAAmD,iCAAiC,mDAAmD,2CAA2C,mDAAmD,yCAAyC,mDAAmD,mCAAmC,oMAAoM,gFAAgF,+XAA+X,kDAAkD,6EAA6E,4DAA4D,oMAAoM,+CAA+C,m1BAAm1B,4BAA4B,wFAAwF,wCAAwC,maAAma,qFAAqF,gHAAgH,2LAA2L,wLAAwL,iCAAiC,wLAAwL,yCAAyC,mSAAmS,oGAAoG,wCAAwC,8CAA8C,mMAAmM,0GAA0G,wCAAwC,iDAAiD,oIAAoI,yCAAyC,44BAA44B,6BAA6B,6HAA6H,y7BAAy7B,6BAA6B,GAAG,QAAQ,GAAG,iCAAiC,yGAAyG,QAAQ,2nBAA2nB,E;;;;;;;;;;;;;;;;;;;;;;;ACA53T;AACpB;AACL;AAElB;AACmC;AAEvE,MAAM,IAAI,GAAG,mBAAO,CAAC,4BAAgB,CAAC;AACtC,MAAM,MAAM,GAAG,mBAAO,CAAC,oBAAQ,CAAC;IAMnB,qBAAqB,SAArB,qBAAqB;IAO9B,YACY,OAAmB,EACnB,MAAqB,EACtB,WAA2B,EAC3B,SAA2B;QAH1B,YAAO,GAAP,OAAO,CAAY;QACnB,WAAM,GAAN,MAAM,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,cAAS,GAAT,SAAS,CAAkB;QAR/B,WAAM,GAAG,KAAK;QACb,aAAQ,GAAG,KAAK;QA6ChB,kBAAa,GAAG,GAAG,EAAE;YACzB,iBAAiB;YACjB,IACI,IAAI,CAAC,QAAQ;gBACb,CAAC,IAAI,CAAC,MAAM;gBACZ,IAAI,CAAC,cAAc,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,EAAE,EAC3G;gBACE,UAAU,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,MAAM,GAAG,IAAI;gBACtB,CAAC,CAAC;aACL;QACL,CAAC;IAhDE,CAAC;IAEG,QAAQ;QACX,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CACxC,0DAAG,CAAC,GAAG,EAAE;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI;YACpB,UAAU,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,aAAa,EAAE;YACxB,CAAC,CAAC;QACN,CAAC,CAAC,CACL;QACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,kBAAkB,CAAgB;QACjG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC;IACtE,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC;IACzE,CAAC;IAEM,UAAU;QACb,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE;YACjG,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,IAAI,CAAC,SAAS;SACvB,CAAC;IACN,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,OAAO,CACf,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gCAAgC,CAAC,EACxD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CACzC;YACD,OAAM;SACT;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;IAC5B,CAAC;CAcJ;;YA3EmB,wDAAU;YAKrB,6EAAa;YAJb,yEAAc;YACd,oEAAgB;;;4BAapB,mDAAK;;AADG,qBAAqB;IAJjC,+DAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,0FAA2C;KAC9C,CAAC;GACW,qBAAqB,CA6DjC;AA7DiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACdM;AACc;AACsB;AACX;AACT;AAC2D;AAC3D;AAC6B;AACG;IAY3E,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAV1B,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,qEAAiB;YACjB,qEAAc;YACd,kGAAqB;YACrB,gIAA+B;YAC/B,qGAAwB;SAC3B;QACD,OAAO,EAAE,CAAC,kEAAY,EAAE,8EAAqB,EAAE,wFAAiB,CAAC;KACpE,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACpBa;AACc;AACY;AACV;AACA;AACgC;AAExF,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,WAAW,EAAE,CAAC,8EAAiB,CAAC;QAChC,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,qEAAiB;aAC/B;YACD;gBACI,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,qGAAwB;aACtC;YACD;gBACI,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,qEAAc;aAC5B;SACJ;KACJ;CACJ;IAMY,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;AChClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"discover-discover-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core'\nimport { faFileAlt } from '@fortawesome/pro-regular-svg-icons'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { SgpmxService } from 'src/app/common/services/sgpmx.service'\nimport { File, Product, ProductFile } from '../../../common/api-interfaces'\nimport { toStartCase } from '../../../common/common.mixin'\nimport { buildFileUrl } from '../../../common/file'\nimport { Currency } from '../../../common/models/accounting/currency.model'\nimport { PaymentConfirmationComponent } from '../../../common/payment/payment-confirmation/payment-confirmation.component'\nimport { IntercomService } from '../../../common/services/intercom.service'\nimport { SessionService } from '../../../common/services/session.service'\nimport { TokenService } from '../../../common/services/token.service'\n\n@Component({\n    selector: 'investment-confirmation',\n    templateUrl: 'investment-confirmation.component.html',\n})\nexport class InvestmentConfirmationComponent extends PaymentConfirmationComponent implements OnInit {\n    public toStartCase = toStartCase\n    public buildFileUrl = buildFileUrl\n    public faFileAlt = faFileAlt\n    public product: Product\n    public files: (File & { productFile: ProductFile })[]\n    public documentsRead = false\n    public amount: string\n\n    constructor(\n        modal: NgbActiveModal,\n        tokenService: TokenService,\n        session: SessionService,\n        sgpmxService: SgpmxService,\n        translate: TranslateService,\n        public intercom: IntercomService\n    ) {\n        super(modal, tokenService, session, sgpmxService, translate)\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit()\n        this.amount = Currency.convert(this.transaction.amount, this.transaction.currency, this.product.fundingCurrency)\n    }\n\n    public calculateQuantity(amount: string, price: string): string {\n        return new BigNumber(amount).div(price).toString()\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.terms-of-investment' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-subheader\\\">{{ 'common.you-must-accept-the-terms-to-view' | translate }}</div>\\n<div class=\\\"modal-body terms-container text-body\\\">\\n    <ng-container *ngIf=\\\"contentStream | async as content; else loadingContent\\\">\\n        <div [innerHtml]=\\\"content | safeHtml\\\"></div>\\n    </ng-container>\\n    <ng-template #loadingContent>\\n        <svg class=\\\"spinner spinner-dark\\\" viewBox=\\\"0 0 50 50\\\">\\n            <circle class=\\\"path\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"5\\\"></circle>\\n        </svg>\\n        <p class=\\\"mb-0 mt-5 text-center\\\">{{ 'common.loading-terms' | translate }}</p>\\n    </ng-template>\\n</div>\\n<div class=\\\"modal-footer flex-column flex-md-row justify-content-center justify-content-md-end\\\">\\n    <button class=\\\"btn btn-link mr-md-auto mb-2 mb-md-0\\\" (click)=\\\"scrollDown()\\\">{{ 'common.scroll-to-bottom' | translate }}</button>\\n    <div class=\\\"d-flex justify-content-end\\\">\\n        <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"activeModal.dismiss()\\\">{{ 'common.decline' | translate }}</button>\\n        <button class=\\\"btn btn-primary btn-w-sm ml-1\\\" (click)=\\\"accept()\\\" [disabled]=\\\"!isDown\\\">{{ 'common.accept' | translate }}</button>\\n    </div>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faFileAlt } from '@fortawesome/pro-regular-svg-icons'\nimport { faCaretRight } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { sortBy } from 'lodash'\nimport { forkJoin, of, Subject, Subscription } from 'rxjs'\nimport { flatMap, tap } from 'rxjs/operators'\nimport {\n    Allocation,\n    File,\n    ICurrency,\n    IUser,\n    Paginated,\n    Product,\n    ProductFile,\n    Transaction,\n    Wallet,\n} from '../../common/api-interfaces'\nimport { toStartCase } from '../../common/common.mixin'\nimport { buildFileUrl } from '../../common/file'\nimport { User } from '../../common/models/core/user.model'\nimport { SessionService } from '../../common/services/session.service'\nimport { InvestmentConfirmationComponent } from './investment-confirmation/investment-confirmation.component'\nimport { ProductTermsComponent } from './product-terms/product-terms.component'\n\n@Component({\n    selector: 'offer',\n    templateUrl: 'offer.component.html',\n})\nexport class OfferComponent implements OnInit, OnDestroy {\n    public contentBlurred = true\n    public toStartCase = toStartCase\n    public buildFileUrl = buildFileUrl\n    public faFileAlt = faFileAlt\n    public faCaretRight = faCaretRight\n    public currencies: ICurrency[] = []\n    public product: Product\n    public files: (File & { productFile: ProductFile })[]\n\n    public allocation: Partial<Allocation> = {\n        baseTransaction: {\n            type: 'investment',\n        } as Transaction,\n        product: {} as Product,\n    }\n\n    @ViewChild('offerForm')\n    public offerForm: NgForm\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        private route: ActivatedRoute,\n        private http: HttpClient,\n        private ngbModal: NgbModal,\n        private session: SessionService,\n        private router: Router\n    ) {}\n\n    public ngOnInit(): void {\n        this.route.paramMap.subscribe(params => {\n            const modal = this.ngbModal.open(ProductTermsComponent, {\n                windowClass: 'modal-primary',\n                backdrop: 'static',\n                keyboard: false,\n            })\n            const component = modal.componentInstance as ProductTermsComponent\n            const contentRetrievedEvent = new Subject<string | null>()\n            component.contentStream = contentRetrievedEvent.asObservable()\n            modal.result\n                .then(() => {\n                    this.contentBlurred = false\n                })\n                .catch(() => {\n                    this.router.navigate(['/discover'])\n                })\n\n            this.http\n                .get<Product>(`/products/${params.get('productSlug')}`)\n                .pipe(\n                    tap(product => {\n                        contentRetrievedEvent.next(product.terms || null)\n                    }),\n                    flatMap(product =>\n                        forkJoin([\n                            of(product),\n                            this.http.get<(File & { productFile: ProductFile })[]>(`/products/${product.id}/files`),\n                        ])\n                    )\n                )\n                .subscribe(([product, files]) => {\n                    this.product = product\n                    this.files = sortBy(files, file => file.productFile.purpose)\n                    this.allocation.product!.id = product.id\n                    this.allocation.baseTransaction!.counterWallet = {\n                        product,\n                    } as Wallet\n                })\n\n            this.subscriptions.add(\n                this.session.userStream.subscribe(user => {\n                    this.allocation.baseTransaction!.baseWallet = {\n                        user: new User(user) as IUser,\n                    } as Wallet\n                    this.allocation.user = new User(user) as IUser\n                })\n            )\n        })\n\n        this.http\n            .get<Paginated<ICurrency>>('/currencies', {\n                params: {\n                    limit: 100 + '',\n                    'filter.type': 'fiat',\n                },\n            })\n            .subscribe(response => {\n                this.currencies = response.data\n                if (this.currencies.length) {\n                    this.allocation.baseTransaction!.currency = this.currencies[0]\n                }\n            })\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public submit(): void {\n        if (this.offerForm.invalid) {\n            return\n        }\n        const modal = this.ngbModal.open(InvestmentConfirmationComponent, {\n            windowClass: 'modal-primary',\n            backdrop: 'static',\n            keyboard: false,\n        })\n        const component = modal.componentInstance as InvestmentConfirmationComponent\n        component.transaction = this.allocation.baseTransaction!\n        component.product = this.product\n        component.files = this.files\n\n        component.onConfirm.subscribe(() => {\n            this.http\n                .post<Allocation>('/allocations', {\n                    baseTransaction: {\n                        amount: this.allocation.baseTransaction!.amount + '',\n                        currency: { code: this.allocation.baseTransaction!.currency.code },\n                    },\n                    product: { id: this.allocation.product!.id },\n                    user: this.allocation.user ? { id: this.allocation.user!.id } : null,\n                })\n                .subscribe(\n                    () => {\n                        component.isCompleted = true\n                        component.onViewTransactions.subscribe(() => {\n                            modal.close()\n                            return this.router.navigate(['/discover/investments'])\n                        })\n                    },\n                    () => {\n                        component.isSubmitted = false\n                        component.reset()\n                    }\n                )\n        })\n    }\n}\n","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-24\\\">\\n            <h3 class=\\\"font-weight-light text-center my-4\\\">{{ 'common.exclusive-investment-opportunities' | translate }}</h3>\\n            <div class=\\\"tab-nav mb-4\\\">\\n                <a\\n                    href\\n                    class=\\\"tab-nav-item text-capitalize\\\"\\n                    (click)=\\\"$event.preventDefault(); queryParams = getDefaultQuery(); searchEvent.next()\\\"\\n                    [ngClass]=\\\"{ active: isActiveQuery(getDefaultQuery()) }\\\"\\n                >\\n                    {{ 'common.all' | translate }}\\n                </a>\\n                <a\\n                    href\\n                    class=\\\"tab-nav-item text-capitalize\\\"\\n                    *ngFor=\\\"let type of productTypes\\\"\\n                    (click)=\\\"$event.preventDefault(); queryParams['type']['eq'] = type; searchEvent.next()\\\"\\n                    [ngClass]=\\\"{ active: isActiveQuery({ type: { eq: [type] } }) }\\\"\\n                >\\n                    {{ 'common.' + type | translate }}\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"pb-5\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-24\\\">\\n                <ng-container *ngIf=\\\"itemsStream | async as items\\\">\\n                    <div class=\\\"grid\\\">\\n                        <div class=\\\"cell\\\" *ngFor=\\\"let product of items\\\">\\n                            <div class=\\\"product-box\\\">\\n                                <a [routerLink]=\\\"['/discover', product.slug]\\\">\\n                                    <img [src]=\\\"buildFileUrl(product.image) | safeUrl\\\" />\\n                                    <div class=\\\"investment-badges\\\">\\n                                        <span class=\\\"type-badge\\\">{{ product.type }}</span>\\n                                    </div>\\n                                </a>\\n                                <div class=\\\"product-box-body\\\">\\n                                    <div class=\\\"product-box-title\\\">{{ product.slogan }}</div>\\n                                    <p class=\\\"product-box-text\\\">{{ product.summary | truncate: true:140 }}</p>\\n                                    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/discover', product.slug]\\\">{{ 'common.view-offer' | translate }}</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ng-container>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.confirm-investment' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <ng-container *ngIf=\\\"!isSubmitted; else loader\\\">\\n        <p *ngIf=\\\"transaction.currency?.code !== product.fundingCurrency?.code\\\">\\n            {{ 'common.your' | translate }} <span class=\\\"text-primary\\\">{{ transaction.amount }} {{ transaction.currency?.code }}</span>\\n            {{ 'common.will-be-converted-to' | translate }}\\n            <span class=\\\"text-primary\\\">~ {{ amount | amount }} {{ product.fundingCurrency?.code }}</span\\n            >.\\n        </p>\\n        <table class=\\\"table table-borderless\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\" class=\\\"font-weight-bold b-t-0\\\">{{ 'common.description' | translate }}</th>\\n                    <th scope=\\\"col\\\" class=\\\"font-weight-bold text-center b-t-0\\\">Qty.</th>\\n                    <th scope=\\\"col\\\" class=\\\"font-weight-bold w-25 text-right b-t-0\\\">{{ 'common.price' | translate }}</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td class=\\\"text-primary\\\">{{ product?.name }} ({{ product?.currency?.code }})</td>\\n                    <td class=\\\"text-center\\\">\\n                        {{ calculateQuantity(amount, product?.currency?.exchangeRate) | number: '1.0-' + transaction.currency.decimalPlaces }}\\n                    </td>\\n                    <td class=\\\"text-right\\\">{{ product?.currency?.exchangeRate | amount }} {{ product.fundingCurrency?.code }}</td>\\n                </tr>\\n                <tr>\\n                    <td colspan=\\\"2\\\" class=\\\"text-right\\\">{{ 'common.subtotal' | translate }}</td>\\n                    <td class=\\\"text-right\\\">{{ amount | amount }} {{ product.fundingCurrency?.code }}</td>\\n                </tr>\\n                <tr>\\n                    <td colspan=\\\"2\\\" class=\\\"text-right b-t-0\\\">VAT</td>\\n                    <td class=\\\"text-right b-t-0\\\">0.00 {{ product.fundingCurrency?.code }}</td>\\n                </tr>\\n                <tr>\\n                    <td colspan=\\\"2\\\" class=\\\"text-right b-t-0 font-weight-bold\\\">{{ 'common.total' | translate }}</td>\\n                    <td class=\\\"text-right b-t-0 font-weight-bold text-primary\\\">{{ amount | amount }} {{ product.fundingCurrency?.code }}</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n        <h6 class=\\\"text-muted\\\">{{ 'common.product-related-documents' | translate }}:</h6>\\n        <div class=\\\"list-group\\\">\\n            <a class=\\\"list-group-item list-group-item-action\\\" [href]=\\\"buildFileUrl(file)\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" *ngFor=\\\"let file of files\\\">\\n                <fa-icon [icon]=\\\"faFileAlt\\\" class=\\\"text-primary mr-2\\\"></fa-icon>\\n                <span>{{ toStartCase(file.productFile.purpose) }}</span>\\n            </a>\\n        </div>\\n        <label class=\\\"custom-control custom-checkbox my-3 mx-2\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" name=\\\"documentsRead\\\" [(ngModel)]=\\\"documentsRead\\\" />\\n            <span class=\\\"custom-control-label font-md\\\"\\n                >{{ 'common.in-submitting-investment' | translate }} <b>{{ 'common.product-related-documents' | translate | lowercase }}.</b></span\\n            >\\n        </label>\\n        <form class=\\\"form-validation\\\" #passwordForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\" novalidate>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"alert\\\">\\n                {{ alert }}\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf=\\\"!showTwoFactorForm\\\">\\n                <div class=\\\"input-group input-group-lg\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                            <fa-icon [icon]=\\\"faLockAlt\\\"></fa-icon>\\n                        </span>\\n                    </span>\\n                    <input\\n                        type=\\\"password\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"password\\\"\\n                        [placeholder]=\\\"'common.enter-your-password' | translate\\\"\\n                        [(ngModel)]=\\\"password\\\"\\n                        [focus]=\\\"true\\\"\\n                        required\\n                    />\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\" *ngIf=\\\"showTwoFactorForm\\\">\\n                <div class=\\\"input-group input-group-lg\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">\\n                            <fa-icon [icon]=\\\"faMobile\\\"></fa-icon>\\n                        </span>\\n                    </span>\\n                    <input\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\"\\n                        name=\\\"twoFactorCode\\\"\\n                        [placeholder]=\\\"'common.enter-2fa-code' | translate\\\"\\n                        number\\n                        [(ngModel)]=\\\"twoFactorCode\\\"\\n                        [focus]=\\\"true\\\"\\n                        required\\n                    />\\n                </div>\\n            </div>\\n            <button\\n                type=\\\"submit\\\"\\n                class=\\\"btn btn-lg btn-block btn-primary\\\"\\n                [ngClass]=\\\"{ loading: isLoading }\\\"\\n                [disabled]=\\\"!passwordForm.valid || isLoading || !documentsRead\\\"\\n            >\\n                {{ 'common.confirm' | translate }}\\n            </button>\\n        </form>\\n    </ng-container>\\n    <ng-template #loader>\\n        <div class=\\\"circle-loader\\\" [ngClass]=\\\"{ 'load-complete': isCompleted }\\\">\\n            <div class=\\\"checkmark draw\\\"></div>\\n        </div>\\n        <h4 class=\\\"text-center text-primary\\\">\\n            {{ !isCompleted ? ('common.requesting-investment' | translate) + '...' : ('common.your-investment-has-been-requested' | translate) }}\\n        </h4>\\n        <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-lg btn-block btn-primary-air\\\"\\n            (click)=\\\"onViewTransactions.emit()\\\"\\n            [disabled]=\\\"isSubmitted && !isCompleted\\\"\\n        >\\n            {{ 'common.view-investment' | translate }}\\n        </button>\\n    </ng-template>\\n</div>\\n\";","import { Component } from '@angular/core'\nimport { Product, ProductType } from '../common/api-interfaces'\nimport { buildFileUrl } from '../common/file'\nimport { ListComponent } from '../common/list.component'\n\n@Component({\n    selector: 'discover',\n    templateUrl: 'discover.component.html',\n})\nexport class DiscoverComponent extends ListComponent<Product> {\n    public buildFileUrl = buildFileUrl\n    public productTypes: ProductType[] = ['bond', 'loan', 'option', 'property', 'share', 'unit']\n    protected apiUrl = '/products'\n    protected apiQuery = ['type']\n    protected defaultQuery = { type: {} }\n}\n","import { HttpResponse } from '@angular/common/http'\nimport { Component } from '@angular/core'\nimport { faClipboardCheck, faCreditCardFront, faShoppingCart, faTruck } from '@fortawesome/pro-light-svg-icons'\nimport { faEllipsisV } from '@fortawesome/pro-regular-svg-icons'\nimport { Observable, of } from 'rxjs'\nimport { flatMap, tap, withLatestFrom } from 'rxjs/operators'\nimport { AllocationsComponent } from '../../common/allocations/allocations.component'\nimport { IUser } from '../../common/api-interfaces'\nimport { buildFileUrl } from '../../common/file'\nimport { User } from '../../common/models/core/user.model'\n\n@Component({\n    selector: 'user-allocations',\n    templateUrl: 'user-allocations.component.html',\n})\nexport class UserAllocationsComponent extends AllocationsComponent {\n    public faEllipsisV = faEllipsisV\n    public faCreditCardFront = faCreditCardFront\n    public faClipboardCheck = faClipboardCheck\n    public faTruck = faTruck\n    public faShoppingCart = faShoppingCart\n    public buildFileUrl = buildFileUrl\n    public user: IUser | null\n\n    protected apiQuery = ['status']\n    protected defaultQuery = { status: {} }\n\n    public find(): Observable<HttpResponse<any[]>> {\n        return of(undefined).pipe(\n            withLatestFrom(this.session.userStream),\n            tap(([_, user]) => {\n                this.user = new User(user)\n                this.apiUrl = `/users/${user.id}/allocations`\n            }),\n            flatMap(() => super.find())\n        )\n    }\n}\n","\n// easing functions from \"Tween.js\"\n\nexports.linear = function(n){\n  return n;\n};\n\nexports.inQuad = function(n){\n  return n * n;\n};\n\nexports.outQuad = function(n){\n  return n * (2 - n);\n};\n\nexports.inOutQuad = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n;\n  return - 0.5 * (--n * (n - 2) - 1);\n};\n\nexports.inCube = function(n){\n  return n * n * n;\n};\n\nexports.outCube = function(n){\n  return --n * n * n + 1;\n};\n\nexports.inOutCube = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n;\n  return 0.5 * ((n -= 2 ) * n * n + 2);\n};\n\nexports.inQuart = function(n){\n  return n * n * n * n;\n};\n\nexports.outQuart = function(n){\n  return 1 - (--n * n * n * n);\n};\n\nexports.inOutQuart = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n;\n  return -0.5 * ((n -= 2) * n * n * n - 2);\n};\n\nexports.inQuint = function(n){\n  return n * n * n * n * n;\n}\n\nexports.outQuint = function(n){\n  return --n * n * n * n * n + 1;\n}\n\nexports.inOutQuint = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n * n;\n  return 0.5 * ((n -= 2) * n * n * n * n + 2);\n};\n\nexports.inSine = function(n){\n  return 1 - Math.cos(n * Math.PI / 2 );\n};\n\nexports.outSine = function(n){\n  return Math.sin(n * Math.PI / 2);\n};\n\nexports.inOutSine = function(n){\n  return .5 * (1 - Math.cos(Math.PI * n));\n};\n\nexports.inExpo = function(n){\n  return 0 == n ? 0 : Math.pow(1024, n - 1);\n};\n\nexports.outExpo = function(n){\n  return 1 == n ? n : 1 - Math.pow(2, -10 * n);\n};\n\nexports.inOutExpo = function(n){\n  if (0 == n) return 0;\n  if (1 == n) return 1;\n  if ((n *= 2) < 1) return .5 * Math.pow(1024, n - 1);\n  return .5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n};\n\nexports.inCirc = function(n){\n  return 1 - Math.sqrt(1 - n * n);\n};\n\nexports.outCirc = function(n){\n  return Math.sqrt(1 - (--n * n));\n};\n\nexports.inOutCirc = function(n){\n  n *= 2\n  if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n  return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n};\n\nexports.inBack = function(n){\n  var s = 1.70158;\n  return n * n * (( s + 1 ) * n - s);\n};\n\nexports.outBack = function(n){\n  var s = 1.70158;\n  return --n * n * ((s + 1) * n + s) + 1;\n};\n\nexports.inOutBack = function(n){\n  var s = 1.70158 * 1.525;\n  if ( ( n *= 2 ) < 1 ) return 0.5 * ( n * n * ( ( s + 1 ) * n - s ) );\n  return 0.5 * ( ( n -= 2 ) * n * ( ( s + 1 ) * n + s ) + 2 );\n};\n\nexports.inBounce = function(n){\n  return 1 - exports.outBounce(1 - n);\n};\n\nexports.outBounce = function(n){\n  if ( n < ( 1 / 2.75 ) ) {\n    return 7.5625 * n * n;\n  } else if ( n < ( 2 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 1.5 / 2.75 ) ) * n + 0.75;\n  } else if ( n < ( 2.5 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 2.25 / 2.75 ) ) * n + 0.9375;\n  } else {\n    return 7.5625 * ( n -= ( 2.625 / 2.75 ) ) * n + 0.984375;\n  }\n};\n\nexports.inOutBounce = function(n){\n  if (n < .5) return exports.inBounce(n * 2) * .5;\n  return exports.outBounce(n * 2 - 1) * .5 + .5;\n};\n\n// aliases\n\nexports['in-quad'] = exports.inQuad;\nexports['out-quad'] = exports.outQuad;\nexports['in-out-quad'] = exports.inOutQuad;\nexports['in-cube'] = exports.inCube;\nexports['out-cube'] = exports.outCube;\nexports['in-out-cube'] = exports.inOutCube;\nexports['in-quart'] = exports.inQuart;\nexports['out-quart'] = exports.outQuart;\nexports['in-out-quart'] = exports.inOutQuart;\nexports['in-quint'] = exports.inQuint;\nexports['out-quint'] = exports.outQuint;\nexports['in-out-quint'] = exports.inOutQuint;\nexports['in-sine'] = exports.inSine;\nexports['out-sine'] = exports.outSine;\nexports['in-out-sine'] = exports.inOutSine;\nexports['in-expo'] = exports.inExpo;\nexports['out-expo'] = exports.outExpo;\nexports['in-out-expo'] = exports.inOutExpo;\nexports['in-circ'] = exports.inCirc;\nexports['out-circ'] = exports.outCirc;\nexports['in-out-circ'] = exports.inOutCirc;\nexports['in-back'] = exports.inBack;\nexports['out-back'] = exports.outBack;\nexports['in-out-back'] = exports.inOutBack;\nexports['in-bounce'] = exports.inBounce;\nexports['out-bounce'] = exports.outBounce;\nexports['in-out-bounce'] = exports.inOutBounce;\n","export default \"<div [ngClass]=\\\"{ blurred: contentBlurred }\\\">\\n    <section class=\\\"bg-white space-sm\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-14 mb-4 mb-sm-0\\\">\\n                    <img [src]=\\\"buildFileUrl($any(product.image))\\\" class=\\\"rounded img-fluid\\\" *ngIf=\\\"product?.image\\\" />\\n                </div>\\n                <div class=\\\"col-lg-9 d-flex flex-column justify-content-between mx-auto\\\">\\n                    <div>\\n                        <h1 class=\\\"mb-2\\\">{{ product?.name }}</h1>\\n                        <h2 class=\\\"lead\\\">{{ product?.slogan }}</h2>\\n                    </div>\\n                    <div>\\n                        <table class=\\\"table table-sm table-borderless mb-0\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <th class=\\\"pb-1 px-0 text-label\\\" scope=\\\"row\\\">{{ 'common.product-type' | translate }}:</th>\\n                                    <td class=\\\"text-right px-0 text-capitalize\\\">\\n                                        {{ product?.type }}\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <th class=\\\"pb-1 px-0 text-label\\\" scope=\\\"row\\\">{{ 'common.minimum-investment' | translate }}:</th>\\n                                    <td class=\\\"text-right text-primary px-0\\\">\\n                                        {{ product?.minimumInvestment | number: '1.0-0' }} {{ product?.fundingCurrency?.code }}\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <th class=\\\"pb-1 px-0 text-label\\\" scope=\\\"row\\\">{{ 'common.opening-date' | translate }}:</th>\\n                                    <td class=\\\"text-right px-0\\\">{{ product?.openingDate | date: 'longDate' }}</td>\\n                                </tr>\\n                                <tr>\\n                                    <th class=\\\"pb-1 px-0 text-label\\\" scope=\\\"row\\\">{{ 'common.closing-date' | translate }}:</th>\\n                                    <td class=\\\"text-right px-0\\\">{{ product?.closingDate | date: 'longDate' }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                    <div>\\n                        <form\\n                            class=\\\"form-validation\\\"\\n                            #offerForm=\\\"ngForm\\\"\\n                            (ngSubmit)=\\\"submit()\\\"\\n                            [ngClass]=\\\"{ 'ng-submitted': offerForm.submitted }\\\"\\n                            autocomplete=\\\"false\\\"\\n                            novalidate\\n                        >\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"form-group col-sm-12\\\">\\n                                    <label class=\\\"font-md\\\" for=\\\"amount\\\">{{ 'common.amount' | translate }}</label>\\n                                    <input\\n                                        type=\\\"number\\\"\\n                                        class=\\\"form-control form-control-lg\\\"\\n                                        id=\\\"amount\\\"\\n                                        name=\\\"amount\\\"\\n                                        [placeholder]=\\\"'0.' + '0'.repeat($any(allocation.baseTransaction).currency?.decimalPlaces)\\\"\\n                                        [(ngModel)]=\\\"$any(allocation.baseTransaction).amount\\\"\\n                                        #amount=\\\"ngModel\\\"\\n                                        required\\n                                    />\\n                                    <div *ngIf=\\\"amount.invalid && (offerForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">\\n                                            {{ 'common.this-is-required' | translate }}\\n                                        </div>\\n                                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.max\\\">\\n                                            {{ 'common.amount-exceeds-maximum' | translate }}.\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group col-sm-12\\\">\\n                                    <label class=\\\"font-md\\\" for=\\\"currency\\\">{{ 'common.currency' | translate }}</label>\\n                                    <currency-select\\n                                        [(currency)]=\\\"$any(allocation.baseTransaction).currency\\\"\\n                                        [isLarge]=\\\"true\\\"\\n                                        [required]=\\\"true\\\"\\n                                        [currencyTypes]=\\\"['fiat']\\\"\\n                                    ></currency-select>\\n                                </div>\\n                            </div>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg btn-block\\\">{{ 'common.invest-now' | translate }}</button>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n    <section class=\\\"space-sm\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row justify-content-between\\\">\\n                <div class=\\\"col-24 col-md-16 col-lg-14\\\">\\n                    <h5 class=\\\"mb-4\\\">{{ 'common.overview' | translate }}</h5>\\n                    <article *ngIf=\\\"product\\\" [innerHtml]=\\\"product.content || ''\\\"></article>\\n                    <hr />\\n                    <h5 class=\\\"mb-3\\\">{{ 'common.disclaimer' | translate }}</h5>\\n                    <article>\\n                        <p class=\\\"font-sm text-gray\\\">\\n                            {{ 'offer.investing-in-private' | translate }}\\n                        </p>\\n                        <p class=\\\"font-sm text-gray\\\">\\n                            {{ 'offer.we-are-targeted' | translate }}\\n                        </p>\\n                    </article>\\n                </div>\\n                <div class=\\\"col-24 col-md-8\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h6>{{ 'common.downloads' | translate }}</h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <ul class=\\\"list-unstyled\\\">\\n                                <li class=\\\"mb-2\\\" *ngFor=\\\"let file of files\\\">\\n                                    <fa-icon [icon]=\\\"faFileAlt\\\" class=\\\"text-muted mr-2\\\"></fa-icon>\\n                                    <a [href]=\\\"buildFileUrl(file)\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">{{ toStartCase(file.productFile.purpose) }}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </section>\\n</div>\\n\";","export default \"<div class=\\\"container pt-page pb-3\\\">\\n    <div class=\\\"row justify-content-between align-items-center pb-2\\\">\\n        <div class=\\\"col-auto\\\">\\n            <h5 class=\\\"mb-0\\\">{{ 'common.investments' | translate }}</h5>\\n        </div>\\n        <div class=\\\"col-auto d-flex justify-content-end\\\">\\n            <ol class=\\\"breadcrumb px-0\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                    <a [routerLink]=\\\"['/dashboard']\\\">{{ 'common.home' | translate }}</a>\\n                </li>\\n                <li class=\\\"breadcrumb-item\\\">\\n                    <a [routerLink]=\\\"['/discover']\\\">{{ 'common.discover' | translate }}</a>\\n                </li>\\n                <li class=\\\"breadcrumb-item active\\\">{{ 'common.investments' | translate }}</li>\\n            </ol>\\n        </div>\\n    </div>\\n    <div class=\\\"row justify-content-between align-items-center\\\">\\n        <div class=\\\"col\\\">\\n            <button\\n                type=\\\"button\\\"\\n                class=\\\"btn mr-2\\\"\\n                (click)=\\\"queryParams = getDefaultQuery(); searchEvent.next()\\\"\\n                [ngClass]=\\\"isActiveQuery(getDefaultQuery()) ? 'btn-primary' : 'btn-primary-air'\\\"\\n            >\\n                {{ 'common.all' | translate }}\\n            </button>\\n            <div class=\\\"btn-group mr-2\\\">\\n                <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn\\\"\\n                    (click)=\\\"queryParams['status']['or'] = ['pending']; searchEvent.next()\\\"\\n                    [ngClass]=\\\"isActiveQuery({ status: { or: ['pending'] } }) ? 'btn-primary' : 'btn-primary-air'\\\"\\n                >\\n                    {{ 'common.pending' | translate }}\\n                </button>\\n                <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn\\\"\\n                    (click)=\\\"queryParams['status']['or'] = ['completed']; searchEvent.next()\\\"\\n                    [ngClass]=\\\"isActiveQuery({ status: { or: ['completed'] } }) ? 'btn-primary' : 'btn-primary-air'\\\"\\n                >\\n                    {{ 'common.completed' | translate }}\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container mb-3\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header b-b-0\\\">{{ 'common.investments' | translate }}</div>\\n        <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-hover table-card\\\">\\n                <thead class=\\\"thead-light\\\">\\n                    <tr>\\n                        <th scope=\\\"col\\\">{{ 'common.name' | translate }}</th>\\n                        <th scope=\\\"col\\\">{{ 'common.progress' | translate }}</th>\\n                        <th scope=\\\"col\\\">{{ 'user-allocations.invested' | translate }}</th>\\n                        <th scope=\\\"col\\\">{{ 'user-allocations.issued' | translate }}</th>\\n                        <th scope=\\\"col\\\">{{ 'common.created-at' | translate }}</th>\\n                        <th scope=\\\"col\\\"></th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n                        <ng-container *ngIf=\\\"items.length === 0; else rows\\\">\\n                            <tr>\\n                                <td class=\\\"bg-white\\\" colspan=\\\"12\\\">\\n                                    <div class=\\\"mx-auto p-3 mt-2 mb-4 text-center max-width-sm\\\">\\n                                        <img src=\\\"/img/icons/search.svg\\\" class=\\\"img-sm mb-2\\\" />\\n                                        <h4 class=\\\"mb-1\\\">{{ 'user-allocations.find-investment' | translate }}</h4>\\n                                        <p class=\\\"mb-3 text-gray\\\">{{ 'user-allocations.find-exclusive-investment' | translate }}</p>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary-air btn-lg btn-block\\\" [routerLink]=\\\"['/discover']\\\">\\n                                            {{ 'user-allocations.discover-now' | translate }}\\n                                        </button>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </ng-container>\\n                        <ng-template #rows>\\n                            <tr *ngFor=\\\"let allocation of itemsStream | async\\\" class=\\\"bg-white\\\">\\n                                <th scope=\\\"row\\\" class=\\\"w-25\\\">\\n                                    <a class=\\\"media align-items-center text-body\\\" [routerLink]=\\\"['/discover', allocation.product?.slug]\\\">\\n                                        <img [src]=\\\"buildFileUrl(allocation.product?.image) | safeUrl\\\" class=\\\"avatar avatar-md rounded mr-3\\\" />\\n                                        <div class=\\\"media-body\\\">\\n                                            <h6 class=\\\"mb-0\\\">{{ allocation.product?.name }}</h6>\\n                                            <span class=\\\"text-muted font-sm\\\">{{ allocation.id | truncate: false:7:'' }}</span>\\n                                        </div>\\n                                    </a>\\n                                </th>\\n                                <td>\\n                                    <ul class=\\\"step d-flex flex-nowrap\\\">\\n                                        <li\\n                                            class=\\\"step-item\\\"\\n                                            [ngClass]=\\\"{ active: allocation.status === 'pending', failed: allocation.status === 'cancelled' }\\\"\\n                                        >\\n                                            <a class=\\\"small\\\">{{\\n                                                (allocation.status === 'cancelled' ? 'common.cancelled' : 'common.requested') | translate\\n                                            }}</a>\\n                                        </li>\\n                                        <li class=\\\"step-item\\\">\\n                                            <a class=\\\"small\\\">{{ 'common.approved' | translate }}</a>\\n                                        </li>\\n                                        <li class=\\\"step-item\\\">\\n                                            <a class=\\\"small\\\">{{ 'user-allocations.issued' | translate }}</a>\\n                                        </li>\\n                                    </ul>\\n                                </td>\\n                                <td [ngClass]=\\\"allocation.status === 'cancelled' ? 'text-muted' : 'text-primary'\\\">\\n                                    {{ allocation.baseTransaction?.amount | amount: allocation.baseTransaction?.currency?.decimalPlaces }}\\n                                    {{ allocation.baseTransaction?.currency?.code }}\\n                                </td>\\n                                <td [ngClass]=\\\"allocation.status === 'completed' ? 'text-green' : 'text-muted'\\\">\\n                                    {{ allocation.counterTransaction?.amount | amount: allocation.counterTransaction?.currency?.decimalPlaces }}\\n                                    {{ allocation.counterTransaction?.currency?.code }}\\n                                </td>\\n                                <td class=\\\"w-15\\\">\\n                                    {{ allocation.createdAt | date: 'medium' }}\\n                                </td>\\n                                <td class=\\\"action pr-4\\\">\\n                                    <div\\n                                        ngbDropdown\\n                                        container=\\\"body\\\"\\n                                        placement=\\\"bottom-right\\\"\\n                                        #dropdown=\\\"ngbDropdown\\\"\\n                                        (click)=\\\"$event.stopPropagation()\\\"\\n                                    >\\n                                        <button class=\\\"btn-options\\\" type=\\\"button\\\" ngbDropdownToggle><fa-icon [icon]=\\\"faEllipsisV\\\"></fa-icon></button>\\n                                        <div class=\\\"dropdown-menu dropdown-menu-sm\\\" ngbDropdownMenu *ngIf=\\\"allocation.status === 'pending'\\\">\\n                                            <a href ngbDropdownItem (click)=\\\"cancel(allocation); $event.preventDefault()\\\">{{\\n                                                'common.cancel' | translate\\n                                            }}</a>\\n                                        </div>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </ng-template>\\n                    </ng-container>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <footer class=\\\"table-footer\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-8\\\">\\n                <ng-select\\n                    [(ngModel)]=\\\"limit\\\"\\n                    dropdownPosition=\\\"auto\\\"\\n                    (change)=\\\"select(1)\\\"\\n                    [items]=\\\"limitOpts\\\"\\n                    [placeholder]=\\\"'common.show-entries-per-page' | translate\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [searchable]=\\\"false\\\"\\n                    required\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\"\\n                        >{{ 'common.show' | translate }} {{ item }} {{ 'common.per-page' | translate }}</ng-template\\n                    >\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item }} entries</ng-template>\\n                </ng-select>\\n            </div>\\n            <div class=\\\"col-lg-18 col-md-16 d-flex justify-content-center justify-content-md-end mt-3 mt-md-0\\\">\\n                <ngb-pagination\\n                    [(page)]=\\\"page\\\"\\n                    [collectionSize]=\\\"count\\\"\\n                    (pageChange)=\\\"select()\\\"\\n                    [pageSize]=\\\"limit\\\"\\n                    [maxSize]=\\\"4\\\"\\n                    [rotate]=\\\"false\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                >\\n                </ngb-pagination>\\n            </div>\\n        </div>\\n    </footer>\\n</div>\\n\";","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { ToastrService } from '../../../common/services/toastr.service'\n\nconst ease = require('ease-component')\nconst scroll = require('scroll')\n\n@Component({\n    selector: 'product-terms',\n    templateUrl: 'product-terms.component.html',\n})\nexport class ProductTermsComponent implements OnInit, OnDestroy {\n    @Input()\n    public contentStream: Observable<string | null>\n    public isDown = false\n    private isLoaded = false\n    private modalContainer: HTMLElement\n\n    constructor(\n        private element: ElementRef,\n        private toastr: ToastrService,\n        public activeModal: NgbActiveModal,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.contentStream = this.contentStream.pipe(\n            tap(() => {\n                this.isLoaded = true\n                setTimeout(() => {\n                    this.scrollHandler()\n                })\n            })\n        )\n        this.modalContainer = this.element.nativeElement.querySelector('.terms-container') as HTMLElement\n        this.modalContainer.addEventListener('scroll', this.scrollHandler)\n    }\n\n    public ngOnDestroy(): void {\n        this.modalContainer.removeEventListener('scroll', this.scrollHandler)\n    }\n\n    public scrollDown(): void {\n        scroll.top(this.modalContainer, this.modalContainer.scrollHeight - this.modalContainer.clientHeight, {\n            duration: 1000,\n            ease: ease.inOutExpo,\n        })\n    }\n\n    public accept(): void {\n        if (!this.isDown) {\n            this.toastr.warning(\n                this.translate.instant('common.please-scroll-to-bottom'),\n                this.translate.instant('common.terms')\n            )\n            return\n        }\n        this.activeModal.close()\n    }\n\n    private scrollHandler = () => {\n        // 25px threshold\n        if (\n            this.isLoaded &&\n            !this.isDown &&\n            this.modalContainer.scrollTop >= this.modalContainer.scrollHeight - this.modalContainer.offsetHeight - 25\n        ) {\n            setTimeout(() => {\n                this.isDown = true\n            })\n        }\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { TransactionModule } from '../common/transaction/transaction.module'\nimport { DiscoverRoutingModule } from './discover-routing.module'\nimport { DiscoverComponent } from './discover.component'\nimport { InvestmentConfirmationComponent } from './offer/investment-confirmation/investment-confirmation.component'\nimport { OfferComponent } from './offer/offer.component'\nimport { ProductTermsComponent } from './offer/product-terms/product-terms.component'\nimport { UserAllocationsComponent } from './user-allocations/user-allocations.component'\n\n@NgModule({\n    declarations: [\n        DiscoverComponent,\n        OfferComponent,\n        ProductTermsComponent,\n        InvestmentConfirmationComponent,\n        UserAllocationsComponent,\n    ],\n    imports: [CommonModule, DiscoverRoutingModule, TransactionModule],\n})\nexport class DiscoverModule {}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { DiscoverComponent } from './discover.component'\nimport { OfferComponent } from './offer/offer.component'\nimport { UserAllocationsComponent } from './user-allocations/user-allocations.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        canActivate: [LoggedInAuthGuard],\n        children: [\n            {\n                path: '',\n                component: DiscoverComponent,\n            },\n            {\n                path: 'investments',\n                component: UserAllocationsComponent,\n            },\n            {\n                path: ':productSlug',\n                component: OfferComponent,\n            },\n        ],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class DiscoverRoutingModule {}\n","var E_NOSCROLL = new Error('Element already at target scroll position')\nvar E_CANCELLED = new Error('Scroll cancelled')\nvar min = Math.min\nvar ms = Date.now\n\nmodule.exports = {\n  left: make('scrollLeft'),\n  top: make('scrollTop')\n}\n\nfunction make (prop) {\n  return function scroll (el, to, opts, cb) {\n    opts = opts || {}\n\n    if (typeof opts == 'function') cb = opts, opts = {}\n    if (typeof cb != 'function') cb = noop\n\n    var start = ms()\n    var from = el[prop]\n    var ease = opts.ease || inOutSine\n    var duration = !isNaN(opts.duration) ? +opts.duration : 350\n    var cancelled = false\n\n    return from === to ?\n      cb(E_NOSCROLL, el[prop]) :\n      requestAnimationFrame(animate), cancel\n\n    function cancel () {\n      cancelled = true\n    }\n\n    function animate (timestamp) {\n      if (cancelled) return cb(E_CANCELLED, el[prop])\n\n      var now = ms()\n      var time = min(1, ((now - start) / duration))\n      var eased = ease(time)\n\n      el[prop] = (eased * (to - from)) + from\n\n      time < 1 ?\n        requestAnimationFrame(animate) :\n        requestAnimationFrame(function () {\n          cb(null, el[prop])\n        })\n    }\n  }\n}\n\nfunction inOutSine (n) {\n  return 0.5 * (1 - Math.cos(Math.PI * n))\n}\n\nfunction noop () {}\n"],"sourceRoot":"webpack:///"}