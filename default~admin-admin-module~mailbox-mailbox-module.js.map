{"version":3,"sources":["./src/app/common/mails/mail/mail.component.ts","./src/app/common/mails/mail-form/mail-form.component.html","./src/app/common/mails/mails.module.ts","./src/app/common/mails/mails.component.ts","./src/app/common/mails/mail/mail.component.html","./src/app/common/mails/mails.component.html","./src/app/common/mails/mail-form/mail-form.component.ts"],"names":[],"mappings":"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","file":"default~admin-admin-module~mailbox-mailbox-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faFile } from '@fortawesome/pro-regular-svg-icons'\nimport { faHistory, faReply, faShare, faTrash } from '@fortawesome/pro-solid-svg-icons'\nimport { TranslateService } from '@ngx-translate/core'\nimport { merge, Observable, Subject, Subscription } from 'rxjs'\nimport { finalize, flatMap, switchMap, tap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { File, Mail } from '../../api-interfaces'\nimport { IntercomService } from '../../services/intercom.service'\nimport { MailNotificationsService } from '../../services/mail-notifications.service'\nimport { SessionService } from '../../services/session.service'\nimport { ToastrService } from '../../services/toastr.service'\n\n@Component({\n    selector: 'mail',\n    templateUrl: 'mail.component.html',\n})\nexport class MailComponent implements OnInit, OnDestroy {\n    @Input()\n    public markAsRead = false\n    public mail: Mail\n    public attachments: any[] = []\n    public isDeleting = false\n    public isLoading = false\n    public displayName = environment.displayName\n    public faReply = faReply\n    public faShare = faShare\n    public faHistory = faHistory\n    public faTrash = faTrash\n    public faFile = faFile\n    private subscriptions = new Subscription()\n    private fetchEvent = new Subject<void>()\n\n    constructor(\n        private http: HttpClient,\n        private Toastr: ToastrService,\n        private mailNotifications: MailNotificationsService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private session: SessionService,\n        public intercom: IntercomService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(this.fetchEvent.pipe(switchMap(() => this.fetch())).subscribe())\n        this.subscriptions.add(\n            this.route.paramMap.subscribe(params => {\n                const mailId = params.get('mailId')\n                if (mailId) {\n                    this.mail = {\n                        id: mailId,\n                    } as Mail\n                    this.fetchEvent.next()\n                }\n            })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public fetch(): Observable<void> {\n        this.isLoading = true\n        return this.http.get<Mail>(`/mails/${this.mail.id}`).pipe(\n            flatMap(mail => {\n                Object.assign(this.mail, mail)\n                let obs: Observable<any> = this.http.get<any[]>(`/mails/${this.mail.id}/attachments`).pipe(\n                    tap(attachments => {\n                        this.attachments = attachments\n                    })\n                )\n                if (!this.mail.read && this.markAsRead) {\n                    obs = merge(\n                        obs,\n                        this.http.post(`/mails/${this.mail.id}/mark-as-read`, {}).pipe(\n                            tap(() => {\n                                this.mailNotifications.notify()\n                            })\n                        )\n                    )\n                }\n                return obs\n            }),\n            finalize(() => {\n                this.isLoading = false\n            })\n        )\n    }\n\n    public async back(): Promise<void> {\n        await this.router.navigate(['../'], { relativeTo: this.route })\n    }\n\n    public delete(): void {\n        this.isDeleting = true\n        this.http\n            .delete<void>(`/mails/${this.mail.id}`)\n            .pipe(\n                finalize(() => {\n                    this.isDeleting = false\n                })\n            )\n            .subscribe(async () => {\n                this.Toastr.success(this.translate.instant('mail.mail-deleted'))\n                await this.back()\n            })\n    }\n\n    public openAttachment(attachment: File): void {\n        this.subscriptions.add(\n            this.session\n                .createSignedUrl(`/mails/${this.mail.id}/attachments/${attachment.id}`)\n                .subscribe(signedUrl => window.open(signedUrl, '_blank', 'noopener'))\n        )\n    }\n\n    public reply(): void {\n        this.intercom.startConversation(this.buildPrePopulatedMessage())\n    }\n\n    private buildPrePopulatedMessage(): string {\n        return `Subject: ${this.mail.subject}, Message: ${this.mail.content!.replace(/<[^>]+>/g, '')} \\n \\n`\n    }\n}\n","export default \"<form class=\\\"form-validation e2e-mail-form\\\" [ngClass]=\\\"{ 'ng-submitted': form.submitted }\\\" #form=\\\"ngForm\\\" autocomplete=\\\"false\\\" novalidate>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col\\\">\\n            <label class=\\\"form-control-label\\\">{{ 'common.subject' | translate }}</label>\\n            <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"subject\\\"\\n                [placeholder]=\\\"'common.subject' | translate\\\"\\n                [(ngModel)]=\\\"mail.subject\\\"\\n                #messageSubject=\\\"ngModel\\\"\\n                required\\n            />\\n            <div *ngIf=\\\"messageSubject.invalid && (form.submitted || messageSubject.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"messageSubject?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"templates.length > 0\\\" class=\\\"form-group col-sm-12\\\">\\n            <label class=\\\"form-control-label\\\" for=\\\"templates\\\">{{ 'common.template' | translate }}</label>\\n            <ng-select\\n                [items]=\\\"templates\\\"\\n                bindLabel=\\\"name\\\"\\n                groupBy=\\\"group\\\"\\n                [(ngModel)]=\\\"selectedTemplate\\\"\\n                (change)=\\\"onSelectTemplate()\\\"\\n                [placeholder]=\\\"'common.select-template' | translate\\\"\\n                name=\\\"templates\\\"\\n            >\\n                <ng-template ng-optgroup-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\n                    {{ item.group | uppercase }}\\n                </ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\" let-item$=\\\"item$\\\" let-index=\\\"index\\\">\\n                    {{ item.name }}\\n                </ng-template>\\n            </ng-select>\\n        </div>\\n    </div>\\n    <quill-editor\\n        name=\\\"message\\\"\\n        [(ngModel)]=\\\"mail.content\\\"\\n        [modules]=\\\"editorModules\\\"\\n        #messageBody=\\\"ngModel\\\"\\n        [sanitize]=\\\"true\\\"\\n        required\\n    ></quill-editor>\\n    <div *ngIf=\\\"messageBody.invalid && (form.submitted || messageBody.dirty)\\\" class=\\\"error-messages\\\">\\n        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"messageBody?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n    </div>\\n    <div class=\\\"mt-3\\\">\\n        <dropzone [files]=\\\"files\\\"></dropzone>\\n    </div>\\n</form>\\n\";","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common.module'\nimport { QuillEditorModule } from '../quill-editor/quill-editor.module'\nimport { MailFormComponent } from './mail-form/mail-form.component'\nimport { MailComponent } from './mail/mail.component'\nimport { MailsComponent } from './mails.component'\n\n@NgModule({\n    declarations: [MailsComponent, MailComponent, MailFormComponent],\n    imports: [CommonModule, QuillEditorModule],\n    exports: [MailsComponent, MailComponent, MailFormComponent],\n})\nexport class MailsModule {}\n","import { HttpClient } from '@angular/common/http'\nimport { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport * as striptags from 'striptags'\nimport { IUser, Mail } from '../api-interfaces'\nimport { ListV2Component } from '../list-v2.component'\nimport { SessionService } from '../services/session.service'\n\n@Component({\n    selector: 'mails',\n    templateUrl: 'mails.component.html',\n})\nexport class MailsComponent extends ListV2Component<Mail> implements OnInit {\n    public striptags = striptags\n    @Input()\n    public user: IUser | null\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        public translate: TranslateService\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session)\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit()\n        this.apiUrl = `/users/${this.user!.id}/mails`\n    }\n}\n","export default \"<section class=\\\"card b-a-0 b-b-1 mb-0 rounded-0 e2e-mail\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"d-flex justify-content-between mb-3\\\">\\n            <div>\\n                <h6 class=\\\"mail-subject mb-0\\\">\\n                    <b>{{ mail.subject }}</b>\\n                </h6>\\n                <small class=\\\"block\\\">\\n                    <span\\n                        ><strong>{{ displayName + ' Team' }}</strong> {{ 'common.wrote-to-you' | translate }}</span\\n                    >\\n                    on {{ mail.createdAt | date: 'medium' }}:\\n                </small>\\n            </div>\\n            <div>\\n                <div class=\\\"row no-gutters\\\">\\n                    <div class=\\\"col-18 col-lg-auto ml-auto mr-2\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default btn-icon btn-block\\\" [routerLink]=\\\"['../']\\\">\\n                            <fa-icon class=\\\"btn-icon-symbol\\\" [icon]=\\\"faReply\\\"></fa-icon>\\n                            <span>{{ 'common.back' | translate }}</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"col-18 col-lg-auto ml-auto mr-2 mt-sm-0 mt-2\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default btn-icon btn-block\\\" (click)=\\\"reply()\\\">\\n                            <fa-icon class=\\\"btn-icon-symbol\\\" [icon]=\\\"faShare\\\"></fa-icon>\\n                            <span>{{ 'common.reply' | translate }}</span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"col-18 col-lg-auto ml-auto mr-2 mt-sm-0 mt-2\\\">\\n                        <button\\n                            type=\\\"button\\\"\\n                            class=\\\"btn btn-default btn-icon e2e-mail-delete-btn btn-block\\\"\\n                            (click)=\\\"delete()\\\"\\n                            [ngClass]=\\\"{ loading: isDeleting }\\\"\\n                            [disabled]=\\\"isDeleting\\\"\\n                        >\\n                            <fa-icon class=\\\"btn-icon-symbol\\\" [icon]=\\\"faTrash\\\"></fa-icon>\\n                            <span>{{ 'common.delete' | translate }}</span>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <hr />\\n        <div *ngIf=\\\"mail\\\" [innerHtml]=\\\"mail.content\\\" class=\\\"mail-content mt-2\\\"></div>\\n        <div *ngIf=\\\"attachments.length > 0\\\">\\n            <p>\\n                <b>{{ 'common.attachments' | translate }}:</b>\\n            </p>\\n            <p *ngFor=\\\"let attachment of attachments\\\">\\n                <fa-icon class=\\\"mail-attachment-icon mr-2\\\" [icon]=\\\"faFile\\\"></fa-icon>\\n                <a href (click)=\\\"$event.preventDefault(); openAttachment(attachment)\\\">{{ attachment.name }}</a>\\n                <small class=\\\"mail-file-type text-muted\\\"> {{ attachment.type }}</small>\\n            </p>\\n        </div>\\n    </div>\\n</section>\\n\";","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"row no-gutters align-items-center mb-3\\\">\\n            <div class=\\\"col-lg-7 mb-2 mb-lg-0\\\">\\n                <div class=\\\"input-group\\\">\\n                    <span class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><fa-icon [icon]=\\\"faSearch\\\"></fa-icon></span>\\n                    </span>\\n                    <input\\n                        type=\\\"text\\\"\\n                        name=\\\"searchText\\\"\\n                        (ngModelChange)=\\\"searchEvent.next()\\\"\\n                        [placeholder]=\\\"'common.search' | translate\\\"\\n                        class=\\\"form-control\\\"\\n                        [(ngModel)]=\\\"search\\\"\\n                    />\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-17 d-flex justify-content-between align-items-center\\\">\\n                <span class=\\\"ml-lg-3\\\"\\n                    >{{ count | number }} {{ (count === 1 ? 'common.entry-found' : 'common.entries-found') | translate | lowercase }}</span\\n                >\\n                <div class=\\\"d-flex align-items-center\\\">\\n                    <ng-select\\n                        class=\\\"mr-2\\\"\\n                        [(ngModel)]=\\\"limit\\\"\\n                        dropdownPosition=\\\"auto\\\"\\n                        (change)=\\\"select(1)\\\"\\n                        [items]=\\\"limitOpts\\\"\\n                        [placeholder]=\\\"'common.show-entries-per-page' | translate\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"false\\\"\\n                        required\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">{{ 'common.show-entries' | translate: { value: item } }}</ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item }} {{ 'common.entries' | translate }}</ng-template>\\n                    </ng-select>\\n                    <ngb-pagination\\n                        [(page)]=\\\"page\\\"\\n                        [collectionSize]=\\\"count\\\"\\n                        (pageChange)=\\\"select()\\\"\\n                        [pageSize]=\\\"limit\\\"\\n                        [maxSize]=\\\"5\\\"\\n                        [ellipses]=\\\"false\\\"\\n                        [rotate]=\\\"true\\\"\\n                        [boundaryLinks]=\\\"true\\\"\\n                    >\\n                    </ngb-pagination>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-hover table-bordered table-data\\\">\\n                <thead class=\\\"thead-light\\\">\\n                    <tr>\\n                        <th scope=\\\"col\\\">{{ 'common.from' | translate }}</th>\\n                        <th scope=\\\"col\\\">{{ 'common.subject' | translate }}</th>\\n                        <th scope=\\\"col\\\">{{ 'mails.received-at' | translate }}</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n                        <tr *ngFor=\\\"let mail of items\\\" [routerLink]=\\\"['./', mail.id]\\\" class=\\\"clickable\\\">\\n                            <th scope=\\\"row\\\">\\n                                <user-display [user]=\\\"null\\\"></user-display>\\n                            </th>\\n                            <td>\\n                                <div class=\\\"text-truncate\\\" [ngClass]=\\\"{ 'font-weight-bold': !mail.read }\\\">\\n                                    {{ mail.subject }}\\n                                    <span *ngIf=\\\"!mail.read\\\" class=\\\"text-primary\\\">({{ 'common.new' | translate | lowercase }})</span>\\n                                </div>\\n                                <div class=\\\"small text-muted\\\">{{ striptags(mail.content) | truncate: true:60 }}</div>\\n                            </td>\\n                            <td>{{ mail.createdAt | date: 'medium' }}</td>\\n                        </tr>\\n                        <tr *ngIf=\\\"items.length === 0\\\">\\n                            <td colspan=\\\"6\\\" class=\\\"text-center\\\">{{ 'common.no-entries-found' | translate }}</td>\\n                        </tr>\\n                    </ng-container>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n\";","import { Component, Input, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { faTimes } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { environment } from 'src/environments/environment'\nimport { IUser, Mail } from '../../api-interfaces'\n\nexport interface Template {\n    subject: string\n    group: string\n    name: string\n    message: string\n}\n\n@Component({\n    selector: 'mail-form',\n    templateUrl: 'mail-form.component.html',\n})\nexport class MailFormComponent implements OnInit {\n    @Input()\n    public user: IUser\n    @Input()\n    public mail: Mail\n    @Input()\n    public files: File[] = []\n    @Input()\n    public templates: Template[] = []\n    @Input()\n    public selectedTemplate: Template\n    @Input()\n    public useName = true\n\n    @ViewChild('form')\n    public form: NgForm\n\n    public isLoading = false\n\n    public faTimes = faTimes\n    public editorModules = {\n        toolbar: [\n            ['bold', 'italic', 'underline'],\n            [{ list: 'bullet' }],\n            [{ indent: '-1' }, { indent: '+1' }],\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\n            [{ align: [] as string[] }],\n            ['clean'],\n            ['link'],\n        ],\n    }\n\n    constructor(public activeModal: NgbActiveModal, public translate: TranslateService) {}\n\n    public ngOnInit(): void {\n        if (this.selectedTemplate) {\n            this.onSelectTemplate()\n        } else {\n            this.reset()\n        }\n    }\n\n    public get recipient(): string {\n        return this.user?.name ?? '<NAME>'\n    }\n\n    public onSelectTemplate(): void {\n        this.mail.subject = this.selectedTemplate.subject\n        this.mail.content = this.buildBaseMessage(this.recipient, this.selectedTemplate.message)\n    }\n\n    public isValid(): boolean {\n        return !!this.form.valid\n    }\n\n    public isSubmitted(): boolean {\n        return !!this.form.submitted\n    }\n\n    private reset(): void {\n        this.mail.subject = `Message from ${environment.displayName}`\n        this.mail.content = this.buildBaseMessage(this.recipient, '<p>...</p>')\n    }\n\n    private buildBaseMessage(name: string, content: string): string {\n        return `<p>Hi ${\n            this.useName ? name : '[username]'\n        } 👋</p>${content}<p>If you have any concerns, feel free to contact us.</p><p>Regards,</p><p>${\n            environment.displayName\n        } team</p>`\n    }\n}\n"],"sourceRoot":"webpack:///"}