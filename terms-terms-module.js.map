{"version":3,"sources":["./src/app/common/logged-in.auth-guard.ts","./src/app/common/services/compliance/term.service.ts","./src/app/terms/terms.component.ts","./src/app/terms/terms-routing.module.ts","./src/app/terms/terms.module.ts","./src/app/terms/terms.component.html"],"names":[],"mappings":"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","file":"terms-terms-module.js","sourcesContent":["import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router'\nimport { SessionService } from './services/session.service'\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInAuthGuard implements CanActivate {\n    constructor(private session: SessionService, private router: Router) {}\n    public canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        if (!this.session.isAuthenticated()) {\n            return this.router.parseUrl('/login?redirect=' + state.url)\n        }\n        return true\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { Term, TermsAcceptance } from '../../api-interfaces'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TermService {\n    constructor(private http: HttpClient) {}\n\n    public create(term: Term): Observable<Term> {\n        return this.http.post<Term>('/admin/terms', { terms: term.terms, privacy: term.privacy })\n    }\n\n    public getApplicableTerm(userId?: string): Observable<Term> {\n        return userId\n            ? this.getTermsAcceptance(userId).pipe(map(termsAcceptance => termsAcceptance.term))\n            : this.http.get<Term>(`/terms`)\n    }\n\n    public getTermsAcceptance(userId: string): Observable<TermsAcceptance> {\n        return this.http.get<TermsAcceptance>(`/users/${userId}/terms-acceptance`)\n    }\n\n    public accept(termsAcceptance: TermsAcceptance, accepted = true): Observable<TermsAcceptance> {\n        return this.http.post<TermsAcceptance>(`/users/${termsAcceptance.user.id}/terms-acceptance`, {\n            termsAcceptance: {\n                id: termsAcceptance.id,\n            },\n            accepted,\n        })\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { Subscription } from 'rxjs'\nimport { flatMap, tap } from 'rxjs/operators'\nimport { Term } from '../common/api-interfaces'\nimport { TermService } from '../common/services/compliance/term.service'\nimport { SessionService } from '../common/services/session.service'\n\n@Component({\n    selector: 'terms',\n    templateUrl: 'terms.component.html',\n})\nexport class TermsComponent implements OnInit, OnDestroy {\n    public term: Term\n    public isLoading = false\n    private subscriptions = new Subscription()\n\n    constructor(public session: SessionService, private termService: TermService) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    tap(() => {\n                        this.isLoading = true\n                    }),\n                    flatMap(user => this.termService.getApplicableTerm(user.id))\n                )\n                .subscribe(term => {\n                    this.term = term\n                    this.isLoading = false\n                })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { TermsComponent } from './terms.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: TermsComponent,\n        canActivate: [LoggedInAuthGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class TermsRoutingModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common/common.module'\nimport { TermsRoutingModule } from './terms-routing.module'\nimport { TermsComponent } from './terms.component'\n\n@NgModule({\n    declarations: [TermsComponent],\n    imports: [CommonModule, TermsRoutingModule],\n})\nexport class TermsModule {}\n","export default \"<div class=\\\"container pt-page\\\">\\n    <div class=\\\"row justify-content-between align-items-center pb-2\\\">\\n        <div class=\\\"col-auto\\\">\\n            <h5 class=\\\"mb-0\\\">{{ 'common.terms' | translate }} &amp; {{ 'common.conditions' | translate }}</h5>\\n        </div>\\n        <div class=\\\"col-auto d-flex justify-content-end\\\">\\n            <ol class=\\\"breadcrumb px-0\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                    <a [routerLink]=\\\"['/dashboard']\\\">{{ 'common.home' | translate }}</a>\\n                </li>\\n                <li class=\\\"breadcrumb-item active\\\">{{ 'common.terms' | translate }} &amp; {{ 'common.conditions' | translate }}</li>\\n            </ol>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"pt-1 pb-3 terms-content-outlet\\\" [innerHTML]=\\\"term?.terms | safeHtml\\\" *ngIf=\\\"!isLoading; else loadingContent\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #loadingContent>\\n    <div>\\n        <svg class=\\\"spinner spinner-dark\\\" viewBox=\\\"0 0 50 50\\\">\\n            <circle class=\\\"path\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"5\\\"></circle>\\n        </svg>\\n        <p class=\\\"mb-0 mt-5 text-center\\\">{{ 'common.loading-terms-and-conditions' | translate }}</p>\\n    </div>\\n</ng-template>\\n\";"],"sourceRoot":"webpack:///"}