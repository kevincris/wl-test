{"version":3,"sources":["./src/app/common/redemption/redemption-form.component.html","./src/app/common/services/redemption.service.ts","./src/app/common/redemption/redemption-form.component.ts","./src/app/common/redemption/redemption.module.ts","./src/app/common/redemption/redemption-confirm-modal.component.ts","./src/app/common/redemption/redemption-confirm-modal.component.html"],"names":[],"mappings":"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","file":"default~admin-admin-module~user-redemption-user-redemption-module.js","sourcesContent":["export default \"<form class=\\\"form-validation\\\" #redemptionForm=\\\"ngForm\\\" [ngClass]=\\\"{ 'ng-submitted': redemptionForm.submitted }\\\" autocomplete=\\\"false\\\" novalidate>\\n    <div *ngIf=\\\"isUserSelectAllowed\\\" class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"user\\\">{{ 'common.user' | translate }}</label>\\n            <ng-select\\n                class=\\\"ng-select-lg\\\"\\n                id=\\\"user\\\"\\n                name=\\\"user\\\"\\n                [placeholder]=\\\"'common.enter-user' | translate\\\"\\n                [(ngModel)]=\\\"user\\\"\\n                #userInput=\\\"ngModel\\\"\\n                [items]=\\\"legalEntitiesSteam | async\\\"\\n                [typeahead]=\\\"userAutocomplete\\\"\\n                [disabled]=\\\"isEditing\\\"\\n            >\\n                <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                        <user-display *ngIf=\\\"item\\\" [user]=\\\"item\\\"></user-display>\\n                        <small *ngIf=\\\"item\\\" class=\\\"text-gray ml-1\\\">{{ item.email }}</small>\\n                    </div>\\n                </ng-template>\\n                <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                    <div class=\\\"d-flex align-items-center justify-content-center\\\">\\n                        <user-avatar *ngIf=\\\"item\\\" [user]=\\\"item\\\" size=\\\"sm\\\" elementClass=\\\"mr-2\\\"></user-avatar>\\n                        <div class=\\\"w-100\\\">\\n                            <ng-container *ngIf=\\\"item; else platform\\\">\\n                                <div>{{ item.name }}</div>\\n                                <small class=\\\"text-gray\\\">{{ item.email }}</small>\\n                            </ng-container>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n                <ng-template #platform>\\n                    <div>{{ displayName }}</div>\\n                    <small class=\\\"text-gray\\\">{{ 'common.platform' | translate }}</small>\\n                </ng-template>\\n            </ng-select>\\n            <div *ngIf=\\\"userInput.invalid && (redemptionForm.submitted || userInput.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userInput?.errors?.validateObject\\\">Please choose an existing user.</div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"userInput.invalid && (redemptionForm.submitted || userInput.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userInput?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"font-md\\\" for=\\\"type\\\">Precious Metal Type</label>\\n        <ng-select\\n            class=\\\"ng-select-lg\\\"\\n            name=\\\"type\\\"\\n            [placeholder]=\\\"'common.select-precious-metal-type' | translate\\\"\\n            [items]=\\\"types\\\"\\n            [searchable]=\\\"false\\\"\\n            [clearable]=\\\"false\\\"\\n            (change)=\\\"resetDenomination()\\\"\\n            [(ngModel)]=\\\"redemption.type\\\"\\n            #type=\\\"ngModel\\\"\\n            required\\n        >\\n            <ng-template ng-label-tmp let-item=\\\"item\\\">{{ item === 'gold' ? 'Gold Troy Ounce' : 'Silver Troy Ounce' }}</ng-template>\\n            <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item === 'gold' ? 'Gold Troy Ounce' : 'Silver Troy Ounce' }}</ng-template>\\n        </ng-select>\\n        <div *ngIf=\\\"type.invalid && (redemptionForm.submitted || type.dirty)\\\" class=\\\"error-messages\\\">\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"type?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered\\\">\\n            <thead class=\\\"thead-light\\\">\\n                <tr>\\n                    <th scope=\\\"col\\\">Denomination <span class=\\\"d-none d-md-inline\\\">To Redeem</span></th>\\n                    <th scope=\\\"col\\\" width=\\\"40%\\\" [style.minWidth]=\\\"'150px'\\\">{{ 'common.quantity' | translate }}</th>\\n                </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"redemption.type === 'gold'\\\">\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>1 gram</span><br /><span>0.0321507 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('oneGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.oneGram\\\"\\n                                name=\\\"oneGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('oneGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('oneGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>5 gram</span><br /><span>0.1607537 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('fiveGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.fiveGram\\\"\\n                                name=\\\"fiveGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('fiveGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('fiveGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>50 gram</span><br /><span>1.6075373 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('fiftyGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.fiftyGram\\\"\\n                                name=\\\"fiftyGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('fiftyGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('fiftyGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>100 gram</span><br /><span>3.2150747 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('hundredGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.hundredGram\\\"\\n                                name=\\\"hundredGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('hundredGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('hundredGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>1000 gram</span><br /><span>32.1507466 AU</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('thousandGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.thousandGram\\\"\\n                                name=\\\"thousandGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('thousandGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('thousandGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </tbody>\\n            <tbody *ngIf=\\\"redemption.type === 'silver'\\\">\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>2 ounce</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('twoOunce')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.twoOunce\\\"\\n                                name=\\\"twoOunce\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('twoOunce')\\\"\\n                                    [disabled]=\\\"willExceedBalance('twoOunce')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>5 ounce</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('fiveOunce')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.fiveOunce\\\"\\n                                name=\\\"fiveOunce\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('fiveOunce')\\\"\\n                                    [disabled]=\\\"willExceedBalance('fiveOunce')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>10 ounce</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('tenOunce')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.tenOunce\\\"\\n                                name=\\\"tenOunce\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('tenOunce')\\\"\\n                                    [disabled]=\\\"willExceedBalance('tenOunce')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>100 ounce</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('hundredOunce')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.hundredOunce\\\"\\n                                name=\\\"hundredOunce\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('hundredOunce')\\\"\\n                                    [disabled]=\\\"willExceedBalance('hundredOunce')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>100 gram (3.2150747 ozt)</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('hundredGram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.hundredGram\\\"\\n                                name=\\\"hundredGram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('hundredGram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('hundredGram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th scope=\\\"row\\\"><span>1 kg (32.1507466 ozt)</span></th>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <button class=\\\"btn btn-danger-air\\\" type=\\\"button\\\" (click)=\\\"subtractQuantity('oneKilogram')\\\">\\n                                    <fa-icon [icon]=\\\"faMinus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                            <input\\n                                type=\\\"number\\\"\\n                                class=\\\"form-control text-center bg-white\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"redemption.oneKilogram\\\"\\n                                name=\\\"oneKilogram\\\"\\n                                disabled\\n                            />\\n                            <div class=\\\"input-group-append\\\">\\n                                <button\\n                                    class=\\\"btn btn-primary-air\\\"\\n                                    type=\\\"button\\\"\\n                                    (click)=\\\"addQuantity('oneKilogram')\\\"\\n                                    [disabled]=\\\"willExceedBalance('oneKilogram')\\\"\\n                                >\\n                                    <fa-icon [icon]=\\\"faPlus\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"font-md\\\">Redemption Method</label>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"custom-control custom-radio btn border\\\" (click)=\\\"redemption.method = 'self-collect'\\\">\\n                    <input\\n                        type=\\\"radio\\\"\\n                        class=\\\"custom-control-input\\\"\\n                        id=\\\"self-collect\\\"\\n                        name=\\\"self-collect\\\"\\n                        value=\\\"self-collect\\\"\\n                        [(ngModel)]=\\\"redemption.method\\\"\\n                    />\\n                    <label class=\\\"custom-control-label font-weight-normal\\\" for=\\\"self-collect\\\">Self Collect</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <div class=\\\"custom-control custom-radio btn border\\\" (click)=\\\"redemption.method = 'delivery'\\\">\\n                    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"delivery\\\" name=\\\"delivery\\\" value=\\\"delivery\\\" [(ngModel)]=\\\"redemption.method\\\" />\\n                    <label class=\\\"custom-control-label font-weight-normal\\\" for=\\\"delivery\\\">Delivery</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <ng-container *ngIf=\\\"redemption.method === 'self-collect'; else addressTemplate\\\">\\n        <div>\\n            <small> Self-Collection Address </small><br />\\n            <small>\\n                <b>\\n                    Singapore Precious Metals Exchange Pte Ltd <br />\\n                    Le Freeport, 32 Changi North Crescent, Singapore, 499643\\n                </b>\\n            </small>\\n        </div>\\n    </ng-container>\\n    <ng-template #addressTemplate>\\n        <div>\\n            <address-form [(address)]=\\\"address\\\" #redemptionAddressForm></address-form>\\n        </div>\\n    </ng-template>\\n    <button\\n        type=\\\"submit\\\"\\n        class=\\\"btn btn-primary btn-lg btn-block mt-3\\\"\\n        [ngClass]=\\\"{ loading: isLoading }\\\"\\n        [disabled]=\\\"isLoading\\\"\\n        (click)=\\\"openRedeemModal()\\\"\\n    >\\n        Proceed\\n    </button>\\n</form>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport BigNumber from 'bignumber.js'\nimport { Redemption, RedemptionUnit } from '../api-interfaces'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RedemptionService {\n    constructor(private http: HttpClient) {}\n\n    public getOunces(redemption: Partial<Redemption>, unit: RedemptionUnit): string {\n        if (redemption.type === 'gold') {\n            switch (unit) {\n                case 'oneGram':\n                    return new BigNumber(redemption.oneGram!).times(0.0321507).toFixed(7, 1)\n                case 'fiveGram':\n                    return new BigNumber(redemption.fiveGram!).times(0.1607537).toFixed(7, 1)\n                case 'fiftyGram':\n                    return new BigNumber(redemption.fiftyGram!).times(1.6075373).toFixed(7, 1)\n                case 'hundredGram':\n                    return new BigNumber(redemption.hundredGram!).times(3.2150747).toFixed(7, 1)\n                case 'thousandGram':\n                    return new BigNumber(redemption.thousandGram!).times(32.1507466).toFixed(7, 1)\n                default:\n                    return '0.00'\n            }\n        } else {\n            switch (unit) {\n                case 'twoOunce':\n                    return new BigNumber(redemption.twoOunce!).times(2).toFixed(7, 1)\n                case 'fiveOunce':\n                    return new BigNumber(redemption.fiveOunce!).times(5).toFixed(7, 1)\n                case 'tenOunce':\n                    return new BigNumber(redemption.tenOunce!).times(10).toFixed(7, 1)\n                case 'hundredOunce':\n                    return new BigNumber(redemption.hundredOunce!).times(100).toFixed(7, 1)\n                case 'hundredGram':\n                    return new BigNumber(redemption.hundredGram!).times(3.2150747).toFixed(7, 1)\n                case 'oneKilogram':\n                    return new BigNumber(redemption.oneKilogram!).times(32.1507466).toFixed(7, 1)\n                default:\n                    return '0.00'\n            }\n        }\n    }\n\n    public totalOunces(redemption: Partial<Redemption>): string {\n        if (redemption.type === 'gold') {\n            return new BigNumber(0)\n                .plus(this.getOunces(redemption, 'oneGram'))\n                .plus(this.getOunces(redemption, 'fiveGram'))\n                .plus(this.getOunces(redemption, 'fiftyGram'))\n                .plus(this.getOunces(redemption, 'hundredGram'))\n                .plus(this.getOunces(redemption, 'thousandGram'))\n                .toFixed(7, 1)\n        } else {\n            return new BigNumber(0)\n                .plus(this.getOunces(redemption, 'twoOunce'))\n                .plus(this.getOunces(redemption, 'fiveOunce'))\n                .plus(this.getOunces(redemption, 'tenOunce'))\n                .plus(this.getOunces(redemption, 'hundredOunce'))\n                .plus(this.getOunces(redemption, 'hundredGram'))\n                .plus(this.getOunces(redemption, 'oneKilogram'))\n                .toFixed(7, 1)\n        }\n    }\n\n    public getGrams(redemption: Partial<Redemption>, unit: RedemptionUnit): string {\n        if (redemption.type === 'gold') {\n            switch (unit) {\n                case 'oneGram':\n                    return new BigNumber(redemption.oneGram!).times(1).toFixed(7, 1)\n                case 'fiveGram':\n                    return new BigNumber(redemption.fiveGram!).times(5).toFixed(7, 1)\n                case 'fiftyGram':\n                    return new BigNumber(redemption.fiftyGram!).times(50).toFixed(7, 1)\n                case 'hundredGram':\n                    return new BigNumber(redemption.hundredGram!).times(100).toFixed(7, 1)\n                case 'thousandGram':\n                    return new BigNumber(redemption.thousandGram!).times(1000).toFixed(7, 1)\n                default:\n                    return '0.00'\n            }\n        } else {\n            switch (unit) {\n                case 'twoOunce':\n                    return new BigNumber(redemption.twoOunce!).times(62.2070437).toFixed(7, 1)\n                case 'fiveOunce':\n                    return new BigNumber(redemption.fiveOunce!).times(155.5176093).toFixed(7, 1)\n                case 'tenOunce':\n                    return new BigNumber(redemption.tenOunce!).times(311.0352185).toFixed(7, 1)\n                case 'hundredOunce':\n                    return new BigNumber(redemption.hundredOunce!).times(3110.3521852).toFixed(7, 1)\n                case 'hundredGram':\n                    return new BigNumber(redemption.hundredGram!).times(100).toFixed(7, 1)\n                case 'oneKilogram':\n                    return new BigNumber(redemption.oneKilogram!).times(1000).toFixed(7, 1)\n                default:\n                    return '0.00'\n            }\n        }\n    }\n\n    public totalGrams(redemption: Partial<Redemption>): string {\n        if (redemption.type === 'gold') {\n            return new BigNumber(0)\n                .plus(this.getGrams(redemption, 'oneGram'))\n                .plus(this.getGrams(redemption, 'fiveGram'))\n                .plus(this.getGrams(redemption, 'fiftyGram'))\n                .plus(this.getGrams(redemption, 'hundredGram'))\n                .plus(this.getGrams(redemption, 'thousandGram'))\n                .toFixed(7, 1)\n        } else {\n            return new BigNumber(0)\n                .plus(this.getGrams(redemption, 'twoOunce'))\n                .plus(this.getGrams(redemption, 'fiveOunce'))\n                .plus(this.getGrams(redemption, 'tenOunce'))\n                .plus(this.getGrams(redemption, 'hundredOunce'))\n                .plus(this.getGrams(redemption, 'hundredGram'))\n                .plus(this.getGrams(redemption, 'oneKilogram'))\n                .toFixed(7, 1)\n        }\n    }\n\n    public updateRedemption(redemption: Partial<Redemption>, status: string) {\n        return this.http.put<Redemption>(`/admin/redemptions/${redemption.id}`, {\n            status,\n            type: redemption.type,\n            method: redemption.method,\n            transaction: redemption.transaction,\n            shippingAddress: redemption.shippingAddress,\n            denomination: {\n                oneGram: redemption.oneGram,\n                fiveGram: redemption.fiveGram,\n                fiftyGram: redemption.fiftyGram,\n                hundredGram: redemption.hundredGram,\n                thousandGram: redemption.thousandGram,\n                twoOunce: redemption.twoOunce,\n                fiveOunce: redemption.fiveOunce,\n                tenOunce: redemption.tenOunce,\n                hundredOunce: redemption.hundredOunce,\n                oneKilogram: redemption.oneKilogram,\n            },\n        })\n    }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http'\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core'\nimport { faMinus, faPlus } from '@fortawesome/pro-light-svg-icons'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { Subscription } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, finalize, flatMap, switchMap } from 'rxjs/operators'\nimport { AddressFormComponent } from 'src/app/common/address-form/address-form.component'\nimport { WalletsQuery } from 'src/app/store/wallets/wallets.query'\nimport { WalletsService } from 'src/app/store/wallets/wallets.service'\nimport { environment } from 'src/environments/environment'\nimport {\n    IAddress,\n    IUser,\n    Redemption,\n    RedemptionMetalType,\n    RedemptionMethod,\n    RedemptionUnit,\n} from '../../common/api-interfaces'\nimport { SessionService } from '../../common/services/session.service'\nimport { ToastrService } from '../../common/services/toastr.service'\nimport { Wallet } from '../models/accounting/wallet.model'\nimport { SecurityCheckService } from '../security-check/security-check.service'\nimport { RedemptionService } from '../services/redemption.service'\nimport { RedemptionConfirmModalComponent } from './redemption-confirm-modal.component'\n\n@Component({\n    selector: 'redemption-form',\n    templateUrl: 'redemption-form.component.html',\n})\nexport class RedemptionFormComponent implements OnInit, OnDestroy {\n    public faPlus = faPlus\n    public faMinus = faMinus\n    public isLoading = false\n    public types: RedemptionMetalType[] = ['gold', 'silver']\n    public methods: RedemptionMethod[] = ['self-collect', 'delivery']\n    public displayName = environment.displayName\n    @Input()\n    public redemption: Partial<Redemption> = {\n        method: this.methods[0],\n        type: this.types[0],\n        // Gold\n        oneGram: 0,\n        fiveGram: 0,\n        fiftyGram: 0,\n        hundredGram: 0,\n        thousandGram: 0,\n        // Silver\n        twoOunce: 0,\n        fiveOunce: 0,\n        tenOunce: 0,\n        hundredOunce: 0,\n        oneKilogram: 0,\n    }\n    @Input()\n    public address: IAddress\n    @Input()\n    public user: IUser\n    @Input()\n    public isUserSelectAllowed = false\n    @Input()\n    public isEditing = false\n    @Output()\n    public onRedemptionSubmitted = new EventEmitter<void>()\n    public auWallet: Wallet | undefined\n    public agWallet: Wallet | undefined\n\n    public userAutocomplete = new EventEmitter<string>()\n    public legalEntitiesSteam = this.userAutocomplete.pipe(\n        distinctUntilChanged(),\n        debounceTime(200),\n        switchMap(search =>\n            this.http.get<IUser[]>('/users', {\n                params: new HttpParams().set('limit', '25').set('search', search),\n            })\n        )\n    )\n\n    @ViewChild('redemptionAddressForm')\n    public addressForm: AddressFormComponent\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        protected toastr: ToastrService,\n        protected ngbModal: NgbModal,\n        private http: HttpClient,\n        private walletsService: WalletsService,\n        public session: SessionService,\n        private securityCheckService: SecurityCheckService,\n        private redemptionsService: RedemptionService,\n        private walletsQuery: WalletsQuery,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.subscriptions.add(\n            this.walletsQuery\n                .selectAll({ filterBy: wallet => ['AU', 'AG'].includes(wallet.currency.code) })\n                .subscribe(wallets => {\n                    this.auWallet = wallets.find(wallet => wallet.currency.code === 'AU') as Wallet\n                    this.agWallet = wallets.find(wallet => wallet.currency.code === 'AG') as Wallet\n                })\n        )\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public addQuantity(type: RedemptionUnit): void {\n        if (this.willExceedBalance(type)) {\n            return\n        }\n\n        ;(this.redemption as any)[type] += 1\n    }\n\n    public subtractQuantity(type: RedemptionUnit): void {\n        if ((this.redemption as any)[type] === 0) {\n            return\n        }\n        ;(this.redemption as any)[type] -= 1\n    }\n\n    public openRedeemModal(): void {\n        if (this.addressForm) {\n            this.addressForm.submit()\n        }\n        if (this.redemption.method === 'delivery' && !this.addressForm.isValid()) {\n            return\n        }\n        const modal = this.ngbModal.open(RedemptionConfirmModalComponent, {\n            windowClass: 'modal-primary',\n            backdrop: 'static',\n        })\n        const component = modal.componentInstance as RedemptionConfirmModalComponent\n        component.redemption = this.redemption\n        component.address = this.address\n        component.onExecute.subscribe(() => {\n            this.securityCheckService.getScopePermission('banking').subscribe(() => {\n                this.submitRedemption()\n                modal.close()\n            })\n        })\n    }\n\n    public resetDenomination(): void {\n        this.redemption.oneGram = 0\n        this.redemption.fiveGram = 0\n        this.redemption.fiftyGram = 0\n        this.redemption.hundredGram = 0\n        this.redemption.thousandGram = 0\n        this.redemption.twoOunce = 0\n        this.redemption.fiveOunce = 0\n        this.redemption.tenOunce = 0\n        this.redemption.hundredOunce = 0\n        this.redemption.oneKilogram = 0\n    }\n\n    public submitRedemption(): void {\n        this.isLoading = true\n        const body = {\n            type: this.redemption.type,\n            method: this.redemption.method,\n            denomination: {\n                oneGram: this.redemption.oneGram,\n                fiveGram: this.redemption.fiveGram,\n                fiftyGram: this.redemption.fiftyGram,\n                hundredGram: this.redemption.hundredGram,\n                thousandGram: this.redemption.thousandGram,\n                twoOunce: this.redemption.twoOunce,\n                fiveOunce: this.redemption.fiveOunce,\n                tenOunce: this.redemption.tenOunce,\n                hundredOunce: this.redemption.hundredOunce,\n                oneKilogram: this.redemption.oneKilogram,\n            },\n            userId: this.user?.id ?? this.session.user.id,\n            transaction: {\n                currency: {\n                    code: this.redemption.type === 'gold' ? 'AU' : 'AG',\n                },\n                amount: this.redemptionsService.totalOunces(this.redemption),\n            },\n            shippingAddress: this.redemption.method === 'self-collect' ? null : this.address,\n        }\n        this.subscriptions.add(\n            this.securityCheckService\n                .getScopePermission('banking')\n                .pipe(\n                    flatMap(() =>\n                        this.isEditing\n                            ? this.http.put<Redemption>(`/admin/redemptions/${this.redemption.id}`, body)\n                            : this.http.post<Redemption>('/redemption', body)\n                    ),\n                    finalize(() => {\n                        this.isLoading = false\n                        this.resetDenomination()\n                        this.address = {} as IAddress\n                        this.redemption.method = 'self-collect'\n                    })\n                )\n                .subscribe(() => {\n                    this.toastr.success(\n                        this.isEditing\n                            ? 'Redemption updated'\n                            : `${this.translate.instant('redemption-form.redemption-submitted')}`\n                    )\n                    this.onRedemptionSubmitted.emit()\n                    this.walletsService.fetch()\n                })\n        )\n    }\n\n    public willExceedBalance(unit: RedemptionUnit): boolean {\n        const total = this.redemptionsService.totalOunces(this.redemption)\n        const value = this.redemptionsService.getOunces(\n            { type: this.redemption.type, [unit]: 1 } as Partial<Redemption>,\n            unit\n        )\n        const balance =\n            this.redemption.type === 'gold' ? this.auWallet?.availableBalance : this.agWallet?.availableBalance\n        return new BigNumber(total).plus(value).isGreaterThan(balance || 0)\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common.module'\nimport { RedemptionConfirmModalComponent } from './redemption-confirm-modal.component'\nimport { RedemptionFormComponent } from './redemption-form.component'\n\n@NgModule({\n    declarations: [RedemptionFormComponent, RedemptionConfirmModalComponent],\n    exports: [RedemptionFormComponent],\n    imports: [CommonModule],\n})\nexport class RedemptionModule {}\n","import { Component, EventEmitter } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { IAddress, Redemption, RedemptionUnit } from 'src/app/common/api-interfaces'\nimport { RedemptionService } from '../services/redemption.service'\n\n@Component({\n    selector: 'redemption-confirm-modal',\n    templateUrl: 'redemption-confirm-modal.component.html',\n})\nexport class RedemptionConfirmModalComponent {\n    public redemption: Partial<Redemption>\n    public address: IAddress | null\n    public onExecute = new EventEmitter<void>()\n    public confirmButtonText = 'Confirm & Email Collection Details'\n    public cancelButtonText = 'Cancel'\n    public denominations: RedemptionUnit[] = [\n        'oneGram',\n        'fiveGram',\n        'fiftyGram',\n        'hundredGram',\n        'thousandGram',\n        'twoOunce',\n        'fiveOunce',\n        'tenOunce',\n        'hundredOunce',\n        'oneKilogram',\n    ]\n    public isPreview = false\n\n    constructor(public activeModal: NgbActiveModal, private redemptionsService: RedemptionService) {}\n\n    public buildDenomination(unit: RedemptionUnit): string {\n        if (!this.redemption[unit]) {\n            return ''\n        }\n        return `${this.redemption[unit]} x ${this.convertQuantityKey(unit)} (${this.redemptionsService.getOunces(\n            this.redemption,\n            unit\n        )} ${this.redemption.type === 'gold' ? 'AU' : 'AG'})`\n    }\n\n    public convertQuantityKey(key: RedemptionUnit): string {\n        switch (key) {\n            case 'oneGram':\n                return '1 Gram'\n            case 'fiveGram':\n                return '5 Gram'\n            case 'fiftyGram':\n                return '50 Gram'\n            case 'hundredGram':\n                return '100 Gram'\n            case 'thousandGram':\n                return '1000 Gram'\n            case 'twoOunce':\n                return '2 Ounce'\n            case 'fiveOunce':\n                return '5 Ounce'\n            case 'tenOunce':\n                return '10 Ounce'\n            case 'hundredOunce':\n                return '100 Ounce'\n            case 'oneKilogram':\n                return '1 Kilogram'\n            default:\n                return ''\n        }\n    }\n\n    public hasValue(unit: RedemptionUnit): boolean {\n        return !!this.redemption[unit]\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Review and Execute</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-striped table-borderless mb-0\\\">\\n            <tbody>\\n                <tr>\\n                    <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Precious Metal Type</th>\\n                    <td>{{ redemption.type === 'gold' ? 'Gold Troy Ounce' : 'Silver Troy Ounce' }}</td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Transaction Type</th>\\n                    <td>{{ 'common.redeem' | translate }}</td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"font-weight-bold align-top\\\" scope=\\\"row\\\">Redeem Denomination</th>\\n                    <td class=\\\"align-top\\\">\\n                        <ng-container *ngFor=\\\"let unit of denominations\\\">\\n                            <div *ngIf=\\\"hasValue(unit)\\\">{{ buildDenomination(unit) }}</div>\\n                        </ng-container>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"font-weight-bold\\\" scope=\\\"row\\\">Redemption Method</th>\\n                    <td>{{ redemption.method === 'self-collect' ? 'Self Collect' : 'Delivery' }}</td>\\n                </tr>\\n                <tr>\\n                    <th class=\\\"font-weight-bold align-top\\\" scope=\\\"row\\\">\\n                        {{ redemption.method === 'self-collect' ? 'Self Collection Details' : 'Delivery Address' }}\\n                    </th>\\n                    <td>\\n                        <ng-container *ngIf=\\\"redemption.method === 'self-collect'; else deliveryTemplate\\\">\\n                            <p class=\\\"mb-0\\\">{{ 'common.address' | translate }}:</p>\\n                            <p>\\n                                Singapore Precious Metals Exchange Pte Ltd <br />\\n                                Le Freeport, 32 Changi North Crescent,<br />Singapore, 499643\\n                            </p>\\n                            <p class=\\\"mb-0\\\">Phone:</p>\\n                            <p>+65 8877 8686</p>\\n                            <p class=\\\"mb-0\\\">{{ 'common.email' | translate }}:</p>\\n                            <p>customerservice@sgpmx.com</p>\\n                        </ng-container>\\n                        <ng-template #deliveryTemplate>\\n                            <postal-address [address]=\\\"address\\\"></postal-address>\\n                        </ng-template>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onExecute.emit()\\\" *ngIf=\\\"!isPreview\\\">{{ confirmButtonText }}</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"activeModal.dismiss()\\\">{{ cancelButtonText }}</button>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}