{"version":3,"sources":["./src/app/common/payment/beneficiary-book/beneficiary-book.component.html","./src/app/common/payment/email-invite-modal/email-invite-modal.component.html","./src/app/common/payment/email-invite-modal/email-invite-modal.component.ts","./src/app/common/payment/beneficiary-book/beneficiary-book.component.ts","./src/app/common/payment/payment.module.ts"],"names":[],"mappings":"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","file":"default~admin-admin-module~deposit-deposit-module~organization-organization-module~transfer-transfer~3ea4832b.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.beneficiary-templates' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"row no-gutters align-items-center mb-3\\\">\\n        <div class=\\\"col-lg-7 mb-2 mb-lg-0\\\">\\n            <div class=\\\"input-group\\\">\\n                <span class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><fa-icon [icon]=\\\"faSearch\\\"></fa-icon></span>\\n                </span>\\n                <input\\n                    type=\\\"text\\\"\\n                    name=\\\"searchText\\\"\\n                    (ngModelChange)=\\\"searchEvent.next()\\\"\\n                    [placeholder]=\\\"'common.search' | translate\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"search\\\"\\n                />\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-17 d-flex justify-content-between align-items-center\\\">\\n            <span class=\\\"ml-lg-3\\\"\\n                >{{ count | number }} {{ (count === 1 ? 'common.entry-found' : 'common.entries-found') | translate | lowercase }}</span\\n            >\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <ng-select\\n                    class=\\\"mr-2\\\"\\n                    [(ngModel)]=\\\"limit\\\"\\n                    dropdownPosition=\\\"auto\\\"\\n                    (change)=\\\"select(1)\\\"\\n                    [items]=\\\"limitOpts\\\"\\n                    [placeholder]=\\\"'common.show-entries-per-page' | translate\\\"\\n                    [clearable]=\\\"false\\\"\\n                    [searchable]=\\\"false\\\"\\n                    required\\n                >\\n                    <ng-template ng-label-tmp let-item=\\\"item\\\">{{ 'common.show-entries' | translate: { value: item } }}</ng-template>\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">{{ item }} {{ 'common.entries' | translate }}</ng-template>\\n                </ng-select>\\n                <ngb-pagination\\n                    [(page)]=\\\"page\\\"\\n                    [collectionSize]=\\\"count\\\"\\n                    (pageChange)=\\\"select()\\\"\\n                    [pageSize]=\\\"limit\\\"\\n                    [maxSize]=\\\"5\\\"\\n                    [ellipses]=\\\"false\\\"\\n                    [rotate]=\\\"true\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                >\\n                </ngb-pagination>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"table-responsive position-relative\\\">\\n        <table class=\\\"table table-hover table-bordered table-data\\\">\\n            <thead class=\\\"thead-light\\\">\\n                <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">{{ 'common.template' | translate | lowercase }}</th>\\n                    <th scope=\\\"col\\\">{{ 'common.actions' | translate }}</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n                    <tr *ngFor=\\\"let item of items\\\" class=\\\"clickable\\\" (click)=\\\"onSelect.emit(item)\\\">\\n                        <th scope=\\\"row\\\" [width]=\\\"'1%'\\\">\\n                            <uuid [value]=\\\"item.id\\\"></uuid>\\n                        </th>\\n                        <td class=\\\"p-2\\\">\\n                            <div class=\\\"d-flex w-100 justify-content-between\\\">\\n                                <span\\n                                    class=\\\"text-uppercase label label-xs\\\"\\n                                    [ngClass]=\\\"{\\n                                        'label-primary': item.method === 'swift',\\n                                        'label-success': item.method === 'local',\\n                                        'label-warning': item.method === 'crypto'\\n                                    }\\\"\\n                                >\\n                                    {{ item.method }} - {{ item.currency?.code }}\\n                                </span>\\n                                <small class=\\\"text-muted\\\">{{ item.createdAt | date }}</small>\\n                            </div>\\n                            <div>\\n                                {{ item.method === 'crypto' && !item.accountHolder ? ('common.wallet-address' | translate) : item.accountHolder }}\\n                            </div>\\n                            <span class=\\\"text-muted\\\">{{ item.accountNumber }}</span>\\n                        </td>\\n                        <td class=\\\"action\\\">\\n                            <button\\n                                type=\\\"button\\\"\\n                                class=\\\"btn btn-primary-air btn-sm mr-1\\\"\\n                                (click)=\\\"$event.stopPropagation(); openBeneficiaryForm(item)\\\"\\n                            >\\n                                <fa-icon [icon]=\\\"faPencil\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger-air btn-sm\\\" (click)=\\\"$event.stopPropagation(); delete(item)\\\">\\n                                <fa-icon [icon]=\\\"faTimes\\\" [fixedWidth]=\\\"true\\\"></fa-icon>\\n                            </button>\\n                        </td>\\n                    </tr>\\n                    <tr *ngIf=\\\"items.length === 0\\\">\\n                        <td colspan=\\\"9\\\" class=\\\"text-center\\\">{{ 'common.no-entries-found' | translate }}</td>\\n                    </tr>\\n                </ng-container>\\n            </tbody>\\n        </table>\\n        <ng-container *ngIf=\\\"isFetching | async\\\">\\n            <circle-spinner></circle-spinner>\\n        </ng-container>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-w-sm\\\" (click)=\\\"openBeneficiaryForm($any({ type: 'template', user: { id: session.user.id } }))\\\">\\n        <fa-icon class=\\\"mr-1\\\" [icon]=\\\"faPlus\\\"></fa-icon> {{ 'common.new-beneficiary' | translate }}\\n    </button>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.invite-to' | translate }} {{ displayName }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-body my-2\\\">\\n    <div class=\\\"text-center\\\">\\n        <fa-icon class=\\\"text-muted\\\" [icon]=\\\"faUserAltSlash\\\" size=\\\"3x\\\"></fa-icon>\\n        <h4 class=\\\"my-2\\\">\\n            {{ 'common.do-you-want-to-invite' | translate }} \\\"{{ email }}\\\" {{ 'common.to' | translate | lowercase }} {{ displayName }}?\\n        </h4>\\n    </div>\\n    <p class=\\\"text-muted\\\">If the recipient registers, this transaction will be processed immediately.</p>\\n    <p>Please enter the recipient's name in order for us to address him/her properly.</p>\\n    <form #form=\\\"ngForm\\\" class=\\\"form-validation\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <label class=\\\"form-control-label font-md\\\" for=\\\"name\\\">{{ 'common.name' | translate }}</label>\\n                <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control form-control-lg\\\"\\n                    id=\\\"name\\\"\\n                    name=\\\"name\\\"\\n                    [(ngModel)]=\\\"user.name\\\"\\n                    #name=\\\"ngModel\\\"\\n                    autocomplete=\\\"given-name\\\"\\n                    required\\n                    emptyToNull\\n                />\\n                <div *ngIf=\\\"name.invalid && (form.submitted || name.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"name?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n<div class=\\\"modal-footer d-flex justify-content-end\\\">\\n    <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"activeModal.dismiss()\\\">{{ 'common.dont-invite' | translate }}</button>\\n    <button class=\\\"btn btn-success btn-w-sm ml-1\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"onInvite.next(user)\\\">{{ 'common.invite' | translate }}</button>\\n</div>\\n\";","import { Component, Input } from '@angular/core'\nimport { faUserAltSlash } from '@fortawesome/pro-regular-svg-icons'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Subject } from 'rxjs'\nimport { environment } from 'src/environments/environment'\nimport { IUser } from '../../api-interfaces'\n\n@Component({\n    selector: 'email-invite-modal',\n    templateUrl: 'email-invite-modal.component.html',\n})\nexport class EmailInviteModalComponent {\n    @Input()\n    public email: string\n    public onInvite = new Subject<IUser>()\n    public user: IUser = {} as IUser\n    public faUserAltSlash = faUserAltSlash\n    public displayName = environment.displayName\n\n    constructor(public activeModal: NgbActiveModal) {}\n}\n","import { HttpClient } from '@angular/common/http'\nimport { ChangeDetectorRef, Component, EventEmitter, OnInit, Output } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faPencil, faTimes } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { filter, finalize, flatMap } from 'rxjs/operators'\nimport { IBeneficiary } from '../../api-interfaces'\nimport { BeneficiaryFormComponent } from '../../beneficiary-form/beneficiary-form.component'\nimport { ListComponent } from '../../list.component'\nimport { Beneficiary } from '../../models/accounting/beneficiary.model'\nimport { ConfirmationResult, ConfirmationService } from '../../services/confirmation.service'\nimport { SessionService } from '../../services/session.service'\nimport { ToastrService } from '../../services/toastr.service'\n\n@Component({\n    selector: 'beneficiary-book',\n    templateUrl: 'beneficiary-book.component.html',\n})\nexport class BeneficiaryBookComponent extends ListComponent<IBeneficiary> implements OnInit {\n    @Output()\n    public readonly onSelect = new EventEmitter<IBeneficiary>()\n\n    public defaultLimit = 5\n\n    public isLoading = false\n    public isSaving = false\n    public isDeleting = false\n\n    public faTimes = faTimes\n    public faPencil = faPencil\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        confirmation: ConfirmationService,\n        public modal: NgbActiveModal,\n        private toastr: ToastrService,\n        public translate: TranslateService\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session, confirmation)\n    }\n\n    public ngOnInit(): void {\n        this.apiUrl = `/users/${this.session.user.id}/beneficiaries`\n        this.queryParams = {\n            type: {\n                eq: 'template',\n            },\n        }\n        super.ngOnInit()\n    }\n\n    public openBeneficiaryForm(beneficiary: Beneficiary): void {\n        const modal = this.ngbModal.open(BeneficiaryFormComponent, {\n            backdrop: 'static',\n            windowClass: 'modal-primary',\n        })\n        const form = modal.componentInstance as BeneficiaryFormComponent\n        form.compact = true\n        form.item = beneficiary\n        // Only display methods that are applicable to the user\n        form.beneficiaryMethods = []\n        if (this.session.user.hasPermission('payment-swift')) {\n            form.beneficiaryMethods.push('swift')\n        }\n        if (this.session.user.hasPermission('payment-local')) {\n            form.beneficiaryMethods.push('local')\n        }\n        if (this.session.user.hasPermission('payment-crypto')) {\n            form.beneficiaryMethods.push('crypto')\n        }\n        form.onSave.subscribe(() => {\n            modal.close()\n            this.updateEvent.next()\n        })\n        form.onDelete.subscribe(() => {\n            modal.close()\n            this.updateEvent.next()\n        })\n    }\n\n    public delete(beneficiary: Beneficiary): void {\n        this.confirmation\n            .show({\n                type: 'danger',\n                text: `${this.translate.instant(\n                    'common.are-you-sure-want-to-delete-beneficiary'\n                )}<br>${this.translate.instant('common.you-cant-undo-action')}`,\n                confirmText: this.translate.instant('common.delete'),\n                confirmClass: 'danger',\n            })\n            .pipe(\n                filter(result => result === ConfirmationResult.CONFIRMED),\n                flatMap(() => {\n                    this.isDeleting = true\n                    return this.http.delete<void>(`/beneficiaries/${beneficiary.id}`)\n                }),\n                finalize(() => {\n                    this.isDeleting = false\n                })\n            )\n            .subscribe(() => {\n                this.toastr.success(this.translate.instant('common.beneficiary-deleted'))\n                this.updateEvent.next()\n            })\n    }\n\n    protected async changeState(): Promise<void> {\n        // do nothing\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '../common.module'\nimport { TransactionModule } from '../transaction/transaction.module'\nimport { BeneficiaryBookComponent } from './beneficiary-book/beneficiary-book.component'\nimport { EmailInviteModalComponent } from './email-invite-modal/email-invite-modal.component'\nimport { PaymentConfirmationComponent } from './payment-confirmation/payment-confirmation.component'\n\n@NgModule({\n    declarations: [PaymentConfirmationComponent, EmailInviteModalComponent, BeneficiaryBookComponent],\n    exports: [BeneficiaryBookComponent],\n    imports: [CommonModule, TransactionModule],\n})\nexport class PaymentFormModule {}\n"],"sourceRoot":"webpack:///"}