{"version":3,"sources":["./src/app/common/card-view/modal-unload/modal-unload.page.html","./src/app/common/card-dummy/card-dummy.component.ts","./src/app/common/card-view/modal-fees/modal-fees.page.ts","./src/app/common/card-view/card-view.page.html","./src/app/common/card-view/modal-change-pin/modal-change-pin.page.html","./src/app/user-cards/card-order-confirmation/card-order-confirmation.component.html","./src/app/common/models/accounting/fee.model.ts","./src/app/common/card-view/modal-download-transactions/modal-download-transactions.page.html","./src/app/common/card-view/modal-offledger/modal-offledger.page.ts","./src/app/common/card-view/modal-fees/modal-fees.page.scss","./src/app/common/card-view/modal-change-pin/modal-change-pin.page.ts","./src/app/common/card-view/modal-topup/modal-topup.page.ts","./src/app/common/card-view/modal-topup/modal-topup.page.html","./src/app/common/card-view/modal-change-pin/modal-change-pin.page.scss","./src/app/common/card-view/modal-offledger/modal-offledger.page.html","./src/app/common/card-view/modal-fees/modal-fees.page.html","./src/app/common/card-view/modal-swap/modal-swap.page.ts","./src/app/common/card-view/card-view-modal.scss","./node_modules/ease-component/index.js","./src/app/common/card-dummy/card-dummy.component.html","./src/app/common/card-view/card-details/card-details.page.html","./src/app/common/security-check/security-check.service.ts","./src/app/user-cards/card-order/card-order-terms/card-order-terms.component.ts","./src/app/common/services/accounting/fee.service.ts","./src/app/common/card-view/modal-download-transactions/modal-download-transactions.page.ts","./src/app/common/card-view/card-view.page.ts","./src/app/common/card-view/modal-swap/modal-swap.page.html","./src/app/common/card-view/card-details/card-details.page.ts","./src/app/user-cards/card-order/card-order-terms/card-order-terms.component.html","./src/app/user-cards/card-order-confirmation/card-order-confirmation.component.ts","./src/app/common/card-dummy/card-dummy.module.ts","./node_modules/scroll/index.js","./src/app/common/card-view/modal-unload/modal-unload.page.ts","./src/app/common/card-view/card-view.page.scss"],"names":[],"mappings":"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","file":"default~admin-admin-module~dashboard-dashboard-module~user-cards-user-cards-module~user-redemption-u~0405aa63.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.unload-card' | translate}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <form\\n            class=\\\"form-validation\\\"\\n            #unloadForm=\\\"ngForm\\\"\\n            [ngClass]=\\\"{ 'ng-submitted': unloadForm.submitted }\\\"\\n            autocomplete=\\\"false\\\"\\n            (ngSubmit)=\\\"submit()\\\"\\n            novalidate\\n        >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"source\\\">{{ 'common.source' | translate }} ({{ 'common.card' | translate }})</label>\\n                    <ng-select\\n                        class=\\\"ng-select-lg ng-select-topup\\\"\\n                        [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                        [(ngModel)]=\\\"sourceCurrencyCode\\\"\\n                        (ngModelChange)=\\\"fetchEvent.next()\\\"\\n                        name=\\\"sourceCurrencyCode\\\"\\n                        [items]=\\\"niumCurrencies\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"true\\\"\\n                        [required]=\\\"true\\\"\\n                        appendTo=\\\".modal-container\\\"\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                            <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            <span class=\\\"small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                            {{ item }}\\n                            <span class=\\\"float-right small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                    </ng-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <div class=\\\"d-flex justify-content-between\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                        </div>\\n                    </div>\\n                    <input\\n                        type=\\\"number\\\"\\n                        class=\\\"form-control form-control-lg\\\"\\n                        id=\\\"amount\\\"\\n                        name=\\\"amount\\\"\\n                        [placeholder]=\\\"'0.00'\\\"\\n                        [(ngModel)]=\\\"amount\\\"\\n                        #amountInput=\\\"ngModel\\\"\\n                        required\\n                    />\\n                    <div *ngIf=\\\"amountInput.invalid && (unloadForm.submitted || amountInput.dirty)\\\" class=\\\"error-messages\\\">\\n                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amountInput?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"destination\\\"> {{ 'common.destination' | translate }} ({{ 'common.wallet' | translate }}) </label>\\n                    <currency-select\\n                        [(currency)]=\\\"destinationCurrency\\\"\\n                        [user]=\\\"session.user\\\"\\n                        [isLarge]=\\\"true\\\"\\n                        [required]=\\\"true\\\"\\n                        [salesProceeds]=\\\"true\\\"\\n                        [filterBy]=\\\"['USD']\\\"\\n                        (currencyChange)=\\\"fetchEvent.next()\\\"\\n                    >\\n                    </currency-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr class=\\\"table-light\\\" *ngIf=\\\"calculateFee()\\\">\\n                            <td>{{ 'common.service-fee' | translate }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <span class=\\\"font-weight-bold\\\" *ngIf=\\\"!isFetching; else spinner\\\"\\n                                    >{{ calculateFee() | amount: 2 }} {{ destinationCurrency.code }}\\n                                </span>\\n                            </td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\" *ngIf=\\\"sourceCurrencyCode !== destinationCurrency.code\\\">\\n                            <td>Exchange rate</td>\\n                            <td class=\\\"text-right\\\">\\n                                <span class=\\\"font-weight-bold\\\" *ngIf=\\\"!isFetching; else spinner\\\">\\n                                    1 {{ sourceCurrencyCode }} = {{ exchangeRate | amount: 4 }} {{destinationCurrency.code}}\\n                                </span>\\n                            </td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\">\\n                            <td>{{ 'common.amount-to-be-credited' | translate }}</td>\\n                            <td class=\\\"text-right\\\"><b>{{ calculateAmount() | amount: 2 }} {{ destinationCurrency.code }}</b></td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading\\\">\\n                <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n            </button>\\n        </form>\\n    </div>\\n</ion-content>\\n<ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n\";","import { Component, Input } from '@angular/core'\nimport { environment } from 'src/environments/environment'\nimport { ICard } from '../api-interfaces'\n\n@Component({\n    selector: 'card-dummy',\n    templateUrl: 'card-dummy.component.html',\n})\nexport class CardDummyComponent {\n    @Input()\n    public card: Partial<ICard>\n    @Input()\n    public disabled: boolean\n    @Input()\n    public backgroundImage: string\n    @Input()\n    public isLoading: boolean\n\n    public getLogo(): string {\n        switch (environment.appName) {\n            case 'sgpmx':\n                return '/img/brand/logo-symbol.svg'\n            case 'premiertrust':\n            case 'ubk':\n            case 'birex':\n            case 'usunpay':\n            case 'etransfer':\n                return '/img/brand/logo.svg'\n            default:\n                return '/img/brand/logo-symbol-white.svg'\n        }\n    }\n\n    public getBackgroundImageStyle() {\n        if (!this.backgroundImage) {\n            return\n        }\n        const styles = {\n            backgroundImage: 'url(' + this.backgroundImage + ')',\n            height: '190px',\n            width: '300px',\n            backgroundSize: 'contain',\n            zIndex: 'auto',\n            border: 'none',\n            boxShadow: 'none',\n        }\n        return styles\n    }\n}\n","import { Component } from '@angular/core'\nimport { ModalController } from '@ionic/angular'\n\n@Component({\n    selector: 'app-modal-fees',\n    templateUrl: './modal-fees.page.html',\n    styleUrls: ['./modal-fees.page.scss'],\n})\nexport class ModalFeesPage {\n    constructor(private modalController: ModalController) {}\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","export default \"<div class=\\\"background\\\"></div>\\n\\n<ion-content>\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"dismiss()\\\">\\n            <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n    <ion-fab horizontal=\\\"end\\\" vertical=\\\"top\\\" slot=\\\"fixed\\\" class=\\\"change-pin\\\">\\n        <div ngbDropdown class=\\\"d-inline-block\\\">\\n            <ion-fab-button\\n                size=\\\"small\\\"\\n                class=\\\"bg-primary\\\"\\n                placement=\\\"bottom-right\\\"\\n                ngbDropdownToggle\\n                closeIcon=\\\"chevron-up-outline\\\"\\n                [disabled]=\\\"!( session.user?.id === item.cardholder?.id || ['admin'].includes(session.user?.role))\\\"\\n            >\\n                <ion-icon name=\\\"ellipsis-horizontal\\\"></ion-icon>\\n            </ion-fab-button>\\n            <div class=\\\"dropdown-menu-right\\\" ngbDropdownMenu>\\n                <button ngbDropdownItem (click)=\\\"openDownloadReportModal()\\\">{{ 'common.download-report' | translate }}</button>\\n                <button *ngIf=\\\"item.type === 'physical'\\\" ngbDropdownItem (click)=\\\"openChangePinModal()\\\">{{ 'common.change-pin' | translate }}</button>\\n                <button ngbDropdownItem (click)=\\\"openUnloadModal()\\\">{{ 'common.unload-card' | translate}}</button>\\n                <button ngbDropdownItem (click)=\\\"openViewNiumTermsModal()\\\">{{'card-view.view-terms' | translate}}</button>\\n                <button ngbDropdownItem (click)=\\\"openFeesModal()\\\">{{'card-view.view-fee-schedule' | translate}}</button>\\n                <ng-container *ngIf=\\\"['admin'].includes(session.user?.role)\\\">\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <div class=\\\"dropdown-item font-sm font-weight-bold text-gray\\\">{{'card-view.admin-functions' | translate}}</div>\\n                    <button ngbDropdownItem (click)=\\\"offLedgerModal('load')\\\">\\n                        {{ 'common.load-card' | translate }} ({{ 'common.off-ledger' | translate }})\\n                    </button>\\n                    <button ngbDropdownItem (click)=\\\"offLedgerModal('unload')\\\">\\n                        {{ 'common.unload-card' | translate }} ({{ 'common.off-ledger' | translate }})\\n                    </button>\\n                </ng-container>\\n            </div>\\n        </div>\\n    </ion-fab>\\n    <ion-grid [fixed]=\\\"true\\\">\\n        <div class=\\\"top-card ion-text-center\\\">\\n            <ion-chip (click)=\\\"presentCardDetails()\\\" color=\\\"light\\\" [ngClass]=\\\"item.type === 'virtual' ? 'clickable' : 'cursor-default'\\\">\\n                <ion-label class=\\\"text-monospace text-white\\\">{{ formatPan(item.maskedPan) }}</ion-label>\\n                <fa-icon *ngIf=\\\"item.type === 'virtual'\\\" class=\\\"ml-1\\\" [icon]=\\\"faEye\\\"></fa-icon>\\n            </ion-chip>\\n            <div class=\\\"balances\\\">\\n                <ng-container *ngIf=\\\"balances$ | async; else loading\\\">\\n                    <div\\n                        (mouseenter)=\\\"balances.length <= 1 ? null : popoverBalance.toggle()\\\"\\n                        (mouseleave)=\\\"balances.length <= 1 ? null : popoverBalance.toggle()\\\"\\n                    >\\n                        <h1 class=\\\"text-white mb-0\\\">\\n                            {{ balances[0].balance | amount: 2 }}\\n                            <ion-text color=\\\"primary\\\">{{ balances[0].curSymbol }}</ion-text>\\n                        </h1>\\n                        <ion-row [ngClass]=\\\"{ 'd-none': balances.length <= 1 }\\\">\\n                            <ion-col size=\\\"12\\\" size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n                                <ion-button\\n                                    fill=\\\"clear\\\"\\n                                    [ngbPopover]=\\\"balancesTemplate\\\"\\n                                    popoverClass=\\\"popover-flex popover-dark\\\"\\n                                    placement=\\\"bottom\\\"\\n                                    size=\\\"small\\\"\\n                                    #popoverBalance=\\\"ngbPopover\\\"\\n                                >\\n                                    <ion-icon name=\\\"eye\\\"></ion-icon>&nbsp;view all balances\\n                                </ion-button>\\n                                <ng-template #balancesTemplate>\\n                                    <table class=\\\"table table-dark table-striped table-borderless mb-0\\\">\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let balance of balances.slice(1)\\\">\\n                                                <td>{{ balance.balance }}</td>\\n                                                <td class=\\\"text-primary text-right\\\">{{ balance.curSymbol }}</td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                </ng-template>\\n                            </ion-col>\\n                        </ion-row>\\n                    </div>\\n                </ng-container>\\n                <ng-template #loading>\\n                    <div class=\\\"loader\\\">\\n                        <ion-spinner name=\\\"dots\\\" color=\\\"light\\\"></ion-spinner>\\n                    </div>\\n                </ng-template>\\n            </div>\\n            <div class=\\\"data\\\">\\n                <ul class=\\\"ion-text-left\\\">\\n                    <li><span class=\\\"title\\\">{{ 'common.name-on-card' | translate }}</span></li>\\n                    <li>\\n                        <p>{{ userDetails?.firstName }} {{ userDetails?.lastName }}</p>\\n                    </li>\\n                </ul>\\n                <ul class=\\\"ion-text-right\\\">\\n                    <li><span class=\\\"title\\\">{{ 'common.status' | translate }}</span></li>\\n                    <li>\\n                        <p>\\n                            <span\\n                                class=\\\"text-capitalize\\\"\\n                                [ngClass]=\\\"{\\n                                    'text-success': item.status === 'active',\\n                                    'text-danger': item.status === 'blocked',\\n                                    'text-warning': item.status === 'inactive'\\n                                }\\\"\\n                            >\\n                                {{ item.status }}\\n                            </span>\\n                        </p>\\n                    </li>\\n                </ul>\\n            </div>\\n\\n            <ion-row class=\\\"primary-actions\\\">\\n                <ion-col>\\n                    <ion-button\\n                        expand=\\\"block\\\"\\n                        (click)=\\\"presentTopupModal()\\\"\\n                        [disabled]=\\\"!this.balances || !( session.user?.id === item.cardholder?.id || ['admin'].includes(session.user?.role))\\\"\\n                    >\\n                        {{ 'common.top-up' | translate | titlecase }}\\n                    </ion-button>\\n                </ion-col>\\n                <ion-col>\\n                    <div class=\\\"btn-group w-100 custom-actions\\\">\\n                        <button\\n                            class=\\\"btn btn-block success-actions\\\"\\n                            (click)=\\\"openSwapModal()\\\"\\n                            [disabled]=\\\"!this.balances || !( session.user?.id === item.cardholder?.id || ['admin'].includes(session.user?.role))\\\"\\n                        >\\n                            <span class=\\\"text-uppercase\\\">{{ 'common.exchange' | translate }}</span>\\n                        </button>\\n                        <button\\n                            class=\\\"btn btn-block danger-actions m-0\\\"\\n                            (click)=\\\"blockUnblockCard(copy.status === 'active')\\\"\\n                            [disabled]=\\\"isBlockUnblockLoading || !( session.user?.id === item.cardholder?.id || ['admin'].includes(session.user?.role))\\\"\\n                        >\\n                            <ng-template #spinner><ion-spinner name=\\\"crescent\\\"></ion-spinner></ng-template>\\n                            <span class=\\\"text-uppercase\\\" *ngIf=\\\"!isBlockUnblockLoading; else spinner\\\"\\n                                >{{ (copy.status === 'active' ? 'common.block' : 'common.unblock') | translate }}</span\\n                            >\\n                        </button>\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n        </div>\\n        <div class=\\\"section-list\\\">\\n            <ion-item *ngFor=\\\"let tx of transactions\\\">\\n                <div\\n                    class=\\\"thumb\\\"\\n                    [ngClass]=\\\"getTransactionColor(tx)\\\"\\n                    slot=\\\"start\\\"\\n                    placement=\\\"right\\\"\\n                    [ngbTooltip]=\\\"tx.retrievalReferenceNumber\\\"\\n                    triggers=\\\"click:blur\\\"\\n                >\\n                    <ion-icon [name]=\\\"getTransactionIcon(tx)\\\"></ion-icon>\\n                </div>\\n                <ion-label>\\n                    <h4><span [innerHtml]=\\\"getDescription(tx)\\\"></span></h4>\\n                    <p>{{ tx.createdAt | date: 'medium' }}</p>\\n                    <span class=\\\"label label-xs label-primary\\\" *ngIf=\\\"tx.merchantCategory\\\">{{ tx.merchantCategory }}</span>\\n                    <span class=\\\"label label-xs label-primary\\\" *ngIf=\\\"tx.transactionType.includes('Wallet_Credit_Mode_Prefund')\\\"\\n                        >{{ 'common.top-up' | translate }}</span\\n                    >\\n                    <span class=\\\"label label-xs label-primary\\\" *ngIf=\\\"tx.transactionType.includes('Wallet_Refund')\\\"\\n                        >{{ 'common.top-up' | translate | titlecase }}</span\\n                    >\\n                    <span class=\\\"label label-xs label-primary\\\" *ngIf=\\\"tx.transactionType.includes('Wallet_Fund_Transfer')\\\"\\n                        >{{ 'common.forex' | translate }}</span\\n                    >\\n                </ion-label>\\n                <div slot=\\\"end\\\">\\n                    <div\\n                        [ngClass]=\\\"{\\n                            'text-green': ['Approved', 'Pending'].includes(tx.status) && !tx.debit,\\n                            'text-danger': ['Approved', 'Pending'].includes(tx.status) && tx.debit,\\n                            'text-muted': tx.status === 'Declined'\\n                        }\\\"\\n                    >\\n                        {{ tx.debit ? '-' : '+' }}{{ tx.authAmount | amount }} {{ tx.authCurrencyCode || tx.transactionCurrencyCode }}\\n                    </div>\\n                    <small\\n                        class=\\\"text-muted\\\"\\n                        *ngIf=\\\"tx.transactionType !== 'Auto_Sweep' && tx.transactionType !== 'Wallet_Fund_Transfer' && tx.authCurrencyCode !== tx.transactionCurrencyCode\\\"\\n                    >\\n                        {{ tx.debit ? '-' : '+' }}{{ tx.cardTransactionAmount | amount }} {{ tx.transactionCurrencyCode }}\\n                    </small>\\n                    <small\\n                        class=\\\"text-green\\\"\\n                        *ngIf=\\\"(tx.transactionType === 'Auto_Sweep' || tx.transactionType === 'Wallet_Fund_Transfer') && tx.authCurrencyCode !== tx.transactionCurrencyCode\\\"\\n                    >\\n                        +{{ tx.cardTransactionAmount | amount }} {{ tx.transactionCurrencyCode }}\\n                    </small>\\n                </div>\\n            </ion-item>\\n            <ion-item class=\\\"ion-text-center\\\" *ngIf=\\\"!isFetching && transactions.length === 0\\\">\\n                <ion-label color=\\\"medium\\\"> {{ 'no-history-found' | translate }} </ion-label>\\n            </ion-item>\\n            <ion-infinite-scroll (ionInfinite)=\\\"fetchTransactions($event)\\\" class=\\\"ion-padding-top\\\">\\n                <ion-infinite-scroll-content loadingSpinner=\\\"crescent\\\"> </ion-infinite-scroll-content>\\n            </ion-infinite-scroll>\\n        </div>\\n    </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.change-pin' | translate }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<div class=\\\"ion-padding p-3\\\">\\n    <form\\n        class=\\\"form-validation\\\"\\n        #changePinForm=\\\"ngForm\\\"\\n        [ngClass]=\\\"{ 'ng-submitted': changePinForm.submitted }\\\"\\n        autocomplete=\\\"false\\\"\\n        (ngSubmit)=\\\"changePin()\\\"\\n        novalidate\\n    >\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col\\\">\\n                <label class=\\\"font-md\\\" for=\\\"pin\\\">{{'modal-change-pin.choose-your-new-pin' | translate}}</label>\\n                <input\\n                    type=\\\"password\\\"\\n                    class=\\\"form-control form-control-lg\\\"\\n                    [(ngModel)]=\\\"pinBlock\\\"\\n                    id=\\\"pin\\\"\\n                    name=\\\"pin\\\"\\n                    #pin=\\\"ngModel\\\"\\n                    pattern=\\\"^[0-9]+$\\\"\\n                    minlength=\\\"6\\\"\\n                    maxlength=\\\"6\\\"\\n                    required\\n                />\\n                <div *ngIf=\\\"pin.invalid && (changePinForm.submitted || pin.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"pin?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"pin?.errors?.pattern\\\">{{ 'common.only-digits-allowed' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"pin?.errors?.minlength\\\">{{ 'common.must-six-digits' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"pin?.errors?.maxlength\\\">{{ 'common.cannot-be-longer' | translate }}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col\\\">\\n                <label class=\\\"font-md\\\" for=\\\"pin\\\">{{ 'common.repeat-pin' | translate }}</label>\\n                <input\\n                    type=\\\"password\\\"\\n                    class=\\\"form-control form-control-lg\\\"\\n                    [(ngModel)]=\\\"repeatedPin\\\"\\n                    id=\\\"repeatedPin\\\"\\n                    name=\\\"repeatedPin\\\"\\n                    #repeatedPinInput=\\\"ngModel\\\"\\n                    pattern=\\\"^[0-9]+$\\\"\\n                    minlength=\\\"6\\\"\\n                    maxlength=\\\"6\\\"\\n                    [matchPassword]=\\\"pinBlock\\\"\\n                    required\\n                />\\n                <div *ngIf=\\\"repeatedPinInput.invalid && (changePinForm.submitted || repeatedPinInput.dirty)\\\" class=\\\"error-messages\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.pattern\\\">{{ 'common.only-digits-allowed' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.minlength\\\">{{ 'common.must-six-digits' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.maxlength\\\">{{ 'common.cannot-be-longer' | translate }}</div>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"repeatedPinInput?.errors?.matchPassword\\\">\\n                        {{ 'common.pin-do-not-match' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading\\\">\\n            <ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n            <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n        </button>\\n    </form>\\n</div>\\n\";","export default \"<form\\n    #cardOrderConfirmForm=\\\"ngForm\\\"\\n    [ngClass]=\\\"{ 'ng-submitted': cardOrderConfirmForm.submitted }\\\"\\n    (ngSubmit)=\\\"submit()\\\"\\n    autocomplete=\\\"false\\\"\\n    novalidate\\n>\\n    <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ 'common.confirm-shipping-address' | translate }}</h5>\\n        <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"activeModal.dismiss()\\\">&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"callout callout-success mt-0\\\">\\n            <h6 class=\\\"text-success mb-0\\\">{{ 'common.your-card-is-waiting-for-you' | translate }}</h6>\\n            <p class=\\\"text-gray\\\">\\n                {{ 'common.you-have-been-assigned-card-order-by' }} <span class=\\\"text-primary\\\"> {{ session.user?.association?.name }} </span>.\\n                {{ 'common.confirm' | translate }}\\n                <ng-container *ngIf=\\\"cardOrder.type === 'physical'\\\">{{ 'common.your-shipping-address' | translate }} </ng-container\\n                >{{ 'common.to-proceed' | translate }}\\n            </p>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"font-md\\\" for=\\\"cardOrderId\\\">{{ 'common.order-id' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardOrderId\\\" name=\\\"cardOrderId\\\" [value]=\\\"cardOrder.id\\\" disabled />\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"font-md\\\" for=\\\"cardOrderType\\\">{{ 'common.card-type' | translate }}</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardOrderType\\\" name=\\\"cardOrderType\\\" [value]=\\\"cardOrder.type | uppercase\\\" disabled />\\n        </div>\\n        <div class=\\\"py-1\\\"></div>\\n        <ng-container *ngIf=\\\"cardOrder.type === 'physical'\\\">\\n            <h6 class=\\\"text-primary\\\">{{ 'common.shipping-address' | translate }}</h6>\\n            <textarea\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"cardOrder.shippingAddress\\\"\\n                name=\\\"shippingAddress\\\"\\n                rows=\\\"4\\\"\\n                required\\n                #shippingAddressField=\\\"ngModel\\\"\\n            ></textarea>\\n            <div *ngIf=\\\"shippingAddressField.invalid && (cardOrderConfirmForm.submitted || shippingAddressField.dirty)\\\" class=\\\"error-messages\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"shippingAddressField?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n            </div>\\n        </ng-container>\\n    </div>\\n    <div class=\\\"modal-footer flex-column flex-md-row justify-content-center justify-content-md-end\\\">\\n        <button class=\\\"btn btn-default btn-w-sm ml-1\\\" (click)=\\\"activeModal.dismiss()\\\" [disabled]=\\\"isLoading\\\">\\n            {{ 'common.i-will-do-it-later' | translate }}\\n        </button>\\n        <button class=\\\"btn btn-success btn-w-sm ml-1\\\" type=\\\"submit\\\" [ngClass]=\\\"{ loading: isLoading }\\\" [disabled]=\\\"isLoading\\\">\\n            {{ 'common.confirm' | translate }}\\n        </button>\\n    </div>\\n</form>\\n\";","import { FeeType, IFee, TransactionMethod } from '../../api-interfaces'\nimport { User } from '../core/user.model'\nimport { Beneficiary } from './beneficiary.model'\nimport { Currency } from './currency.model'\n\nexport const feeTypeMap: { [K in FeeType]: string } = {\n    'account-fee': 'Account Fee',\n    'card-order': 'Card Order Fee',\n    'fx-spread': 'Exchange Rate Spread',\n    deposit: 'Deposit',\n    withdrawal: 'Withdrawal',\n    transfer: 'Transfer',\n    conversion: 'Conversion',\n    investment: 'Investment',\n    trade: 'Trade',\n    redeem: 'Redeem',\n    service: 'Buy & Sell',\n    gst: 'GST',\n    payment: 'Payment',\n}\n\nexport const feeMethodMap: { [K in TransactionMethod]: string } = {\n    internal: 'Internal',\n    card: 'Topup Card',\n    crypto: 'Crypto',\n    local: 'LOCAL',\n    swift: 'SWIFT',\n}\n\nexport class Fee implements IFee {\n    public id: string\n    public type: FeeType\n    public method: TransactionMethod\n    public fixed: string | null\n    public relative: string | null\n    public max: string | null\n    public min: string | null\n    public minValue: string | null\n    public currency: Currency\n    public user: User | null\n    public beneficiary: Beneficiary | null\n    public createdAt: string\n    public updatedAt: string\n\n    public constructor(data?: Partial<IFee>) {\n        if (data) {\n            Object.assign(this, data)\n            if (data.currency) {\n                this.currency = new Currency(data.currency)\n            }\n            if (data.user) {\n                this.user = new User(data.user)\n            }\n            if (data.beneficiary) {\n                this.beneficiary = new Beneficiary(data.beneficiary)\n            }\n        }\n    }\n\n    public isGlobal(): boolean {\n        return this.user === null\n    }\n\n    public isFallback(currency: Currency): boolean {\n        return this.currency.code !== currency.code\n    }\n\n    public isAssociationFee(user: User | null): boolean {\n        return !!this.user && !!user && this.user.id !== user.id\n    }\n\n    public hasFixedFee(): boolean {\n        return !['fx-spread', 'service', 'gst'].includes(this.type)\n    }\n\n    public hasRelativeFee(): boolean {\n        return !['account-fee'].includes(this.type)\n    }\n\n    public hasMaxOrMin(): boolean {\n        return !['account-fee', 'fx-spread'].includes(this.type)\n    }\n\n    public hasMinValue(): boolean {\n        return ['transfer', 'deposit', 'withdrawal'].includes(this.type)\n    }\n}\n\nexport function getFeeType(transactionType: string): FeeType {\n    const feeMap: Record<string, FeeType> = {\n        deposit: 'deposit',\n        withdrawal: 'withdrawal',\n        transfer: 'transfer',\n        conversion: 'conversion',\n        investment: 'investment',\n        trade: 'trade',\n        redeem: 'redeem',\n        payment: 'payment',\n        // Use transfer fee for invoice\n        invoice: 'transfer',\n        'invoice-p2p': 'transfer',\n        'card-order': 'card-order',\n        'account-fee': 'account-fee',\n    }\n    return feeMap[transactionType]\n}\n","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.download-report' | translate }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"font-md\\\" for=\\\"fromDate\\\">{{ 'common.from' | translate }}</label>\\n            <div class=\\\"input-group\\\">\\n                <input\\n                    class=\\\"form-control form-control-lg\\\"\\n                    placeholder=\\\"yyyy-mm-dd\\\"\\n                    name=\\\"fromDate\\\"\\n                    [(ngModel)]=\\\"fromDate\\\"\\n                    ngbDatepicker\\n                    #dfromDate=\\\"ngbDatepicker\\\"\\n                />\\n                <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-lg btn-default calendar\\\" (click)=\\\"dfromDate.toggle()\\\" type=\\\"button\\\">\\n                        <fa-icon [icon]=\\\"faCalendarAlt\\\"></fa-icon>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"font-md\\\" for=\\\"toDate\\\">{{ 'common.to' | translate | titlecase }}</label>\\n            <div class=\\\"input-group\\\">\\n                <input\\n                    class=\\\"form-control form-control-lg\\\"\\n                    placeholder=\\\"yyyy-mm-dd\\\"\\n                    name=\\\"toDate\\\"\\n                    [(ngModel)]=\\\"toDate\\\"\\n                    ngbDatepicker\\n                    #dtoDate=\\\"ngbDatepicker\\\"\\n                />\\n                <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-lg btn-default calendar\\\" (click)=\\\"dtoDate.toggle()\\\" type=\\\"button\\\">\\n                        <fa-icon [icon]=\\\"faCalendarAlt\\\"></fa-icon>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-primary btn-block mt-3\\\" (click)=\\\"downloadReport()\\\">{{ 'common.download' | translate }}</button>\\n    </div>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport { TranslateService } from '@ngx-translate/core'\nimport { finalize } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { ICard } from '../../api-interfaces'\nimport { SessionService } from '../../services/session.service'\n\ninterface LoadPayload {\n    sourceCurrencyCode: string\n    amount: number | string\n    destinationCurrencyCode: string\n}\n\ninterface UnloadPayload {\n    currencyCode: string\n    comments: string\n    amount: string\n}\n\ninterface NiumFundWalletResponse {\n    systemReferenceNumber: string\n    sourceAmount: number\n    sourceCurrencyCode: string\n    destinationAmount: number\n    destinationCurrencyCode: string\n    status: 'Pending' | 'Approved' | 'Declined'\n    paymentMethods: string[]\n}\n\ninterface NiumRefundWalletResponse {\n    message: string\n    systemReferenceNumber: string\n}\n\n@Component({\n    selector: 'app-modal-offledger',\n    templateUrl: './modal-offledger.page.html',\n})\nexport class ModalOffledgerPage implements OnInit {\n    public item: ICard\n    public balances: any[]\n    public type: string\n    public apiUrl: string\n    public body: LoadPayload | UnloadPayload\n\n    public load: LoadPayload = {\n        sourceCurrencyCode: 'USD',\n        amount: '',\n        destinationCurrencyCode: 'USD',\n    }\n    public unload: UnloadPayload = {\n        currencyCode: 'USD',\n        amount: '',\n        comments: '',\n    }\n    public isLoading = false\n\n    public niumCurrencies = ['AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'SGD', 'USD']\n\n    public appName = environment.appName\n\n    @ViewChild('offLedgerForm')\n    public offLedgerForm: NgForm\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        private modalController: ModalController,\n        public translate: TranslateService\n    ) {}\n\n    ngOnInit() {}\n\n    public async submitOffLedgerForm(): Promise<void> {\n        if (this.offLedgerForm.invalid) {\n            return\n        }\n        this.isLoading = true\n        if (this.type === 'load') {\n            this.load.amount += ''\n            this.http\n                .post<NiumRefundWalletResponse>(`/cards/${this.item.id}/load`, this.load)\n                .pipe(\n                    finalize(() => {\n                        this.isLoading = false\n                    })\n                )\n                .subscribe(response => {\n                    this.modalController.dismiss(response)\n                })\n        } else {\n            this.unload.amount += ''\n            this.http\n                .post<NiumFundWalletResponse>(`/cards/${this.item.id}/unload`, this.unload)\n                .pipe(\n                    finalize(() => {\n                        this.isLoading = false\n                    })\n                )\n                .subscribe(response => {\n                    this.modalController.dismiss(response)\n                })\n        }\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","export default \"ion-header ion-toolbar {\\n  --background: transparent;\\n}\\n\\nh1.title {\\n  font-weight: 600;\\n  font-size: 28px;\\n  line-height: 34px;\\n  color: #151522;\\n  padding: 0;\\n  margin-top: 0;\\n  margin-bottom: 16px;\\n}\\n\\nion-text {\\n  font-weight: 300;\\n  font-size: 17px;\\n  line-height: 24px;\\n  color: #151522;\\n}\\n\\nion-item {\\n  --background: transparent;\\n  --inner-padding-end: 0;\\n}\\n\\nion-item ion-input {\\n  border: 1px solid rgba(228, 228, 228, 0.6);\\n  box-sizing: border-box;\\n  border-radius: 5px;\\n  background: #ffffff;\\n  --padding-start: 16px;\\n  margin-bottom: 8px;\\n  min-height: 48px;\\n}\\n\\nion-item ion-toggle {\\n  --background: rgba(153, 153, 153, 0.8);\\n}\\n\\n.action-button {\\n  --border-radius: 6px;\\n  --box-shadow: none !important;\\n  min-height: 48px;\\n  box-shadow: 0px 4px 8px rgba(50, 50, 71, 0.06), 0px 4px 4px rgba(50, 50, 71, 0.08);\\n}\\n\\n.action-button span {\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-transform: initial;\\n}\\n\\n.mb {\\n  margin-bottom: 16px;\\n}\\n\\n.link {\\n  text-decoration: none !important;\\n  font-weight: normal;\\n  font-size: 15px;\\n  line-height: 20px;\\n}\\n\\n.input-label {\\n  font-weight: 600;\\n  color: #151522;\\n  margin-bottom: 16px;\\n}\\n\\n.caption {\\n  color: #151522;\\n}\\n\\n.basic::after {\\n  content: \\\"\\\";\\n  width: 48px;\\n  height: auto;\\n  padding-top: 24px;\\n}\\n\\n.errors-container {\\n  font-size: 12px;\\n  font-weight: 500;\\n  color: var(--ion-color-danger);\\n}\\n\\n.action-button {\\n  --border-radius: 6px;\\n  --box-shadow: none !important;\\n  min-height: 48px;\\n  box-shadow: 0px 4px 8px rgba(50, 50, 71, 0.06), 0px 4px 4px rgba(50, 50, 71, 0.08);\\n}\\n\\n.action-button span {\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-transform: initial;\\n}\\n\\n.modal-change-pin .modal-wrapper {\\n  margin: 1rem;\\n  height: 250px;\\n  position: relative;\\n  box-shadow: 0px 1px 150px rgba(0, 0, 0, 0.4);\\n  border-radius: 8px;\\n  --width: 450px;\\n  --max-width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZGFsLWZlZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUNFO0VBQ0UsMENBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFRTtFQUNFLHNDQUFBO0FBQUo7O0FBSUE7RUFDRSxvQkFBQTtFQUNBLDZCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrRkFBQTtBQURGOztBQUdFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSx1QkFBQTtBQURKOztBQUtBO0VBQ0UsbUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdDQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxjQUFBO0FBRkY7O0FBS0E7RUFDRSxXQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQUZGOztBQUtBO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsOEJBQUE7QUFGRjs7QUFLQTtFQUNFLG9CQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLGtGQUFBO0FBRkY7O0FBSUU7RUFDRSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FBRko7O0FBTUE7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsNENBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUhGIiwiZmlsZSI6Im1vZGFsLWZlZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWhlYWRlciBpb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbmgxLnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zaXplOiAyOHB4O1xuICBsaW5lLWhlaWdodDogMzRweDtcbiAgY29sb3I6ICMxNTE1MjI7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbmlvbi10ZXh0IHtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgY29sb3I6ICMxNTE1MjI7XG59XG5cbmlvbi1pdGVtIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgLS1pbm5lci1wYWRkaW5nLWVuZDogMDtcblxuICBpb24taW5wdXQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjI4LCAyMjgsIDIyOCwgMC42KTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgIC0tcGFkZGluZy1zdGFydDogMTZweDtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgbWluLWhlaWdodDogNDhweDtcbiAgfVxuXG4gIGlvbi10b2dnbGUge1xuICAgIC0tYmFja2dyb3VuZDogcmdiYSgxNTMsIDE1MywgMTUzLCAwLjgpO1xuICB9XG59XG5cbi5hY3Rpb24tYnV0dG9uIHtcbiAgLS1ib3JkZXItcmFkaXVzOiA2cHg7XG4gIC0tYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBtaW4taGVpZ2h0OiA0OHB4O1xuICBib3gtc2hhZG93OiAwcHggNHB4IDhweCByZ2JhKDUwLCA1MCwgNzEsIDAuMDYpLCAwcHggNHB4IDRweCByZ2JhKDUwLCA1MCwgNzEsIDAuMDgpO1xuXG4gIHNwYW4ge1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xuICB9XG59XG5cbi5tYiB7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbi5saW5rIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG59XG5cbi5pbnB1dC1sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjMTUxNTIyO1xuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xufVxuXG4uY2FwdGlvbiB7XG4gIGNvbG9yOiAjMTUxNTIyO1xufVxuXG4uYmFzaWM6OmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIHBhZGRpbmctdG9wOiAyNHB4O1xufVxuXG4uZXJyb3JzLWNvbnRhaW5lciB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufVxuXG4uYWN0aW9uLWJ1dHRvbiB7XG4gIC0tYm9yZGVyLXJhZGl1czogNnB4O1xuICAtLWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgbWluLWhlaWdodDogNDhweDtcbiAgYm94LXNoYWRvdzogMHB4IDRweCA4cHggcmdiYSg1MCwgNTAsIDcxLCAwLjA2KSwgMHB4IDRweCA0cHggcmdiYSg1MCwgNTAsIDcxLCAwLjA4KTtcblxuICBzcGFuIHtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjJweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcbiAgfVxufVxuXG4ubW9kYWwtY2hhbmdlLXBpbiAubW9kYWwtd3JhcHBlciB7XG4gIG1hcmdpbjogMXJlbTtcbiAgaGVpZ2h0OiAyNTBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3gtc2hhZG93OiAwcHggMXB4IDE1MHB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAtLXdpZHRoOiA0NTBweDtcbiAgLS1tYXgtd2lkdGg6IDkwJTtcbn1cbiJdfQ== */\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport { finalize } from 'rxjs/operators'\nimport { ICard } from '../../api-interfaces'\nimport { SessionService } from '../../services/session.service'\n\n@Component({\n    selector: 'app-modal-change-pin',\n    templateUrl: './modal-change-pin.page.html',\n    styleUrls: ['./modal-change-pin.page.scss', '../card-view-modal.scss'],\n})\nexport class ModalChangePinPage implements OnInit {\n    public item: ICard\n    public pinBlock = ''\n    public repeatedPin: string\n    public isLoading = false\n\n    @ViewChild('changePinForm')\n    public changePinForm: NgForm\n\n    constructor(private http: HttpClient, public session: SessionService, private modalController: ModalController) {}\n\n    ngOnInit() {}\n\n    public async changePin(): Promise<void> {\n        if (this.changePinForm.invalid) {\n            return\n        }\n        this.isLoading = true\n        this.http\n            .put<ICard>(`/cards/${this.item.id}/pin`, { pin: this.pinBlock })\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.modalController.dismiss(response)\n            })\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport BigNumber from 'bignumber.js'\nimport { Subscription } from 'rxjs'\nimport { finalize, take } from 'rxjs/operators'\nimport { CurrenciesQuery } from 'src/app/store/currencies/currencies.query'\nimport { WalletsQuery } from 'src/app/store/wallets/wallets.query'\nimport { environment } from 'src/environments/environment'\nimport { ICard, ICurrency } from '../../api-interfaces'\nimport { Fee } from '../../models/accounting/fee.model'\nimport { User } from '../../models/core/user.model'\nimport { FeeService } from '../../services/accounting/fee.service'\nimport { SessionService } from '../../services/session.service'\n\ninterface TopupPayload {\n    sourceCurrencyCode: string\n    amount: number | string\n    destinationCurrencyCode: string\n}\n\ninterface NiumFundWalletResponse {\n    systemReferenceNumber: string\n    sourceAmount: number\n    sourceCurrencyCode: string\n    destinationAmount: number\n    destinationCurrencyCode: string\n    status: 'Pending' | 'Approved' | 'Declined'\n    paymentMethods: string[]\n}\n\nexport interface GetExchangeRateResponse {\n    sourceCurrencyCode: string\n    sourceAmount?: string\n    destinationCurrencyCode: string\n    destinationAmount?: string\n    exchangeRate: string\n}\n\n@Component({\n    selector: 'app-modal-topup',\n    templateUrl: './modal-topup.page.html',\n    styleUrls: ['../card-view-modal.scss'],\n})\nexport class ModalTopupPage implements OnInit, OnDestroy {\n    public item: ICard\n    public balances: any[]\n\n    public from: ICurrency = { code: 'USD' } as any\n    public topup: TopupPayload = {\n        sourceCurrencyCode: 'USD',\n        amount: '',\n        destinationCurrencyCode: 'USD',\n    }\n    public isLoading = false\n    public isGettingExchangeRate = false\n    public cardTopupFee: Fee | null\n    public exchangeRate = '1'\n\n    public niumCurrencies = ['AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'SGD', 'USD']\n\n    public appName = environment.appName\n    public currency: ICurrency\n\n    public subcriptions = new Subscription()\n\n    @ViewChild('transactionForm')\n    public transactionForm: NgForm\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        private modalController: ModalController,\n        private walletsQuery: WalletsQuery,\n        private currenciesQuery: CurrenciesQuery,\n        private feeService: FeeService\n    ) {}\n\n    public ngOnInit() {\n        this.subcriptions.add(\n            this.feeService\n                .fetch({\n                    type: 'withdrawal',\n                    method: 'card',\n                    currency: this.from,\n                    user: new User(this.session.user),\n                })\n                .subscribe(cardTopupFee => (this.cardTopupFee = cardTopupFee))\n        )\n        this.subcriptions.add(\n            this.currenciesQuery\n                .selectEntity('USD')\n                .pipe(take(1))\n                .subscribe(usd => {\n                    this.currency = usd!\n                })\n        )\n\n        if (this.niumCurrencies.includes(this.session.user.preferredCurrency.code)) {\n            this.topup.destinationCurrencyCode = this.session.user.preferredCurrency.code\n        }\n    }\n\n    public ngOnDestroy() {\n        this.subcriptions.unsubscribe()\n    }\n\n    public async topupCard(): Promise<void> {\n        if (this.transactionForm.invalid) {\n            return\n        }\n        this.isLoading = true\n        this.topup.sourceCurrencyCode = this.from.code\n        this.topup.amount += ''\n        this.http\n            .post<NiumFundWalletResponse>(`/cards/${this.item.id}/topup`, this.topup)\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.modalController.dismiss(response)\n            })\n    }\n\n    public getCardBalance(code: string): string {\n        const found = this.balances.find(b => b.curSymbol === code)\n        if (found) {\n            return found.balance + ''\n        }\n        return '0.00'\n    }\n\n    public useMax(): void {\n        this.subcriptions.add(\n            this.walletsQuery.balances$.subscribe(balances => {\n                const found = balances.find(balance => balance.currency.code === this.from.code)\n                if (found) {\n                    this.topup.amount = parseFloat(found.balance)\n                }\n            })\n        )\n    }\n\n    public calculateFee(): string {\n        const { relativeFee, fixedFee } = this.feeService.determineFee(\n            {\n                amount: this.topup.amount + '' || '0',\n                currency: this.currency,\n            },\n            this.cardTopupFee\n        )\n        const relativeFeeAmount = new BigNumber(this.topup.amount || 0).times(relativeFee || 0)\n        const totalFee = new BigNumber(fixedFee || 0).plus(relativeFeeAmount)\n\n        return totalFee.toFixed(2, 1)\n    }\n\n    public isForexTopup(): boolean {\n        return this.from.code !== this.topup.destinationCurrencyCode\n    }\n\n    public getExchangeRate(): void {\n        this.isGettingExchangeRate = true\n        if (this.from.code !== this.topup.destinationCurrencyCode) {\n            this.http\n                .post<GetExchangeRateResponse>(\n                    `/card-programs/${this.item.cardholder?.cardProgram?.id}/get-exchange-rate`,\n                    {\n                        sourceCurrencyCode: this.from.code,\n                        destinationCurrencyCode: this.topup.destinationCurrencyCode,\n                    }\n                )\n                .pipe(\n                    finalize(() => {\n                        this.isGettingExchangeRate = false\n                    })\n                )\n                .subscribe(response => {\n                    this.exchangeRate = response.exchangeRate\n                })\n        } else {\n            this.exchangeRate = '1'\n            this.isGettingExchangeRate = false\n        }\n    }\n\n    public calculateAmount(): string {\n        if (!this.topup.amount) {\n            return '0'\n        }\n\n        return new BigNumber(this.topup.amount || 0)\n            .minus(new BigNumber(this.calculateFee()))\n            .times(this.exchangeRate)\n            .toFixed(2)\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.top-up-card' | translate }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <form\\n            class=\\\"form-validation\\\"\\n            #transactionForm=\\\"ngForm\\\"\\n            [ngClass]=\\\"{ 'ng-submitted': transactionForm.submitted }\\\"\\n            autocomplete=\\\"false\\\"\\n            (ngSubmit)=\\\"topupCard()\\\"\\n            novalidate\\n        >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"source\\\">\\n                        {{ 'common.source' | translate }} ({{'common.wallet' | translate}}<ng-container *ngIf=\\\"appName === 'sgpmx'\\\">\\n                            - {{ 'common.sales-proceeds' | translate }}</ng-container\\n                        >)\\n                    </label>\\n                    <currency-select\\n                        [(currency)]=\\\"from\\\"\\n                        [user]=\\\"session.user\\\"\\n                        [isLarge]=\\\"true\\\"\\n                        [currencyTypes]=\\\"['fiat']\\\"\\n                        [required]=\\\"true\\\"\\n                        [filterBy]=\\\"['USD']\\\"\\n                        [salesProceeds]=\\\"true\\\"\\n                        [hideZeroBalance]=\\\"appName !== 'sgpmx'\\\"\\n                    >\\n                    </currency-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <div class=\\\"d-flex justify-content-between\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                        </div>\\n                        <a href (click)=\\\"useMax(); $event.preventDefault()\\\">{{ 'common.use-max' | translate }}</a>\\n                    </div>\\n                    <input\\n                        type=\\\"number\\\"\\n                        class=\\\"form-control form-control-lg\\\"\\n                        id=\\\"amount\\\"\\n                        name=\\\"amount\\\"\\n                        [placeholder]=\\\"'0.00'\\\"\\n                        [(ngModel)]=\\\"topup.amount\\\"\\n                        #amount=\\\"ngModel\\\"\\n                        required\\n                    />\\n                    <div *ngIf=\\\"amount.invalid && (transactionForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"destination\\\">{{ 'common.destination' | translate }} ({{ 'common.card' | translate }})</label>\\n                    <ng-select\\n                        class=\\\"ng-select-lg ng-select-topup\\\"\\n                        [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                        [(ngModel)]=\\\"topup.destinationCurrencyCode\\\"\\n                        (ngModelChange)=\\\"getExchangeRate()\\\"\\n                        name=\\\"destinationCurrencyCode\\\"\\n                        [items]=\\\"niumCurrencies\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"true\\\"\\n                        [required]=\\\"true\\\"\\n                        appendTo=\\\".modal-container\\\"\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                            <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            <span class=\\\"small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                            {{ item }}\\n                            <span class=\\\"float-right small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                    </ng-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr class=\\\"table-light\\\">\\n                            <td>{{ 'common.service-fee' | translate }}</td>\\n                            <td class=\\\"text-right\\\"><b>{{ calculateFee() | amount: 2 }} {{ from.code }}</b></td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\" *ngIf=\\\"isForexTopup()\\\">\\n                            <td>Exchange rate</td>\\n                            <td class=\\\"text-right\\\">\\n                                <b\\n                                    ><span *ngIf=\\\"!isGettingExchangeRate; else spinner\\\"\\n                                        >1 {{ from.code }} = {{ exchangeRate | amount: 4 }} {{topup.destinationCurrencyCode}}</span\\n                                    ></b\\n                                >\\n                            </td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\">\\n                            <td>{{ 'common.amount-to-be-credited' | translate }}</td>\\n                            <td class=\\\"text-right\\\"><b>{{ calculateAmount() | amount: 2 }} {{ topup.destinationCurrencyCode }}</b></td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading\\\">\\n                <ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n                <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n            </button>\\n        </form>\\n    </div>\\n</ion-content>\\n\";","export default \".modal-change-pin .modal-wrapper {\\n  margin: 1rem;\\n  height: 250px;\\n  position: relative;\\n  box-shadow: 0px 1px 150px rgba(0, 0, 0, 0.4);\\n  border-radius: 8px;\\n  --width: 450px;\\n  --max-width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZGFsLWNoYW5nZS1waW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLDRDQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0EsZ0JBQUE7QUFDRiIsImZpbGUiOiJtb2RhbC1jaGFuZ2UtcGluLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbC1jaGFuZ2UtcGluIC5tb2RhbC13cmFwcGVyIHtcbiAgbWFyZ2luOiAxcmVtO1xuICBoZWlnaHQ6IDI1MHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJveC1zaGFkb3c6IDBweCAxcHggMTUwcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIC0td2lkdGg6IDQ1MHB4O1xuICAtLW1heC13aWR0aDogOTAlO1xufVxuIl19 */\";","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title\\n            >{{type === 'load' ? ('common.load-card' | translate) + ' (Off-ledger)' : ('common.load-card' | translate) + ' (Off-ledger)'}}</ion-title\\n        >\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <form\\n            class=\\\"form-validation\\\"\\n            #offLedgerForm=\\\"ngForm\\\"\\n            [ngClass]=\\\"{ 'ng-submitted': offLedgerForm.submitted }\\\"\\n            autocomplete=\\\"false\\\"\\n            (ngSubmit)=\\\"submitOffLedgerForm()\\\"\\n            novalidate\\n        >\\n            <ng-container *ngIf=\\\"type === 'load'\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <div class=\\\"d-flex justify-content-between\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                            </div>\\n                        </div>\\n                        <input\\n                            type=\\\"number\\\"\\n                            class=\\\"form-control form-control-lg\\\"\\n                            id=\\\"amount\\\"\\n                            name=\\\"amount\\\"\\n                            [placeholder]=\\\"'0.00'\\\"\\n                            [(ngModel)]=\\\"load.amount\\\"\\n                            #amount=\\\"ngModel\\\"\\n                            required\\n                        />\\n                        <div *ngIf=\\\"amount.invalid && (offLedgerForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"sourceCurrencyCode\\\">{{ 'common.source-currency-code' | translate }}</label>\\n                        <ng-select\\n                            class=\\\"ng-select-lg ng-select-topup\\\"\\n                            [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                            [(ngModel)]=\\\"load.sourceCurrencyCode\\\"\\n                            name=\\\"sourceCurrencyCode\\\"\\n                            [items]=\\\"niumCurrencies\\\"\\n                            [required]=\\\"true\\\"\\n                            appendTo=\\\".modal-container\\\"\\n                            [searchable]=\\\"false\\\"\\n                            [clearable]=\\\"false\\\"\\n                        >\\n                            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            </ng-template>\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\"> {{ item }} </ng-template>\\n                        </ng-select>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"destinationCurrencyCode\\\">{{ 'common.destination-currency-code' | translate }}</label>\\n                        <ng-select\\n                            class=\\\"ng-select-lg ng-select-topup\\\"\\n                            [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                            [(ngModel)]=\\\"load.destinationCurrencyCode\\\"\\n                            name=\\\"destinationCurrencyCode\\\"\\n                            [items]=\\\"niumCurrencies\\\"\\n                            [required]=\\\"true\\\"\\n                            appendTo=\\\".modal-container\\\"\\n                            [searchable]=\\\"false\\\"\\n                            [clearable]=\\\"false\\\"\\n                        >\\n                            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            </ng-template>\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\"> {{ item }} </ng-template>\\n                        </ng-select>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"type === 'unload'\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <div class=\\\"d-flex justify-content-between\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                            </div>\\n                        </div>\\n                        <input\\n                            type=\\\"number\\\"\\n                            class=\\\"form-control form-control-lg\\\"\\n                            id=\\\"amount\\\"\\n                            name=\\\"amount\\\"\\n                            [placeholder]=\\\"'0.00'\\\"\\n                            [(ngModel)]=\\\"unload.amount\\\"\\n                            #amount=\\\"ngModel\\\"\\n                            required\\n                        />\\n                        <div *ngIf=\\\"amount.invalid && (offLedgerForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <label class=\\\"font-md\\\" for=\\\"currencyCode\\\">{{ 'common.currency-code' | translate }}</label>\\n                        <ng-select\\n                            class=\\\"ng-select-lg ng-select-topup\\\"\\n                            [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                            [(ngModel)]=\\\"unload.currencyCode\\\"\\n                            name=\\\"currencyCode\\\"\\n                            [items]=\\\"niumCurrencies\\\"\\n                            [required]=\\\"true\\\"\\n                            appendTo=\\\".modal-container\\\"\\n                            [searchable]=\\\"false\\\"\\n                            [clearable]=\\\"false\\\"\\n                        >\\n                            <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                                <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            </ng-template>\\n                            <ng-template ng-option-tmp let-item=\\\"item\\\"> {{ item }} </ng-template>\\n                        </ng-select>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col\\\">\\n                        <div class=\\\"d-flex justify-content-between\\\">\\n                            <div class=\\\"d-flex\\\">\\n                                <label class=\\\"font-md\\\"> {{ 'common.comments' | translate }} </label>\\n                            </div>\\n                        </div>\\n                        <textarea\\n                            class=\\\"form-control\\\"\\n                            id=\\\"comments\\\"\\n                            name=\\\"comments\\\"\\n                            maxlength=\\\"300\\\"\\n                            [(ngModel)]=\\\"unload.comments\\\"\\n                            rows=\\\"5\\\"\\n                            emptyToNull\\n                        ></textarea>\\n                    </div>\\n                </div>\\n            </ng-container>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading\\\">\\n                <ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n                <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n            </button>\\n        </form>\\n    </div>\\n</ion-content>\\n\";","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.card' | translate }} - {{ 'common.fee-schedule' | translate | titlecase }}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding p-3\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <card-fee-schedule></card-fee-schedule>\\n            </div>\\n        </div>\\n    </div>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport BigNumber from 'bignumber.js'\nimport { Subscription } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\nimport { ICard, ICurrency } from '../../api-interfaces'\nimport { Fee } from '../../models/accounting/fee.model'\nimport { FeeService } from '../../services/accounting/fee.service'\nimport { SessionService } from '../../services/session.service'\n\ninterface SwapPayload {\n    sourceCurrencyCode: string\n    amount: number | string\n    destinationCurrencyCode: string\n}\n\ninterface NiumFundWalletResponse {\n    systemReferenceNumber: string\n    sourceAmount: number\n    sourceCurrencyCode: string\n    destinationAmount: number\n    destinationCurrencyCode: string\n    status: 'Pending' | 'Approved' | 'Declined'\n    paymentMethods: string[]\n}\n\nexport interface GetExchangeRateResponse {\n    sourceCurrencyCode: string\n    sourceAmount?: string\n    destinationCurrencyCode: string\n    destinationAmount?: string\n    exchangeRate: string\n}\n\n@Component({\n    selector: 'app-modal-swap',\n    templateUrl: './modal-swap.page.html',\n})\nexport class ModalSwapPage implements OnInit, OnDestroy {\n    public item: ICard\n    public balances: any[]\n\n    public swap: SwapPayload = {\n        sourceCurrencyCode: '',\n        amount: '',\n        destinationCurrencyCode: '',\n    }\n    public isLoading = false\n    public isGettingExchangeRate = false\n    public cardTopupFee: Fee | null\n    public exchangeRate = '1'\n\n    public niumCurrencies = ['AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'SGD', 'USD']\n    public filteredCardBalances: Record<string, any>[]\n    public filteredDestinationCurrencies: string[]\n\n    public appName = environment.appName\n    public currency: ICurrency\n\n    public subcriptions = new Subscription()\n\n    @ViewChild('transactionForm')\n    public transactionForm: NgForm\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        private modalController: ModalController,\n        private feeService: FeeService\n    ) {}\n\n    public ngOnInit() {\n        this.filterSourceCurrencies()\n        this.swap.sourceCurrencyCode = 'USD'\n        this.filterDestinationCurrencies()\n        this.swap.destinationCurrencyCode = this.filteredDestinationCurrencies[0]\n        this.getExchangeRate()\n    }\n\n    public ngOnDestroy() {\n        this.subcriptions.unsubscribe()\n    }\n\n    public async topupCard(): Promise<void> {\n        if (this.transactionForm.invalid) {\n            return\n        }\n        this.isLoading = true\n\n        this.swap.amount = this.swap.amount + ''\n\n        this.http\n            .post<NiumFundWalletResponse>(`/cards/${this.item.id}/swap`, this.swap)\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.modalController.dismiss(response)\n            })\n    }\n\n    public filterSourceCurrencies() {\n        this.filteredCardBalances = this.balances.filter(b => !new BigNumber(b.balance).isZero())\n    }\n\n    public filterDestinationCurrencies() {\n        this.filteredDestinationCurrencies = this.niumCurrencies.filter(c => c !== this.swap.sourceCurrencyCode)\n    }\n\n    public getCardBalance(code: string): string {\n        const found = this.balances.find(b => b.curSymbol === code)\n        if (found) {\n            return found.balance + ''\n        }\n        return '0.00'\n    }\n\n    public useMax(): void {\n        const found = this.balances.find(balance => balance.curSymbol === this.swap.sourceCurrencyCode)\n        if (found) {\n            this.swap.amount = parseFloat(found.balance)\n        }\n    }\n\n    public calculateFee(): string {\n        const { relativeFee, fixedFee } = this.feeService.determineFee(\n            {\n                amount: this.swap.amount + '' || '0',\n                currency: this.currency,\n            },\n            this.cardTopupFee\n        )\n        const relativeFeeAmount = new BigNumber(this.swap.amount || 0).times(relativeFee || 0)\n        const totalFee = new BigNumber(fixedFee || 0).plus(relativeFeeAmount)\n\n        return totalFee.toFixed(2, 1)\n    }\n\n    public isForexTopup(): boolean {\n        return this.swap.sourceCurrencyCode !== this.swap.destinationCurrencyCode\n    }\n\n    public getExchangeRate(): void {\n        this.isGettingExchangeRate = true\n        if (this.swap.sourceCurrencyCode !== this.swap.destinationCurrencyCode) {\n            this.http\n                .post<GetExchangeRateResponse>(\n                    `/card-programs/${this.item.cardholder?.cardProgram?.id}/get-exchange-rate`,\n                    {\n                        sourceCurrencyCode: this.swap.sourceCurrencyCode,\n                        destinationCurrencyCode: this.swap.destinationCurrencyCode,\n                    }\n                )\n                .pipe(\n                    finalize(() => {\n                        this.isGettingExchangeRate = false\n                    })\n                )\n                .subscribe(response => {\n                    this.exchangeRate = response.exchangeRate\n                })\n        } else {\n            this.exchangeRate = '1'\n            this.isGettingExchangeRate = false\n        }\n    }\n\n    public calculateAmount(): string {\n        if (!this.swap.amount) {\n            return '0'\n        }\n\n        return new BigNumber(this.swap.amount || 0)\n            .minus(new BigNumber(this.calculateFee()))\n            .times(this.exchangeRate)\n            .toFixed(2)\n    }\n\n    public compareCurrencies(a: any, b: string): boolean {\n        return a.curSymbol === b\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n}\n","export default \"ion-header ion-toolbar {\\n  --background: transparent;\\n}\\n\\nh1.title {\\n  font-weight: 600;\\n  font-size: 28px;\\n  line-height: 34px;\\n  color: #151522;\\n  padding: 0;\\n  margin-top: 0;\\n  margin-bottom: 16px;\\n}\\n\\nion-text {\\n  font-weight: 300;\\n  font-size: 17px;\\n  line-height: 24px;\\n  color: #151522;\\n}\\n\\nion-item {\\n  --background: transparent;\\n  --inner-padding-end: 0;\\n}\\n\\nion-item ion-input {\\n  border: 1px solid rgba(228, 228, 228, 0.6);\\n  box-sizing: border-box;\\n  border-radius: 5px;\\n  background: #ffffff;\\n  --padding-start: 16px;\\n  margin-bottom: 8px;\\n  min-height: 48px;\\n}\\n\\nion-item ion-toggle {\\n  --background: rgba(153, 153, 153, 0.8);\\n}\\n\\n.action-button {\\n  --border-radius: 6px;\\n  --box-shadow: none !important;\\n  min-height: 48px;\\n  box-shadow: 0px 4px 8px rgba(50, 50, 71, 0.06), 0px 4px 4px rgba(50, 50, 71, 0.08);\\n}\\n\\n.action-button span {\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-transform: initial;\\n}\\n\\n.mb {\\n  margin-bottom: 16px;\\n}\\n\\n.link {\\n  text-decoration: none !important;\\n  font-weight: normal;\\n  font-size: 15px;\\n  line-height: 20px;\\n}\\n\\n.input-label {\\n  font-weight: 600;\\n  color: #151522;\\n  margin-bottom: 16px;\\n}\\n\\n.caption {\\n  color: #151522;\\n}\\n\\n.basic::after {\\n  content: \\\"\\\";\\n  width: 48px;\\n  height: auto;\\n  padding-top: 24px;\\n}\\n\\n.errors-container {\\n  font-size: 12px;\\n  font-weight: 500;\\n  color: var(--ion-color-danger);\\n}\\n\\n.action-button {\\n  --border-radius: 6px;\\n  --box-shadow: none !important;\\n  min-height: 48px;\\n  box-shadow: 0px 4px 8px rgba(50, 50, 71, 0.06), 0px 4px 4px rgba(50, 50, 71, 0.08);\\n}\\n\\n.action-button span {\\n  font-weight: 300;\\n  font-size: 16px;\\n  line-height: 22px;\\n  text-transform: initial;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NhcmQtdmlldy1tb2RhbC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUNFO0VBQ0UsMENBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFRTtFQUNFLHNDQUFBO0FBQUo7O0FBSUE7RUFDRSxvQkFBQTtFQUNBLDZCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrRkFBQTtBQURGOztBQUdFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSx1QkFBQTtBQURKOztBQUtBO0VBQ0UsbUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdDQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxjQUFBO0FBRkY7O0FBS0E7RUFDRSxXQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBQUZGOztBQUtBO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsOEJBQUE7QUFGRjs7QUFLQTtFQUNFLG9CQUFBO0VBQ0EsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLGtGQUFBO0FBRkY7O0FBSUU7RUFDRSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLHVCQUFBO0FBRkoiLCJmaWxlIjoiY2FyZC12aWV3LW1vZGFsLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taGVhZGVyIGlvbi10b29sYmFyIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuaDEudGl0bGUge1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXNpemU6IDI4cHg7XG4gIGxpbmUtaGVpZ2h0OiAzNHB4O1xuICBjb2xvcjogIzE1MTUyMjtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cblxuaW9uLXRleHQge1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDE3cHg7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICBjb2xvcjogIzE1MTUyMjtcbn1cblxuaW9uLWl0ZW0ge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAtLWlubmVyLXBhZGRpbmctZW5kOiAwO1xuXG4gIGlvbi1pbnB1dCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyMjgsIDIyOCwgMjI4LCAwLjYpO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAxNnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICBtaW4taGVpZ2h0OiA0OHB4O1xuICB9XG5cbiAgaW9uLXRvZ2dsZSB7XG4gICAgLS1iYWNrZ3JvdW5kOiByZ2JhKDE1MywgMTUzLCAxNTMsIDAuOCk7XG4gIH1cbn1cblxuLmFjdGlvbi1idXR0b24ge1xuICAtLWJvcmRlci1yYWRpdXM6IDZweDtcbiAgLS1ib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIG1pbi1oZWlnaHQ6IDQ4cHg7XG4gIGJveC1zaGFkb3c6IDBweCA0cHggOHB4IHJnYmEoNTAsIDUwLCA3MSwgMC4wNiksIDBweCA0cHggNHB4IHJnYmEoNTAsIDUwLCA3MSwgMC4wOCk7XG5cbiAgc3BhbiB7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7XG4gIH1cbn1cblxuLm1iIHtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cblxuLmxpbmsge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBsaW5lLWhlaWdodDogMjBweDtcbn1cblxuLmlucHV0LWxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMxNTE1MjI7XG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XG59XG5cbi5jYXB0aW9uIHtcbiAgY29sb3I6ICMxNTE1MjI7XG59XG5cbi5iYXNpYzo6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDQ4cHg7XG4gIGhlaWdodDogYXV0bztcbiAgcGFkZGluZy10b3A6IDI0cHg7XG59XG5cbi5lcnJvcnMtY29udGFpbmVyIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG59XG5cbi5hY3Rpb24tYnV0dG9uIHtcbiAgLS1ib3JkZXItcmFkaXVzOiA2cHg7XG4gIC0tYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBtaW4taGVpZ2h0OiA0OHB4O1xuICBib3gtc2hhZG93OiAwcHggNHB4IDhweCByZ2JhKDUwLCA1MCwgNzEsIDAuMDYpLCAwcHggNHB4IDRweCByZ2JhKDUwLCA1MCwgNzEsIDAuMDgpO1xuXG4gIHNwYW4ge1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xuICB9XG59XG4iXX0= */\";","\n// easing functions from \"Tween.js\"\n\nexports.linear = function(n){\n  return n;\n};\n\nexports.inQuad = function(n){\n  return n * n;\n};\n\nexports.outQuad = function(n){\n  return n * (2 - n);\n};\n\nexports.inOutQuad = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n;\n  return - 0.5 * (--n * (n - 2) - 1);\n};\n\nexports.inCube = function(n){\n  return n * n * n;\n};\n\nexports.outCube = function(n){\n  return --n * n * n + 1;\n};\n\nexports.inOutCube = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n;\n  return 0.5 * ((n -= 2 ) * n * n + 2);\n};\n\nexports.inQuart = function(n){\n  return n * n * n * n;\n};\n\nexports.outQuart = function(n){\n  return 1 - (--n * n * n * n);\n};\n\nexports.inOutQuart = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n;\n  return -0.5 * ((n -= 2) * n * n * n - 2);\n};\n\nexports.inQuint = function(n){\n  return n * n * n * n * n;\n}\n\nexports.outQuint = function(n){\n  return --n * n * n * n * n + 1;\n}\n\nexports.inOutQuint = function(n){\n  n *= 2;\n  if (n < 1) return 0.5 * n * n * n * n * n;\n  return 0.5 * ((n -= 2) * n * n * n * n + 2);\n};\n\nexports.inSine = function(n){\n  return 1 - Math.cos(n * Math.PI / 2 );\n};\n\nexports.outSine = function(n){\n  return Math.sin(n * Math.PI / 2);\n};\n\nexports.inOutSine = function(n){\n  return .5 * (1 - Math.cos(Math.PI * n));\n};\n\nexports.inExpo = function(n){\n  return 0 == n ? 0 : Math.pow(1024, n - 1);\n};\n\nexports.outExpo = function(n){\n  return 1 == n ? n : 1 - Math.pow(2, -10 * n);\n};\n\nexports.inOutExpo = function(n){\n  if (0 == n) return 0;\n  if (1 == n) return 1;\n  if ((n *= 2) < 1) return .5 * Math.pow(1024, n - 1);\n  return .5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n};\n\nexports.inCirc = function(n){\n  return 1 - Math.sqrt(1 - n * n);\n};\n\nexports.outCirc = function(n){\n  return Math.sqrt(1 - (--n * n));\n};\n\nexports.inOutCirc = function(n){\n  n *= 2\n  if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n  return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n};\n\nexports.inBack = function(n){\n  var s = 1.70158;\n  return n * n * (( s + 1 ) * n - s);\n};\n\nexports.outBack = function(n){\n  var s = 1.70158;\n  return --n * n * ((s + 1) * n + s) + 1;\n};\n\nexports.inOutBack = function(n){\n  var s = 1.70158 * 1.525;\n  if ( ( n *= 2 ) < 1 ) return 0.5 * ( n * n * ( ( s + 1 ) * n - s ) );\n  return 0.5 * ( ( n -= 2 ) * n * ( ( s + 1 ) * n + s ) + 2 );\n};\n\nexports.inBounce = function(n){\n  return 1 - exports.outBounce(1 - n);\n};\n\nexports.outBounce = function(n){\n  if ( n < ( 1 / 2.75 ) ) {\n    return 7.5625 * n * n;\n  } else if ( n < ( 2 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 1.5 / 2.75 ) ) * n + 0.75;\n  } else if ( n < ( 2.5 / 2.75 ) ) {\n    return 7.5625 * ( n -= ( 2.25 / 2.75 ) ) * n + 0.9375;\n  } else {\n    return 7.5625 * ( n -= ( 2.625 / 2.75 ) ) * n + 0.984375;\n  }\n};\n\nexports.inOutBounce = function(n){\n  if (n < .5) return exports.inBounce(n * 2) * .5;\n  return exports.outBounce(n * 2 - 1) * .5 + .5;\n};\n\n// aliases\n\nexports['in-quad'] = exports.inQuad;\nexports['out-quad'] = exports.outQuad;\nexports['in-out-quad'] = exports.inOutQuad;\nexports['in-cube'] = exports.inCube;\nexports['out-cube'] = exports.outCube;\nexports['in-out-cube'] = exports.inOutCube;\nexports['in-quart'] = exports.inQuart;\nexports['out-quart'] = exports.outQuart;\nexports['in-out-quart'] = exports.inOutQuart;\nexports['in-quint'] = exports.inQuint;\nexports['out-quint'] = exports.outQuint;\nexports['in-out-quint'] = exports.inOutQuint;\nexports['in-sine'] = exports.inSine;\nexports['out-sine'] = exports.outSine;\nexports['in-out-sine'] = exports.inOutSine;\nexports['in-expo'] = exports.inExpo;\nexports['out-expo'] = exports.outExpo;\nexports['in-out-expo'] = exports.inOutExpo;\nexports['in-circ'] = exports.inCirc;\nexports['out-circ'] = exports.outCirc;\nexports['in-out-circ'] = exports.inOutCirc;\nexports['in-back'] = exports.inBack;\nexports['out-back'] = exports.outBack;\nexports['in-out-back'] = exports.inOutBack;\nexports['in-bounce'] = exports.inBounce;\nexports['out-bounce'] = exports.outBounce;\nexports['in-out-bounce'] = exports.inOutBounce;\n","export default \"<ng-container *ngIf=\\\"isLoading; else cardTemplate\\\">\\n    <div class=\\\"cc d-flex justify-content-center align-items-center\\\" [ngStyle]=\\\"{ backgroundColor: '#e5e5e5' }\\\">\\n        <ion-spinner name=\\\"dots\\\"></ion-spinner>\\n    </div>\\n</ng-container>\\n<ng-template #cardTemplate>\\n    <ng-container *ngIf=\\\"backgroundImage; else noBackground\\\">\\n        <div class=\\\"cc\\\" [ngClass]=\\\"{ disabled: disabled }\\\" [ngStyle]=\\\"getBackgroundImageStyle()\\\"></div>\\n    </ng-container>\\n    <ng-template #noBackground>\\n        <div class=\\\"cc\\\" [ngClass]=\\\"{ disabled: disabled }\\\">\\n            <div class=\\\"cc-content\\\">\\n                <img [src]=\\\"getLogo()\\\" draggable=\\\"false\\\" class=\\\"cc-logo\\\" />\\n                <div class=\\\"cc-title\\\">{{ 'common.card-number' | translate }}</div>\\n                <div class=\\\"cc-digit\\\">{{ card?.maskedPan }}</div>\\n                <div class=\\\"cc-title\\\">{{ 'common.expires' | translate }}</div>\\n                <div class=\\\"cc-digit\\\">{{ card?.expiresAt || '2023-01-01' | date: 'MM/yy' }}</div>\\n            </div>\\n            <div class=\\\"cc-wave\\\"></div>\\n        </div>\\n    </ng-template>\\n</ng-template>\\n\";","export default \"<div class=\\\"close-btn bg-primary d-flex justify-content-center align-items-center\\\" (click)=\\\"dismiss()\\\">\\n    <ion-icon name=\\\"close-outline\\\"></ion-icon>\\n</div>\\n<div *ngIf=\\\"!!details; else loading\\\" class=\\\"modal-card-body\\\" [ngStyle]=\\\"getBackgroundImageStyle()\\\">\\n    <div class=\\\"d-flex justify-content-end mb-2\\\">\\n        <img src=\\\"/img/icons/contactless.svg\\\" class=\\\"card-pay-logo\\\" />\\n    </div>\\n    <div class=\\\"card-text-heading card-text mt-xs-3 mt-lg-4\\\">Virtual Card</div>\\n    <copy-wrap [value]=\\\"details.unMaskedCardNumber\\\">\\n        <p class=\\\"card-number mb-1 text-monospace card-text\\\">{{ formatCardNumber(details.unMaskedCardNumber) }}</p>\\n    </copy-wrap>\\n    <div class=\\\"d-flex mb-2\\\">\\n        <div class=\\\"mr-4 d-flex\\\">\\n            <div class=\\\"text-uppercase text-monospace card-label card-text\\\">\\n                <div>{{ 'common.valid' | translate }}</div>\\n                <div>{{ 'common.thru' | translate }}</div>\\n            </div>\\n            <copy-wrap [value]=\\\"details.expiry\\\">\\n                <span class=\\\"ml-2 text-monospace card-details card-text\\\">{{ details.expiry }} </span>\\n            </copy-wrap>\\n        </div>\\n        <div class=\\\"mr-4 d-flex\\\">\\n            <div class=\\\"text-uppercase text-monospace card-label card-text\\\">\\n                <div>{{ 'common.security' | translate | lowercase }}</div>\\n                <div>{{ 'common.code' | translate | lowercase }}</div>\\n            </div>\\n            <copy-wrap [value]=\\\"details.cvv\\\">\\n                <span class=\\\"ml-2 text-monospace card-details card-text\\\">{{ details.cvv }}</span>\\n            </copy-wrap>\\n        </div>\\n    </div>\\n    <div class=\\\"d-flex justify-content-between align-items-end limited-text-wrapper\\\">\\n        <span class=\\\"card-text-limited card-text\\\">{{ 'common.limited-use' | translate }}</span>\\n        <img *ngIf=\\\"!backgroundImage\\\" src=\\\"/img/icons/visa.svg\\\" class=\\\"img-sm text-muted mb-1\\\" />\\n    </div>\\n</div>\\n<ng-template #loading>\\n    <div class=\\\"d-flex justify-content-center align-items-center h-100\\\">\\n        <div class=\\\"card-details-loader d-flex justify-content-center align-items-center\\\">\\n            <ion-spinner color=\\\"primary\\\" name=\\\"dots\\\" color=\\\"light\\\"></ion-spinner>\\n        </div>\\n    </div>\\n</ng-template>\\n<div class=\\\"wave\\\" *ngIf=\\\"!backgroundImage\\\"></div>\\n\";","import { Injectable } from '@angular/core'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { Observable, of } from 'rxjs'\nimport { SessionService, TokenScope } from '../services/session.service'\nimport { ConfirmPasswordModalComponent } from './confirm-password.modal'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SecurityCheckService {\n    constructor(private ngbModal: NgbModal, private session: SessionService) {}\n\n    /**\n     * Asks the user for permission to do something that requires a higher scope than basic\n     * Resolves if the check was successful or the permission is still granted from another request\n     * @param scope The required scope\n     */\n    public getScopePermission(scope: TokenScope): Observable<void> {\n        // Resolve if token has already the correct scope\n        if (this.session.hasTokenScope(scope)) {\n            return of(undefined)\n        }\n        const modal = this.ngbModal.open(ConfirmPasswordModalComponent, {\n            windowClass: 'modal-primary security-check-modal',\n        })\n        ;(modal.componentInstance as ConfirmPasswordModalComponent).scope = scope\n        return new Observable(observer => {\n            modal.result\n                .then(() => {\n                    observer.next()\n                    observer.complete()\n                })\n                .catch(() => {\n                    observer.complete()\n                })\n        })\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, ElementRef, OnDestroy, OnInit } from '@angular/core'\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { tap } from 'rxjs/operators'\nimport { ToastrService } from '../../../common/services/toastr.service'\n\nconst ease = require('ease-component')\nconst scroll = require('scroll')\n\ninterface Terms {\n    name: string\n    versionId: string\n    description: string\n}\n\n@Component({\n    selector: 'card-order-terms',\n    templateUrl: 'card-order-terms.component.html',\n})\nexport class CardOrderTermsComponent implements OnInit, OnDestroy {\n    public terms: Terms\n    public isDown = false\n    public viewOnly = false\n    public isLoaded = false\n\n    private modalContainer: HTMLElement\n\n    constructor(\n        private element: ElementRef,\n        private toastr: ToastrService,\n        private http: HttpClient,\n        public modal: NgbActiveModal,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnInit(): void {\n        this.modalContainer = this.element.nativeElement.querySelector('.card-terms-container') as HTMLElement\n        this.modalContainer.addEventListener('scroll', this.scrollHandler)\n\n        this.http\n            .get<Terms>('/nium/terms')\n            .pipe(\n                tap(terms => {\n                    this.terms = terms\n                    this.isLoaded = true\n                    setTimeout(() => {\n                        this.scrollHandler()\n                    })\n                })\n            )\n            .subscribe(() => undefined)\n    }\n\n    public ngOnDestroy(): void {\n        this.modalContainer.removeEventListener('scroll', this.scrollHandler)\n    }\n\n    public scrollDown(): void {\n        scroll.top(this.modalContainer, this.modalContainer.scrollHeight - this.modalContainer.clientHeight, {\n            duration: 1000,\n            ease: ease.inOutExpo,\n        })\n    }\n\n    public accept(): void {\n        if (!this.isDown) {\n            this.toastr.warning(\n                this.translate.instant('common.please-scroll-to-bottom'),\n                this.translate.instant('common.terms')\n            )\n            return\n        }\n        this.modal.close({ ...this.terms, accept: true })\n    }\n\n    private scrollHandler = () => {\n        // 25px threshold\n        if (\n            this.isLoaded &&\n            !this.isDown &&\n            this.modalContainer.scrollTop >= this.modalContainer.scrollHeight - this.modalContainer.offsetHeight - 25\n        ) {\n            setTimeout(() => {\n                this.isDown = true\n            })\n        }\n    }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport BigNumber from 'bignumber.js'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { FeeType, ICurrency, IFee, IUser, RPCResult, Transaction, TransactionMethod } from '../../api-interfaces'\nimport { Currency } from '../../models/accounting/currency.model'\nimport { Fee } from '../../models/accounting/fee.model'\nimport { calculateFee } from '../../transactions.mixins'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeeService {\n    constructor(private http: HttpClient) {}\n\n    public fetch(fee: {\n        type: FeeType\n        method: TransactionMethod\n        currency: ICurrency\n        amount?: string\n        user?: IUser | null\n    }): Observable<Fee | null> {\n        return this.http\n            .post<RPCResult<IFee | null>>(\n                '/fees',\n                {\n                    id: Math.round(Math.random() * 10000),\n                    jsonrpc: '2.0',\n                    method: 'findByPrimaryAttributes',\n                    params: {\n                        type: fee.type,\n                        method: fee.method,\n                        amount: fee.amount ? fee.amount : '1',\n                        currency: fee.currency,\n                        user: fee.user,\n                    },\n                },\n                {\n                    headers: new HttpHeaders({\n                        'Content-Type': 'application/json-rpc',\n                    }),\n                }\n            )\n            .pipe(map(response => (response.result ? new Fee(response.result) : null)))\n    }\n\n    public determineFee(currentTransaction: Partial<Transaction>, fee: Partial<Fee> | null): Partial<Transaction> {\n        const transaction = currentTransaction\n        const fixedFee =\n            fee && fee.fixed && transaction.currency\n                ? Currency.convert(fee.fixed, fee.currency!, transaction.currency)\n                : '0'\n        const relativeFee = fee && fee.relative ? fee.relative : '0'\n\n        transaction.fixedFee = fixedFee || undefined\n        transaction.relativeFee = relativeFee || undefined\n\n        if (fee && fee.min) {\n            const minFee = Currency.convert(fee.min, fee.currency!, transaction.currency!)\n            if (new BigNumber(calculateFee(transaction as Transaction)).isLessThan(minFee)) {\n                transaction.fixedFee = minFee\n                transaction.relativeFee = '0'\n            }\n        }\n        if (fee && fee.max) {\n            const maxFee = Currency.convert(fee.max, fee.currency!, transaction.currency!)\n            if (new BigNumber(calculateFee(transaction as Transaction)).isGreaterThan(maxFee)) {\n                transaction.fixedFee = maxFee\n                transaction.relativeFee = '0'\n            }\n        }\n        return transaction\n    }\n}\n","import { Component } from '@angular/core'\nimport { faCalendarAlt } from '@fortawesome/pro-regular-svg-icons'\nimport { ModalController } from '@ionic/angular'\nimport { NgbCalendar, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap'\nimport { Subscription } from 'rxjs'\nimport { flatMap } from 'rxjs/operators'\nimport { ICard } from '../../api-interfaces'\nimport { SessionService } from '../../services/session.service'\n\n@Component({\n    selector: 'app-modal-download-transactions',\n    templateUrl: './modal-download-transactions.page.html',\n    styleUrls: ['../card-view-modal.scss'],\n})\nexport class ModalDownloadTransactionsPage {\n    public item: ICard\n    public isLoading = false\n\n    public faCalendarAlt = faCalendarAlt\n\n    public fromDate: NgbDateStruct\n    public toDate: NgbDateStruct\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        private modalController: ModalController,\n        public calendar: NgbCalendar\n    ) {\n        this.fromDate = { year: new Date().getFullYear(), month: 1, day: 1 }\n        this.toDate = this.calendar.getToday()\n    }\n\n    public downloadReport(): void {\n        this.subscriptions.add(\n            this.session.userStream\n                .pipe(\n                    flatMap(user =>\n                        this.session.createSignedUrl(`/users/${user.id}/cards/${this.item.id}/transactions/report`)\n                    )\n                )\n                .subscribe(signedUrl => {\n                    window.open(\n                        `${signedUrl}&from=${this.parseNgbdate(this.fromDate)}&to=${this.parseNgbdate(this.toDate)}`,\n                        '_blank',\n                        'noopener'\n                    )\n                    this.dismiss()\n                })\n        )\n\n        this.session.createSignedUrl(`/cards/${this.item.id}/transactions/report`)\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n\n    protected parseNgbdate(date: NgbDateStruct | null): string {\n        return `${date?.year}-${date?.month.toLocaleString('en-US', {\n            minimumIntegerDigits: 2,\n            useGrouping: false,\n        })}-${date?.day.toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })}`\n    }\n}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, OnDestroy, OnInit } from '@angular/core'\nimport { faEye } from '@fortawesome/pro-solid-svg-icons'\nimport { AlertController, ModalController } from '@ionic/angular'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport BigNumber from 'bignumber.js'\nimport { parseISO } from 'date-fns'\nimport { cloneDeep } from 'lodash'\nimport { merge, Observable, of, Subject, Subscription } from 'rxjs'\nimport { finalize, map, switchMap, tap, withLatestFrom } from 'rxjs/operators'\nimport { ICard, ICurrency, Paginated, Transaction, UserDetails, Wallet } from 'src/app/common/api-interfaces'\nimport { Currency } from 'src/app/common/models/accounting/currency.model'\nimport { ToastrService } from 'src/app/common/services/toastr.service'\nimport { CurrenciesQuery } from 'src/app/store/currencies/currencies.query'\nimport { WalletsQuery } from 'src/app/store/wallets/wallets.query'\nimport { WalletsService } from 'src/app/store/wallets/wallets.service'\nimport { CardOrderTermsComponent } from 'src/app/user-cards/card-order/card-order-terms/card-order-terms.component'\nimport { environment } from 'src/environments/environment'\nimport { buildFileUrl } from '../file'\nimport { SecurityCheckService } from '../security-check/security-check.service'\nimport { SessionService } from '../services/session.service'\nimport { TransactionService } from '../services/transaction.service'\nimport { CardDetailsPage } from './card-details/card-details.page'\nimport { ModalChangePinPage } from './modal-change-pin/modal-change-pin.page'\nimport { ModalDownloadTransactionsPage } from './modal-download-transactions/modal-download-transactions.page'\nimport { ModalFeesPage } from './modal-fees/modal-fees.page'\nimport { ModalOffledgerPage } from './modal-offledger/modal-offledger.page'\nimport { ModalSwapPage } from './modal-swap/modal-swap.page'\nimport { ModalTopupPage } from './modal-topup/modal-topup.page'\nimport { ModalUnloadPage } from './modal-unload/modal-unload.page'\n\n@Component({\n    selector: 'app-card-view',\n    templateUrl: './card-view.page.html',\n    styleUrls: ['./card-view.page.scss'],\n})\nexport class CardViewPage implements OnInit, OnDestroy {\n    public activeTab: 'history' | 'topup' = 'history'\n    public transaction: Transaction = {\n        type: 'withdrawal',\n        method: 'card',\n        counterWallet: {\n            user: null,\n        },\n    } as Transaction\n    public item: ICard\n    public userDetails: UserDetails\n    public copy: Partial<ICard> = {}\n    public currencies: Currency[]\n    public balances$: Observable<any[]>\n    public balances: any[]\n    public transactions: any[] = []\n    public page = 1\n    public size = 5\n    public totalElements: number\n\n    public isFetching = false\n    public isBlockUnblockLoading = false\n    public faEye = faEye\n    public digitalCardArtWorkUrl: string | null\n\n    public fetchBalanceEvent = new Subject<void>()\n    public wallets$: Observable<(Wallet & { value: string })[]>\n    public appName = environment.appName\n\n    private subscriptions = new Subscription()\n\n    constructor(\n        public session: SessionService,\n        private http: HttpClient,\n        private toastr: ToastrService,\n        private walletsQuery: WalletsQuery,\n        private modalController: ModalController,\n        public alertController: AlertController,\n        private securityCheckService: SecurityCheckService,\n        private ngbModal: NgbModal,\n        private currenciesQuery: CurrenciesQuery,\n        private walletsService: WalletsService,\n        private transactionService: TransactionService,\n        public translate: TranslateService\n    ) {\n        this.wallets$ = this.walletsQuery.filteredBalances$\n    }\n\n    public ngOnInit(): void {\n        this.http.get<ICard>(`/cards/${this.item.id}`).subscribe(card => {\n            if (card) {\n                Object.assign(this.item, card)\n                this.copy = cloneDeep(this.item)\n                this.transaction.card = card\n\n                if (card.cardholder?.cardProgram?.digitalCardArtwork) {\n                    this.digitalCardArtWorkUrl = buildFileUrl(card.cardholder.cardProgram.digitalCardArtwork)\n                }\n            }\n        })\n\n        this.http\n            .get<Paginated<ICurrency>>('/currencies', { params: { limit: 100 + '' } })\n            .pipe(map(response => response.data.map(payload => new Currency(payload))))\n            .subscribe(currencies => {\n                this.currencies = currencies\n            })\n\n        this.http.get<UserDetails>(`/users/${this.item.cardholder?.id}/details`).subscribe(details => {\n            this.userDetails = details\n        })\n\n        this.balances$ = merge(of(undefined), this.fetchBalanceEvent).pipe(\n            switchMap(() => this.http.get<any[]>(`/cards/${this.item.id}/balance`)),\n            map(balance => balance.filter(currency => currency.balance !== 0)),\n            map(balance => (balance.length ? balance : [{ curSymbol: 'USD', balance: 0 }])),\n            withLatestFrom(this.currenciesQuery.selectAll()),\n            map(([balance, availableCurrencies]) =>\n                balance.map(b => {\n                    Object.assign(b, {\n                        balanceInUsd: new BigNumber(b.balance)\n                            .times(\n                                availableCurrencies.find(currency => currency.code === b.curSymbol)?.exchangeRate || 1\n                            )\n                            .toNumber(),\n                    })\n\n                    return b\n                })\n            ),\n            tap(balance => {\n                this.balances = balance.sort((prev: any, next: any) => next.balanceInUsd - prev.balanceInUsd)\n            })\n        )\n\n        this.copy = cloneDeep(this.item)\n        this.fetchTransactions()\n    }\n\n    public ngOnDestroy(): void {\n        this.subscriptions.unsubscribe()\n    }\n\n    public fetchTransactions(event?: any, reset?: boolean): void {\n        this.isFetching = true\n        if (reset) {\n            this.page = 1\n        }\n\n        this.http\n            .get<any>(`/cards/${this.item.id}/transactions`, {\n                params: { page: this.page - 1 + '', size: this.size + '' },\n            })\n            .subscribe(response => {\n                this.isFetching = false\n                if (response.content) {\n                    const transactions = response.content.map((content: any) => ({\n                        ...content,\n                        createdAt: parseISO(content.createdAt),\n                    }))\n                    this.totalElements = response.totalElements || '0'\n                    this.transactions = reset ? transactions : this.transactions.concat(transactions)\n                    this.page += 1\n                }\n                if (event) {\n                    event.target.complete()\n                }\n            })\n    }\n\n    public getCurrencyByCode(code: string): Currency | undefined {\n        return this.currencies.find(currency => currency.code === code)\n    }\n\n    public async blockUnblockCard(checked: boolean): Promise<void> {\n        const alert = await this.alertController.create({\n            header: checked\n                ? this.translate.instant('common.block-your-card')\n                : this.translate.instant('common.unblock-your-card'),\n            message: this.translate.instant('common.you-can-revert'),\n            buttons: [\n                {\n                    text: this.translate.instant('common.cancel'),\n                    role: 'cancel',\n                },\n                {\n                    text: checked ? this.translate.instant('common.block') : this.translate.instant('common.unblock'),\n                    cssClass: 'text-danger',\n                    handler: async () => {\n                        this.isBlockUnblockLoading = true\n                        this.http\n                            .put<ICard>(`/cards/${this.item.id}/status`, {\n                                status: checked ? 'block' : 'unblock',\n                            })\n                            .pipe(\n                                finalize(() => {\n                                    this.isBlockUnblockLoading = false\n                                })\n                            )\n                            .subscribe(card => {\n                                Object.assign(this.item, card)\n                                this.copy = cloneDeep(this.item)\n                                this.transaction.card = card\n                                this.toastr.success(\n                                    `${this.translate.instant('common.card')} ${\n                                        checked\n                                            ? this.translate.instant('common.block')\n                                            : this.translate.instant('common.unblock')\n                                    }`\n                                )\n                            })\n                    },\n                },\n            ],\n        })\n        await alert.present()\n    }\n\n    public async presentTopupModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalTopupPage,\n            cssClass: 'modal-container',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n                balances: this.balances,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            this.fetchTransactions(null, true)\n            this.fetchBalanceEvent.next()\n\n            if (!data) {\n                return\n            }\n            const alert = await this.alertController.create({\n                header: this.translate.instant('common.topup-completed'),\n                message: `${this.translate.instant(\n                    'common.you-successfully-topped-up'\n                )} ${data.destinationAmount.toFixed(2)} ${data.destinationCurrencyCode}.`,\n                buttons: ['OK'],\n            })\n            await alert.present()\n            this.refreshBalance()\n        })\n    }\n\n    public async openChangePinModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalChangePinPage,\n            cssClass: 'modal-change-pin',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            if (!data) {\n                return\n            }\n            const alert = await this.alertController.create({\n                header: this.translate.instant('common.pin-updated'),\n                message: this.translate.instant('common.you-successfully-update-card-pin'),\n                buttons: ['OK'],\n            })\n            await alert.present()\n        })\n    }\n\n    public async openFeesModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalFeesPage,\n            cssClass: 'modal-fees',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n            },\n        })\n        await modal.present()\n    }\n\n    public async openDownloadReportModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalDownloadTransactionsPage,\n            cssClass: 'modal-download-report',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n            },\n        })\n        await modal.present()\n    }\n\n    public async presentCardDetails(): Promise<void> {\n        if (this.item.type !== 'virtual') {\n            return\n        }\n        this.subscriptions.add(\n            this.securityCheckService.getScopePermission('banking').subscribe(async () => {\n                const modal = await this.modalController.create({\n                    component: CardDetailsPage,\n                    cssClass: 'modal-card',\n                    presentingElement: await this.modalController.getTop(),\n                    componentProps: {\n                        item: this.item,\n                        backgroundImage: this.digitalCardArtWorkUrl,\n                    },\n                })\n                await modal.present()\n            })\n        )\n    }\n\n    public openViewNiumTermsModal(): void {\n        const termsModal = this.ngbModal.open(CardOrderTermsComponent, {\n            windowClass: 'modal-primary view-terms-modal',\n            backdrop: 'static',\n            backdropClass: 'view-terms-modal',\n        })\n        termsModal.componentInstance.viewOnly = true\n    }\n\n    public async offLedgerModal(type: string): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalOffledgerPage,\n            cssClass: 'modal-container',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n                balances: this.balances,\n                type,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            if (!data) {\n                return\n            }\n            this.fetchTransactions(null, true)\n            this.fetchBalanceEvent.next()\n            let dismissHeader\n            let dismissMessage\n            if (type === 'load') {\n                dismissHeader = this.translate.instant('common.topup-completed')\n                dismissMessage = `this.translate.instant(\n                    'common.you-successfully-topped-up'\n                ) (off ledger) ${data.destinationAmount.toFixed(2)} ${data.destinationCurrencyCode}.`\n            } else {\n                dismissHeader = this.translate.instant('common.unload-card-completed')\n                dismissMessage = `${this.translate.instant('common.unload-card')} ${data.message}`\n            }\n\n            if (!data) {\n                return\n            }\n            const alert = await this.alertController.create({\n                header: dismissHeader,\n                message: dismissMessage,\n                buttons: ['OK'],\n            })\n            await alert.present()\n        })\n    }\n\n    public async openUnloadModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalUnloadPage,\n            cssClass: 'modal-container',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                card: this.item,\n                balances: this.balances,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            this.fetchTransactions(null, true)\n            this.fetchBalanceEvent.next()\n\n            if (!data) {\n                return\n            }\n            const alert = await this.alertController.create({\n                header: this.translate.instant('common.unload-card-completed'),\n                message: `${this.translate.instant('common.unload-card')} ${data.message}`,\n                buttons: ['OK'],\n            })\n            await alert.present()\n            this.refreshBalance()\n        })\n    }\n\n    public async openSwapModal(): Promise<void> {\n        const modal = await this.modalController.create({\n            component: ModalSwapPage,\n            cssClass: 'modal-container',\n            presentingElement: await this.modalController.getTop(),\n            componentProps: {\n                item: this.item,\n                balances: this.balances,\n            },\n        })\n        await modal.present()\n        modal.onWillDismiss().then(async ({ data }) => {\n            this.fetchTransactions(null, true)\n            this.fetchBalanceEvent.next()\n\n            if (!data) {\n                return\n            }\n            console.log(data)\n            const alert = await this.alertController.create({\n                header: this.translate.instant('common.exchange-completed'),\n                message: `${data.destinationAmount} ${data.destinationCurrencyCode} ${this.translate.instant(\n                    'common.has-been-credited'\n                )}`,\n                buttons: ['OK'],\n            })\n            await alert.present()\n            this.refreshBalance()\n        })\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n\n    public formatPan(pan: string): string {\n        return `${pan.slice(0, 4)} ${pan.slice(4, 8)} ${pan.slice(8, 12)} ${pan.slice(12)}`\n    }\n\n    public getDescription(tx: any): string {\n        if (tx.merchantName) {\n            switch (tx.transactionType) {\n                case 'Auto_Sweep':\n                    return `<b>${this.translate.instant('card-view.auto-sweep')}</b>: ` + tx.merchantName\n                case 'Fee_Debit':\n                    let label = ''\n                    switch (tx.labels.feeName) {\n                        case 'INTERNATIONAL_ATM_FEE':\n                        case 'ATM_FEE':\n                            label = 'ATM Fee'\n                            break\n                        case 'TRANSACTION_MARKUP':\n                            label = `${this.translate.instant('card-view.fx-fee')}`\n                            break\n                        case 'ATM_DECLINE_FEE':\n                            label = 'ATM Decline Fee'\n                            break\n                        case 'NON_ATM_DECLINE_FEE':\n                            label = this.translate.instant('common.decline-fee')\n                            break\n                        case 'ECOM_FEE':\n                            label = `${this.translate.instant('card-view.ecommerce-fee')}`\n                            break\n                    }\n                    return label + ': ' + tx.merchantName\n                default:\n                    return tx.merchantName\n            }\n        }\n        switch (tx.transactionType) {\n            case 'Fee_Debit':\n            case 'Fee_Waiver':\n                let label = ''\n                switch (tx.labels.feeName) {\n                    case 'ACCOUNT_MAINTENANCE_FEE':\n                        label = `${this.translate.instant('card-view.maintenance-fee')}`\n                        break\n                    case 'ACCOUNT_INACTIVE_FEE':\n                        label = `${this.translate.instant('card-view.inactivity-fee')}`\n                        break\n                }\n                return label\n        }\n        if (tx.transactionType.includes('Wallet_Credit_Mode_Prefund')) {\n            return `${this.translate.instant('card-view.topup-from-wallet')}`\n        }\n        if (tx.transactionType.includes('Wallet_Refund')) {\n            return `${this.translate.instant('card-view.unload-from-card')}`\n        }\n        if (tx.transactionType.includes('Wallet_Fund_Transfer')) {\n            return `${this.translate.instant('common.currency-exchange')}`\n        }\n        return tx.transactionType\n    }\n\n    public getTransactionColor(tx: any): string {\n        if (tx.status === 'Declined') {\n            return 'medium'\n        }\n        switch (tx.transactionType) {\n            case 'Auto_Sweep':\n                return 'primary'\n            case 'Fee_Debit':\n                return 'danger-alt'\n            case 'Wallet_Fund_Transfer':\n                return 'primary'\n            default:\n                return tx.debit ? 'danger' : 'success'\n        }\n    }\n\n    public getTransactionIcon(tx: any): string {\n        switch (tx.transactionType) {\n            case 'Auto_Sweep':\n                return 'swap-horizontal'\n            case 'Fee_Debit':\n                return 'arrow-down-circle'\n            case 'Wallet_Fund_Transfer':\n                return 'swap-horizontal-outline'\n            default:\n                return tx.debit ? 'arrow-down' : 'arrow-up'\n        }\n    }\n\n    private refreshBalance(): void {\n        this.walletsService.fetch()\n        this.transactionService.changeEvent.emit()\n    }\n}\n","export default \"<ion-header class=\\\"ion-no-border b-b-1\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"primary\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>{{ 'common.currency-exchange' | translate}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding px-3\\\">\\n        <form\\n            class=\\\"form-validation\\\"\\n            #transactionForm=\\\"ngForm\\\"\\n            [ngClass]=\\\"{ 'ng-submitted': transactionForm.submitted }\\\"\\n            autocomplete=\\\"false\\\"\\n            (ngSubmit)=\\\"topupCard()\\\"\\n            novalidate\\n        >\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"sourceCurrencyCode\\\">{{ 'common.source' | translate }} ({{ 'common.card' | translate }})</label>\\n                    <ng-select\\n                        class=\\\"ng-select-lg ng-select-topup\\\"\\n                        [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                        [(ngModel)]=\\\"swap.sourceCurrencyCode\\\"\\n                        (ngModelChange)=\\\"getExchangeRate(); filterDestinationCurrencies()\\\"\\n                        name=\\\"sourceCurrencyCode\\\"\\n                        [items]=\\\"filteredCardBalances\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"false\\\"\\n                        [required]=\\\"true\\\"\\n                        appendTo=\\\".modal-container\\\"\\n                        [compareWith]=\\\"compareCurrencies\\\"\\n                        bindValue=\\\"curSymbol\\\"\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                            <b class=\\\"mr-1\\\">{{ item.curSymbol }}</b>\\n                            <span class=\\\"small text-muted\\\">{{ item.balance | amount: 2 }} {{ item.curSymbol }}</span>\\n                        </ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                            {{ item.curSymbol }}\\n                            <span class=\\\"float-right small text-muted\\\">{{ item.balance | amount: 2 }} {{ item.curSymbol }}</span>\\n                        </ng-template>\\n                    </ng-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <div class=\\\"d-flex justify-content-between\\\">\\n                        <div class=\\\"d-flex\\\">\\n                            <label class=\\\"font-md\\\"> {{ 'common.amount' | translate }} </label>\\n                        </div>\\n                        <a href (click)=\\\"useMax(); $event.preventDefault()\\\">{{ 'common.use-max' | translate }}</a>\\n                    </div>\\n                    <input\\n                        type=\\\"number\\\"\\n                        class=\\\"form-control form-control-lg\\\"\\n                        id=\\\"amount\\\"\\n                        name=\\\"amount\\\"\\n                        [placeholder]=\\\"'0.00'\\\"\\n                        [(ngModel)]=\\\"swap.amount\\\"\\n                        #amount=\\\"ngModel\\\"\\n                        required\\n                    />\\n                    <div *ngIf=\\\"amount.invalid && (transactionForm.submitted || amount.dirty)\\\" class=\\\"error-messages\\\">\\n                        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"amount?.errors?.required\\\">{{ 'common.this-is-required' | translate }}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col\\\">\\n                    <label class=\\\"font-md\\\" for=\\\"destination\\\">{{ 'common.destination' | translate }} ({{ 'common.source' | translate }})</label>\\n                    <ng-select\\n                        class=\\\"ng-select-lg ng-select-topup\\\"\\n                        [placeholder]=\\\"'common.select-currency' | translate\\\"\\n                        [(ngModel)]=\\\"swap.destinationCurrencyCode\\\"\\n                        (ngModelChange)=\\\"getExchangeRate()\\\"\\n                        name=\\\"destinationCurrencyCode\\\"\\n                        [items]=\\\"filteredDestinationCurrencies\\\"\\n                        [clearable]=\\\"false\\\"\\n                        [searchable]=\\\"false\\\"\\n                        [required]=\\\"true\\\"\\n                        appendTo=\\\".modal-container\\\"\\n                    >\\n                        <ng-template ng-label-tmp let-item=\\\"item\\\">\\n                            <b class=\\\"mr-1\\\">{{ item }}</b>\\n                            <span class=\\\"small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                        <ng-template ng-option-tmp let-item=\\\"item\\\">\\n                            {{ item }}\\n                            <span class=\\\"float-right small text-muted\\\">{{ getCardBalance(item) | amount: 2 }} {{ item }}</span>\\n                        </ng-template>\\n                    </ng-select>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr class=\\\"table-light\\\" *ngIf=\\\"isForexTopup()\\\">\\n                            <td>{{ 'common.exchange-rate' | translate | sentenceCase }}</td>\\n                            <td class=\\\"text-right\\\">\\n                                <b\\n                                    ><span *ngIf=\\\"!isGettingExchangeRate; else spinner\\\"\\n                                        >1 {{ swap.sourceCurrencyCode }} = {{ exchangeRate | amount: 4 }} {{swap.destinationCurrencyCode}}</span\\n                                    ></b\\n                                >\\n                            </td>\\n                        </tr>\\n                        <tr class=\\\"table-light\\\">\\n                            <td>{{ 'common.amount-to-be-credited' | translate }}</td>\\n                            <td class=\\\"text-right\\\"><b>{{ calculateAmount() | amount: 2 }} {{ swap.destinationCurrencyCode }}</b></td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"isLoading || isGettingExchangeRate\\\">\\n                <ng-template #spinner><ion-spinner name=\\\"crescent\\\" class=\\\"font-md\\\"></ion-spinner></ng-template>\\n                <span *ngIf=\\\"!isLoading; else spinner\\\">{{ 'common.submit' | translate }}</span>\\n            </button>\\n        </form>\\n    </div>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, OnInit } from '@angular/core'\nimport { faCopy } from '@fortawesome/pro-light-svg-icons'\nimport { ModalController } from '@ionic/angular'\nimport { ICard } from '../../api-interfaces'\n\ninterface CardDetails {\n    unMaskedCardNumber: string\n    cvv: string\n    expiry: string\n}\n\n@Component({\n    selector: 'card-details',\n    templateUrl: 'card-details.page.html',\n})\nexport class CardDetailsPage implements OnInit {\n    public item: ICard\n    public details: CardDetails\n\n    public faCopy = faCopy\n    public backgroundImage: string\n\n    constructor(private modalController: ModalController, private http: HttpClient) {}\n\n    public ngOnInit(): void {\n        this.http.get<CardDetails>(`/cards/${this.item.id}/details`).subscribe(details => (this.details = details))\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n\n    public formatCardNumber(cardNumber: string): string {\n        return `${cardNumber.slice(0, 4)} ${cardNumber.slice(4, 8)} ${cardNumber.slice(8, 12)} ${cardNumber.slice(12)}`\n    }\n\n    public getBackgroundImageStyle() {\n        if (!this.backgroundImage) {\n            return\n        }\n        const styles = {\n            backgroundImage: 'url(' + this.backgroundImage + ')',\n            backgroundSize: 'cover',\n        }\n        return styles\n    }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">{{ 'common.terms-and-conditions' | translate }}</h5>\\n    <button type=\\\"button\\\" class=\\\"btn btn-round close close-modal\\\" (click)=\\\"modal.dismiss()\\\">&times;</button>\\n</div>\\n<div class=\\\"modal-subheader\\\">{{ 'card-order-terms.you-must-accept-the-terms' | translate }}</div>\\n<div class=\\\"modal-body card-terms-container text-body\\\">\\n    <ng-container *ngIf=\\\"isLoaded; else loadingContent\\\">\\n        <div [innerHtml]=\\\"terms.description | safeHtml\\\"></div>\\n    </ng-container>\\n    <ng-template #loadingContent>\\n        <svg class=\\\"spinner spinner-dark\\\" viewBox=\\\"0 0 50 50\\\">\\n            <circle class=\\\"path\\\" cx=\\\"25\\\" cy=\\\"25\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"5\\\"></circle>\\n        </svg>\\n        <p class=\\\"mb-0 mt-5 text-center\\\">{{ 'common.loading-terms' | translate }}</p>\\n    </ng-template>\\n</div>\\n<div class=\\\"modal-footer flex-column flex-md-row justify-content-center justify-content-md-end\\\">\\n    <ng-container *ngIf=\\\"!viewOnly; else closeButton\\\">\\n        <button class=\\\"btn btn-link mr-md-auto mb-2 mb-md-0\\\" (click)=\\\"scrollDown()\\\">{{ 'common.scroll-to-bottom' | translate }}</button>\\n        <div class=\\\"d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"modal.dismiss()\\\">Decline</button>\\n            <button class=\\\"btn btn-primary btn-w-sm ml-1\\\" (click)=\\\"terms && accept()\\\" [disabled]=\\\"!isDown\\\">{{ 'common.accept' | translate }}</button>\\n        </div>\\n    </ng-container>\\n    <ng-template #closeButton>\\n        <div class=\\\"d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-default btn-w-sm\\\" (click)=\\\"modal.dismiss()\\\">{{ 'common.close' | translate }}</button>\\n        </div>\\n    </ng-template>\\n</div>\\n\";","import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport { TranslateService } from '@ngx-translate/core'\nimport { pick } from 'lodash'\nimport { Subscription } from 'rxjs'\nimport { finalize } from 'rxjs/operators'\nimport { ICardOrder } from 'src/app/common/api-interfaces'\nimport { SecurityCheckService } from 'src/app/common/security-check/security-check.service'\nimport { SessionService } from 'src/app/common/services/session.service'\nimport { ToastrService } from 'src/app/common/services/toastr.service'\nimport { CardOrderTermsComponent } from '../card-order/card-order-terms/card-order-terms.component'\n\n@Component({\n    selector: 'card-order-confirmation',\n    templateUrl: 'card-order-confirmation.component.html',\n})\nexport class CardOrderConfirmationComponent implements OnDestroy {\n    @ViewChild('cardOrderConfirmForm')\n    public cardOrderConfirmForm: NgForm\n\n    @Input()\n    public cardOrder: ICardOrder\n\n    public isLoading = false\n\n    private subscriptrions = new Subscription()\n\n    constructor(\n        public activeModal: NgbActiveModal,\n        private ngbModal: NgbModal,\n        private http: HttpClient,\n        private router: Router,\n        private securityCheckService: SecurityCheckService,\n        private toastr: ToastrService,\n        public session: SessionService,\n        public translate: TranslateService\n    ) {}\n\n    public ngOnDestroy(): void {\n        this.subscriptrions.unsubscribe()\n    }\n\n    public submit(): void {\n        if (!this.cardOrderConfirmForm.valid) {\n            return\n        }\n        this.subscriptrions.add(\n            this.securityCheckService.getScopePermission('banking').subscribe(() => {\n                this.ngbModal\n                    .open(CardOrderTermsComponent, {\n                        windowClass: 'modal-primary',\n                        backdrop: 'static',\n                    })\n                    .result.then(\n                        terms => {\n                            this.isLoading = true\n                            this.http\n                                .post<ICardOrder>('/card-orders', {\n                                    id: this.cardOrder.id,\n                                    type: this.cardOrder.type,\n                                    currency: { code: this.cardOrder.currency.code },\n                                    transaction: { currency: { code: this.cardOrder.currency.code } },\n                                    user: { id: this.cardOrder.user.id },\n                                    shippingAddress: this.cardOrder.shippingAddress,\n                                    terms: pick(terms, ['name', 'accept', 'versionId']),\n                                })\n                                .pipe(\n                                    finalize(() => {\n                                        this.isLoading = false\n                                    })\n                                )\n                                .subscribe(async () => {\n                                    this.toastr.success(\n                                        this.translate.instant('card-order-confirmation.card-order-confirmed')\n                                    )\n                                    this.activeModal.close()\n                                    if (!this.router.url.includes('admin')) {\n                                        await this.router.navigate(['/cards/orders'])\n                                    }\n                                })\n                        },\n                        () => undefined\n                    )\n            })\n        )\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { IonicModule } from '@ionic/angular'\nimport { CommonModule } from '../common.module'\nimport { CardDummyComponent } from './card-dummy.component'\n\n@NgModule({\n    declarations: [CardDummyComponent],\n    imports: [CommonModule, IonicModule],\n    exports: [CardDummyComponent],\n})\nexport class CardDummyModule {}\n","var E_NOSCROLL = new Error('Element already at target scroll position')\nvar E_CANCELLED = new Error('Scroll cancelled')\nvar min = Math.min\nvar ms = Date.now\n\nmodule.exports = {\n  left: make('scrollLeft'),\n  top: make('scrollTop')\n}\n\nfunction make (prop) {\n  return function scroll (el, to, opts, cb) {\n    opts = opts || {}\n\n    if (typeof opts == 'function') cb = opts, opts = {}\n    if (typeof cb != 'function') cb = noop\n\n    var start = ms()\n    var from = el[prop]\n    var ease = opts.ease || inOutSine\n    var duration = !isNaN(opts.duration) ? +opts.duration : 350\n    var cancelled = false\n\n    return from === to ?\n      cb(E_NOSCROLL, el[prop]) :\n      requestAnimationFrame(animate), cancel\n\n    function cancel () {\n      cancelled = true\n    }\n\n    function animate (timestamp) {\n      if (cancelled) return cb(E_CANCELLED, el[prop])\n\n      var now = ms()\n      var time = min(1, ((now - start) / duration))\n      var eased = ease(time)\n\n      el[prop] = (eased * (to - from)) + from\n\n      time < 1 ?\n        requestAnimationFrame(animate) :\n        requestAnimationFrame(function () {\n          cb(null, el[prop])\n        })\n    }\n  }\n}\n\nfunction inOutSine (n) {\n  return 0.5 * (1 - Math.cos(Math.PI * n))\n}\n\nfunction noop () {}\n","import { HttpClient } from '@angular/common/http'\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core'\nimport { NgForm } from '@angular/forms'\nimport { ModalController } from '@ionic/angular'\nimport BigNumber from 'bignumber.js'\nimport { forkJoin, of, Subject, Subscription } from 'rxjs'\nimport { finalize, map, switchMap, take, tap } from 'rxjs/operators'\nimport { CurrenciesQuery } from 'src/app/store/currencies/currencies.query'\nimport { ICard, ICurrency, IUser } from '../../api-interfaces'\nimport { Fee } from '../../models/accounting/fee.model'\nimport { FeeService } from '../../services/accounting/fee.service'\nimport { SessionService } from '../../services/session.service'\nimport { GetExchangeRateResponse } from '../modal-topup/modal-topup.page'\n\ninterface NiumRefundWalletResponse {\n    message: string\n    systemReferenceNumber: string\n}\n\ntype NiumCurrency = 'AUD' | 'CAD' | 'EUR' | 'GBP' | 'HKD' | 'JPY' | 'SGD' | 'USD'\n\n@Component({\n    selector: 'app-modal-unload',\n    templateUrl: './modal-unload.page.html',\n    styleUrls: ['../card-view-modal.scss'],\n})\nexport class ModalUnloadPage implements OnInit, OnDestroy {\n    @Input()\n    public card: ICard\n    @Input()\n    public balances: any[]\n\n    public sourceCurrencyCode: NiumCurrency = 'USD'\n    public destinationCurrency: ICurrency\n    public amount: string\n\n    public exchangeRate = '1'\n    public unloadCardFee: Fee | null\n    public niumCurrencies: NiumCurrency[] = ['AUD', 'CAD', 'EUR', 'GBP', 'HKD', 'JPY', 'SGD', 'USD']\n    public isLoading = false\n    public isFetching = false\n\n    @ViewChild('unloadForm')\n    public unloadForm: NgForm\n\n    public fetchEvent = new Subject<void>()\n    private subscription = new Subscription()\n\n    constructor(\n        private http: HttpClient,\n        public session: SessionService,\n        private modalController: ModalController,\n        private feeService: FeeService,\n        private currenciesQuery: CurrenciesQuery\n    ) {}\n\n    public ngOnInit() {\n        this.currenciesQuery\n            .selectEntity('USD')\n            .pipe(take(1))\n            .subscribe(usd => {\n                if (usd) {\n                    this.destinationCurrency = usd\n                }\n            })\n        this.subscription.add(\n            this.fetchEvent\n                .pipe(\n                    tap(() => {\n                        this.isFetching = true\n                    }),\n                    switchMap(() =>\n                        forkJoin([\n                            this.feeService.fetch({\n                                type: 'deposit',\n                                method: 'card',\n                                currency: { code: this.destinationCurrency.code } as ICurrency,\n                                user: { id: this.session.user.id } as IUser,\n                            }),\n                            this.sourceCurrencyCode !== this.destinationCurrency.code\n                                ? this.http\n                                      .post<GetExchangeRateResponse>(\n                                          `/card-programs/${this.card.cardholder?.cardProgram?.id}/get-exchange-rate`,\n                                          {\n                                              destinationCurrencyCode: this.destinationCurrency.code,\n                                              sourceCurrencyCode: this.sourceCurrencyCode,\n                                          }\n                                      )\n                                      .pipe(map(response => response.exchangeRate))\n                                : of('1'),\n                        ]).pipe(\n                            finalize(() => {\n                                this.isFetching = false\n                            })\n                        )\n                    )\n                )\n                .subscribe(([fee, exchangeRate]) => {\n                    this.unloadCardFee = fee\n                    this.exchangeRate = exchangeRate\n                })\n        )\n        this.fetchEvent.next()\n    }\n\n    public ngOnDestroy() {\n        this.subscription.unsubscribe()\n    }\n\n    public async submit(): Promise<void> {\n        if (this.unloadForm.invalid) {\n            return\n        }\n        this.isLoading = true\n        this.http\n            .post<NiumRefundWalletResponse>(`/cards/${this.card.id}/refund`, {\n                sourceCurrencyCode: this.sourceCurrencyCode,\n                amount: this.amount + '',\n                destinationCurrencyCode: this.destinationCurrency.code,\n            })\n            .pipe(\n                finalize(() => {\n                    this.isLoading = false\n                })\n            )\n            .subscribe(response => {\n                this.modalController.dismiss(response)\n            })\n    }\n\n    public dismiss(): void {\n        this.modalController.dismiss()\n    }\n\n    public getCardBalance(code: string): string {\n        const found = this.balances.find(b => b.curSymbol === code)\n        if (found) {\n            return found.balance + ''\n        }\n        return '0.00'\n    }\n\n    public calculateFee(): string {\n        let relativeFeeAmount = new BigNumber(0)\n        if (this.unloadCardFee?.relative) {\n            relativeFeeAmount = new BigNumber(this.amount || 0)\n                .times(this.exchangeRate)\n                .times(this.unloadCardFee.relative || 0)\n\n            if (this.unloadCardFee.min && relativeFeeAmount.isLessThan(this.unloadCardFee.min)) {\n                relativeFeeAmount = new BigNumber(this.unloadCardFee.min)\n            } else if (this.unloadCardFee.max && relativeFeeAmount.isGreaterThan(this.unloadCardFee.max)) {\n                relativeFeeAmount = new BigNumber(this.unloadCardFee.max)\n            }\n        }\n        return new BigNumber(this.unloadCardFee?.fixed || 0).plus(relativeFeeAmount).toFixed(2, 1)\n    }\n\n    public calculateAmount(): string {\n        if (!this.amount) {\n            return '0'\n        }\n        return new BigNumber(this.amount).times(this.exchangeRate).minus(this.calculateFee()).toFixed(2, 1)\n    }\n}\n","export default \"ion-content {\\n  --background: transparent;\\n}\\n\\n.background {\\n  background: #21325b;\\n  min-height: 420px;\\n  width: 100%;\\n  position: fixed;\\n  top: 0;\\n}\\n\\nion-fab-button {\\n  --box-shadow: none;\\n  border-radius: 50%;\\n}\\n\\nion-fab-button.bg-primary {\\n  --background: #2d4c89;\\n  --color: var(--ion-color-primary);\\n}\\n\\nion-fab-list {\\n  right: 6px;\\n}\\n\\nion-fab.change-pin {\\n  border-radius: 50%;\\n  right: 60px !important;\\n}\\n\\n.dropdown-menu.show {\\n  margin: 3.125rem -79px 0 !important;\\n}\\n\\n.dropdown-toggle::after {\\n  display: none !important;\\n}\\n\\n.top-card {\\n  color: #fff;\\n  padding: 1.5rem 1.5rem 0 1.5rem;\\n}\\n\\n.top-card .balances {\\n  min-height: 70px;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.top-card .balances .loader {\\n  min-height: 120px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.top-card .data {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n}\\n\\n.top-card .data ul {\\n  padding-inline-start: 0 !important;\\n  margin-block-start: 0 !important;\\n  margin-block-end: 0 !important;\\n}\\n\\n.top-card .data ul li {\\n  list-style: none;\\n}\\n\\n.top-card .data ul li .title {\\n  font-weight: 400;\\n  font-size: 11px;\\n  text-transform: uppercase;\\n  opacity: 0.7;\\n}\\n\\n.top-card .data ul li p {\\n  font-weight: 500;\\n  font-size: 17px;\\n}\\n\\n.top-card .pan {\\n  font-weight: 500;\\n  font-size: 20px;\\n  letter-spacing: 1px;\\n  text-align: center;\\n  padding: 1rem 0 !important;\\n}\\n\\n.top-card h1 {\\n  margin: 2.25rem 0;\\n  font-size: 2.25rem;\\n  font-weight: 400;\\n}\\n\\n.top-card ion-segment ion-segment-button {\\n  --indicator-color: rgba(255, 255, 255, 0.1);\\n}\\n\\n.top-card .primary-actions {\\n  margin-right: -15px;\\n  margin-left: -15px;\\n}\\n\\n.top-card .primary-actions ion-col {\\n  padding-top: 0 !important;\\n}\\n\\n.top-card .primary-actions ion-button {\\n  --background: rgba(66, 245, 93, 0.2);\\n  --border-radius: 12px !important;\\n  --box-shadow: none;\\n  --color: var(--ion-color-success);\\n  --border-checked: red !important;\\n  height: 50px !important;\\n}\\n\\n.top-card .custom-actions {\\n  margin: 4px 2px;\\n}\\n\\n.top-card .custom-actions .btn {\\n  letter-spacing: 0.06em;\\n  line-height: 12px;\\n  font-size: 12px;\\n  height: 50px !important;\\n}\\n\\n.top-card .success-actions {\\n  background: rgba(66, 135, 245, 0.3);\\n  color: var(--ion-color-secondary);\\n  border-top-left-radius: 12px;\\n  border-bottom-left-radius: 12px;\\n}\\n\\n.top-card .success-actions:hover {\\n  background: rgba(66, 135, 245, 0.5);\\n}\\n\\n.top-card .danger-actions {\\n  background: rgba(245, 66, 99, 0.3);\\n  color: var(--ion-color-danger);\\n  border-top-right-radius: 12px;\\n  border-bottom-right-radius: 12px;\\n}\\n\\n.top-card .danger-actions:hover {\\n  background: rgba(245, 66, 99, 0.5);\\n}\\n\\n.section-list {\\n  background-color: #fff;\\n  border-top-left-radius: 1.25rem;\\n  border-top-right-radius: 1.25rem;\\n  overflow: hidden;\\n  margin-top: 1rem;\\n}\\n\\n.section-list ion-item {\\n  --background: #fff;\\n  --border-color: transparent;\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  border-bottom: 1px solid #dfe7f5;\\n}\\n\\n.section-list ion-item:last-child {\\n  border-bottom: 0;\\n}\\n\\n.section-list .thumb {\\n  background-color: #dfe7f5;\\n  width: 42px;\\n  height: 42px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  color: white;\\n  font-size: 1.5rem;\\n  border-radius: 50%;\\n  opacity: 0.9;\\n}\\n\\n.section-list .thumb.primary {\\n  background-color: var(--ion-color-primary-tint);\\n}\\n\\n.section-list .thumb.success {\\n  background-color: var(--ion-color-success-tint);\\n}\\n\\n.section-list .thumb.warning {\\n  background-color: var(--ion-color-warning-tint);\\n}\\n\\n.section-list .thumb.danger {\\n  background-color: #d4374c;\\n}\\n\\n.section-list .thumb.danger-alt {\\n  background-color: #ce6a59;\\n}\\n\\n.section-list .thumb.medium {\\n  background-color: var(--ion-color-medium-tint);\\n}\\n\\n.section-list h5 {\\n  color: #ee5a55;\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NhcmQtdmlldy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsTUFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUNFO0VBQ0UscUJBQUE7RUFDQSxpQ0FBQTtBQUNKOztBQUdBO0VBQ0UsVUFBQTtBQUFGOztBQUlFO0VBQ0Usa0JBQUE7RUFDQSxzQkFBQTtBQURKOztBQUtBO0VBQ0UsbUNBQUE7QUFGRjs7QUFLQTtFQUNFLHdCQUFBO0FBRkY7O0FBS0E7RUFDRSxXQUFBO0VBQ0EsK0JBQUE7QUFGRjs7QUFJRTtFQUNFLGdCQUFBO0VBQ0EscUJBQUE7QUFGSjs7QUFJSTtFQUNFLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFGTjs7QUFNRTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0FBSko7O0FBTUk7RUFDRSxrQ0FBQTtFQUNBLGdDQUFBO0VBQ0EsOEJBQUE7QUFKTjs7QUFPSTtFQUNFLGdCQUFBO0FBTE47O0FBT007RUFDRSxnQkFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUFMUjs7QUFRTTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtBQU5SOztBQVdFO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLDBCQUFBO0FBVEo7O0FBWUU7RUFDRSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFWSjs7QUFjSTtFQUNFLDJDQUFBO0FBWk47O0FBZ0JFO0VBQ0UsbUJBQUE7RUFDQSxrQkFBQTtBQWRKOztBQWVJO0VBQ0UseUJBQUE7QUFiTjs7QUFlSTtFQUNFLG9DQUFBO0VBQ0EsZ0NBQUE7RUFDQSxrQkFBQTtFQUNBLGlDQUFBO0VBQ0EsZ0NBQUE7RUFDQSx1QkFBQTtBQWJOOztBQWlCRTtFQUNFLGVBQUE7QUFmSjs7QUFpQkk7RUFDRSxzQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLHVCQUFBO0FBZk47O0FBbUJFO0VBQ0UsbUNBQUE7RUFDQSxpQ0FBQTtFQUNBLDRCQUFBO0VBQ0EsK0JBQUE7QUFqQko7O0FBbUJJO0VBQ0UsbUNBQUE7QUFqQk47O0FBcUJFO0VBQ0Usa0NBQUE7RUFDQSw4QkFBQTtFQUNBLDZCQUFBO0VBQ0EsZ0NBQUE7QUFuQko7O0FBcUJJO0VBQ0Usa0NBQUE7QUFuQk47O0FBd0JBO0VBQ0Usc0JBQUE7RUFDQSwrQkFBQTtFQUNBLGdDQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQXJCRjs7QUFzQkU7RUFDRSxrQkFBQTtFQUNBLDJCQUFBO0VBQ0EsbUJBQUE7RUFDQSxzQkFBQTtFQUNBLGdDQUFBO0FBcEJKOztBQXNCSTtFQUNFLGdCQUFBO0FBcEJOOztBQXVCRTtFQUNFLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQXJCSjs7QUF1Qkk7RUFDRSwrQ0FBQTtBQXJCTjs7QUF3Qkk7RUFDRSwrQ0FBQTtBQXRCTjs7QUF5Qkk7RUFDRSwrQ0FBQTtBQXZCTjs7QUEwQkk7RUFDRSx5QkFBQTtBQXhCTjs7QUEyQkk7RUFDRSx5QkFBQTtBQXpCTjs7QUE0Qkk7RUFDRSw4Q0FBQTtBQTFCTjs7QUE4QkU7RUFDRSxjQUFBO0VBQ0EsU0FBQTtBQTVCSiIsImZpbGUiOiJjYXJkLXZpZXcucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uYmFja2dyb3VuZCB7XG4gIGJhY2tncm91bmQ6ICMyMTMyNWI7IC8vIGxpbmVhci1ncmFkaWVudCgzNDZkZWcsIHJnYmEoOCwgMTgsIDQzLCAxKSAwJSwgcmdiYSg1OSwgNzIsIDE0MiwgMSkgMTAwJSk7IC8vICMwNjBmMjUgICAjM2I0ODhlXG4gIG1pbi1oZWlnaHQ6IDQyMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG59XG5cbmlvbi1mYWItYnV0dG9uIHtcbiAgLS1ib3gtc2hhZG93OiBub25lO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG5cbiAgJi5iZy1wcmltYXJ5IHtcbiAgICAtLWJhY2tncm91bmQ6ICMyZDRjODk7XG4gICAgLS1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICB9XG59XG5cbmlvbi1mYWItbGlzdCB7XG4gIHJpZ2h0OiA2cHg7XG59XG5cbmlvbi1mYWIge1xuICAmLmNoYW5nZS1waW4ge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICByaWdodDogNjBweCAhaW1wb3J0YW50O1xuICB9XG59XG5cbi5kcm9wZG93bi1tZW51LnNob3cge1xuICBtYXJnaW46IDMuMTI1cmVtIC03OXB4IDAgIWltcG9ydGFudDtcbn1cblxuLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi50b3AtY2FyZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxLjVyZW0gMS41cmVtIDAgMS41cmVtO1xuXG4gIC5iYWxhbmNlcyB7XG4gICAgbWluLWhlaWdodDogNzBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG5cbiAgICAubG9hZGVyIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDEyMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gIH1cblxuICAuZGF0YSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgIHVsIHtcbiAgICAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwICFpbXBvcnRhbnQ7XG4gICAgICBtYXJnaW4tYmxvY2stc3RhcnQ6IDAgIWltcG9ydGFudDtcbiAgICAgIG1hcmdpbi1ibG9jay1lbmQ6IDAgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICB1bCBsaSB7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgICAudGl0bGUge1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBmb250LXNpemU6IDExcHg7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIG9wYWNpdHk6IDAuNztcbiAgICAgIH1cblxuICAgICAgcCB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAucGFuIHtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxcmVtIDAgIWltcG9ydGFudDtcbiAgfVxuXG4gIGgxIHtcbiAgICBtYXJnaW46IDIuMjVyZW0gMDtcbiAgICBmb250LXNpemU6IDIuMjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgfVxuXG4gIGlvbi1zZWdtZW50IHtcbiAgICBpb24tc2VnbWVudC1idXR0b24ge1xuICAgICAgLS1pbmRpY2F0b3ItY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgICB9XG4gIH1cblxuICAucHJpbWFyeS1hY3Rpb25zIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC0xNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTVweDtcbiAgICBpb24tY29sIHtcbiAgICAgIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIGlvbi1idXR0b24ge1xuICAgICAgLS1iYWNrZ3JvdW5kOiByZ2JhKDY2LCAyNDUsIDkzLCAwLjIpO1xuICAgICAgLS1ib3JkZXItcmFkaXVzOiAxMnB4ICFpbXBvcnRhbnQ7XG4gICAgICAtLWJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itc3VjY2Vzcyk7XG4gICAgICAtLWJvcmRlci1jaGVja2VkOiByZWQgIWltcG9ydGFudDtcbiAgICAgIGhlaWdodDogNTBweCAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxuXG4gIC5jdXN0b20tYWN0aW9ucyB7XG4gICAgbWFyZ2luOiA0cHggMnB4O1xuXG4gICAgLmJ0biB7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMC4wNmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEycHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDtcbiAgICB9XG4gIH1cblxuICAuc3VjY2Vzcy1hY3Rpb25zIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDY2LCAxMzUsIDI0NSwgMC4zKTtcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTJweDtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxMnB4O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDY2LCAxMzUsIDI0NSwgMC41KTtcbiAgICB9XG4gIH1cblxuICAuZGFuZ2VyLWFjdGlvbnMge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjQ1LCA2NiwgOTksIDAuMyk7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMnB4O1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxMnB4O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI0NSwgNjYsIDk5LCAwLjUpO1xuICAgIH1cbiAgfVxufVxuXG4uc2VjdGlvbi1saXN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMS4yNXJlbTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEuMjVyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIGlvbi1pdGVtIHtcbiAgICAtLWJhY2tncm91bmQ6ICNmZmY7XG4gICAgLS1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHBhZGRpbmctdG9wOiAwLjVyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDAuNXJlbTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RmZTdmNTtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuICAudGh1bWIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZmU3ZjU7XG4gICAgd2lkdGg6IDQycHg7XG4gICAgaGVpZ2h0OiA0MnB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIG9wYWNpdHk6IDAuOTtcblxuICAgICYucHJpbWFyeSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeS10aW50KTtcbiAgICB9XG5cbiAgICAmLnN1Y2Nlc3Mge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MtdGludCk7XG4gICAgfVxuXG4gICAgJi53YXJuaW5nIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci13YXJuaW5nLXRpbnQpO1xuICAgIH1cblxuICAgICYuZGFuZ2VyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkNDM3NGM7XG4gICAgfVxuXG4gICAgJi5kYW5nZXItYWx0IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjZTZhNTk7XG4gICAgfVxuXG4gICAgJi5tZWRpdW0ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bS10aW50KTtcbiAgICB9XG4gIH1cblxuICBoNSB7XG4gICAgY29sb3I6ICNlZTVhNTU7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG4iXX0= */\";"],"sourceRoot":"webpack:///"}