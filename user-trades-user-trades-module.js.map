{"version":3,"sources":["./src/app/user-trades/user-trades.component.ts","./src/app/user-trades/user-trades.module.ts","./src/app/user-trades/user-trades.component.html","./src/app/user-trades/user-trades-routing.module.ts"],"names":[],"mappings":"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","file":"user-trades-user-trades-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http'\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faArrowAltFromBottom, faArrowAltToBottom } from '@fortawesome/pro-light-svg-icons'\nimport { faCircle } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport BigNumber from 'bignumber.js'\nimport { Observable } from 'rxjs'\nimport { Trade, TradeSymbol, Wallet } from '../common/api-interfaces'\nimport { ListV2Component } from '../common/list-v2.component'\nimport { SessionService } from '../common/services/session.service'\nimport { ToastrService } from '../common/services/toastr.service'\nimport { getCurrencyColor } from '../store/currencies/currencies.mixin'\nimport { WalletsQuery } from '../store/wallets/wallets.query'\n\n@Component({\n    selector: 'user-trades',\n    templateUrl: 'user-trades.component.html',\n})\nexport class UserTradesComponent extends ListV2Component<Trade> implements OnInit {\n    public wallets$: Observable<(Wallet & { value: string })[]>\n    public faArrowAltToBottom = faArrowAltToBottom\n    public faArrowAltFromBottom = faArrowAltFromBottom\n    public defaultLimit = this.limitOpts[0]\n    public faCircle = faCircle\n    public getCurrencyColor = getCurrencyColor\n    public symbolsMap = {\n        'AU/USD': 'Gold Troy Ounce',\n        'AG/USD': 'Silver Troy Ounce',\n    }\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        protected toastr: ToastrService,\n        private walletsQuery: WalletsQuery\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session)\n        this.wallets$ = this.walletsQuery.filteredBalances$\n    }\n\n    public ngOnInit(): void {\n        this.apiUrl = `/users/${this.session.user.id}/trades`\n        super.ngOnInit()\n    }\n\n    public getBaseCurrency(symbol: TradeSymbol): string {\n        if (!symbol) {\n            return ''\n        }\n        const parts = symbol!.split('/')\n        return parts[1]\n    }\n\n    public getCounterCurrency(symbol: TradeSymbol): string {\n        if (!symbol) {\n            return ''\n        }\n        const parts = symbol!.split('/')\n        return parts[0]\n    }\n\n    public getTotal(trade: Trade): string {\n        return new BigNumber(trade.price).times(trade.quantity).toFixed(2)\n    }\n\n    public onTrade(): void {\n        this.updateEvent.next()\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { IonicModule } from '@ionic/angular'\nimport { TradesModule } from 'src/app/common/trades/trades.module'\nimport { DashboardModule } from 'src/app/dashboard/dashboard.module'\nimport { CommonModule } from '../common/common.module'\nimport { UserTradesRoutingModule } from './user-trades-routing.module'\nimport { UserTradesComponent } from './user-trades.component'\n\n@NgModule({\n    declarations: [UserTradesComponent],\n    imports: [CommonModule, IonicModule, UserTradesRoutingModule, DashboardModule, TradesModule],\n})\nexport class UserTradesModule {}\n","export default \"<div class=\\\"container pt-page pb-3\\\">\\n    <trade-feed></trade-feed>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-7\\\">\\n            <account-balance class=\\\"card\\\" [compact]=\\\"true\\\"></account-balance>\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{ 'common.accumulator-status' | translate }}</div>\\n                <ul class=\\\"list-group list-group-flush\\\">\\n                    <li class=\\\"list-group-item py-3\\\">\\n                        <i>{{ 'common.coming-soon' | translate }}</i>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-10\\\">\\n            <section class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <h5 class=\\\"mb-0\\\">{{ 'common.buy' | translate }} &amp; {{ 'common.sell' | translate }}</h5>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <trade-form (onTrade)=\\\"onTrade()\\\"></trade-form>\\n                </div>\\n            </section>\\n            <div class=\\\"callout callout-danger\\\">\\n                <h6 class=\\\"text-danger\\\">{{ 'common.important-notice' | translate }}</h6>\\n                <p>\\n                    {{ 'common.every-transaction-is-denominated-in-troy-ounces' | translate }}\\n                </p>\\n                <p>{{ 'common.final-pricing-will-be-confirmed-upon-full-payment' | translate }}</p>\\n                <p>{{ 'common.we-operate-from-mondays-to-sundays' | translate }}</p>\\n                <p>\\n                    {{ 'common.due-to-global-markets-being-close-on-weekends' | translate }}\\n                </p>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-7\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">{{ 'common.history' | translate }}</div>\\n                <ul class=\\\"list-group list-group-flush\\\">\\n                    <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n                        <li class=\\\"list-group-item py-2\\\" *ngFor=\\\"let trade of items\\\">\\n                            <div class=\\\"d-flex justify-content-between\\\">\\n                                <span> {{ $any(symbolsMap)[trade.symbol] }}</span>\\n                                <span class=\\\"text-right\\\" [ngClass]=\\\"trade.side === 'BUY' ? 'text-primary' : 'text-danger'\\\">\\n                                    {{ trade.side === 'BUY' ? '+' : '-' }}{{ trade.quantity | amount: 7 }} {{ getCounterCurrency(trade.symbol) }}\\n                                </span>\\n                            </div>\\n                            <small class=\\\"d-flex justify-content-between\\\">\\n                                <span class=\\\"text-muted\\\">{{ trade.createdAt | date: 'short' }}</span>\\n                                <span class=\\\"text-muted text-right\\\">{{ getTotal(trade) | amount: 2 }} {{ getBaseCurrency(trade.symbol) }}</span>\\n                            </small>\\n                        </li>\\n                        <li class=\\\"list-group-item py-3 text-center text-muted\\\" *ngIf=\\\"items.length === 0\\\">\\n                            <i>{{ 'common.no-trades-found' | translate }}</i>\\n                        </li>\\n                    </ng-container>\\n                </ul>\\n            </div>\\n            <div class=\\\"d-flex justify-content-center mb-3\\\">\\n                <ngb-pagination\\n                    [(page)]=\\\"page\\\"\\n                    [collectionSize]=\\\"count\\\"\\n                    (pageChange)=\\\"select()\\\"\\n                    [pageSize]=\\\"limit\\\"\\n                    [maxSize]=\\\"5\\\"\\n                    [ellipses]=\\\"false\\\"\\n                    [rotate]=\\\"true\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                >\\n                </ngb-pagination>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { PermissionGuard } from '../common/guards/permission.guard'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { UserTradesComponent } from './user-trades.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UserTradesComponent,\n        canActivate: [LoggedInAuthGuard, PermissionGuard],\n        data: {\n            permissions: ['trades'],\n        },\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class UserTradesRoutingModule {}\n"],"sourceRoot":"webpack:///"}