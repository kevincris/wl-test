{"version":3,"sources":["./src/app/user-redemption/user-redemption.component.html","./src/app/user-redemption/user-redemption.module.ts","./src/app/user-redemption/user-redemption-routing.module.ts","./src/app/user-redemption/user-redemption.component.ts"],"names":[],"mappings":"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","file":"user-redemption-user-redemption-module.js","sourcesContent":["export default \"<div class=\\\"container pt-page\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-7\\\">\\n            <account-balance class=\\\"card\\\" [compact]=\\\"true\\\"></account-balance>\\n        </div>\\n        <div class=\\\"col-lg-11\\\">\\n            <section class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <h5 class=\\\"mb-0\\\">{{ 'common.redeem' | translate }}</h5>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <redemption-form (onRedemptionSubmitted)=\\\"onUpdate()\\\" #redemptionForm></redemption-form>\\n                </div>\\n            </section>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"mb-2 text-center\\\">\\n                                <div class=\\\"mb-2\\\">\\n                                    <span class=\\\"label label-success\\\">{{ 'common.redeeming' | translate }}</span>\\n                                </div>\\n                                <div class=\\\"p-2 text-center border\\\">\\n                                    <small>{{ 'common.total-quantity-to-redeem' | translate }}</small\\n                                    ><br />\\n                                    <h5 class=\\\"mb-0\\\">{{ totalOunces() | amount: 7 }} ounce</h5>\\n                                </div>\\n                                <div class=\\\"p-2 text-center border\\\">\\n                                    <h5 class=\\\"mb-0\\\">\\n                                        {{ totalQuantity() | number: (isSilver() ? '1.2-2' : '1.0-0') }} {{ isSilver() ? 'kg' : 'g' }}\\n                                    </h5>\\n                                </div>\\n                                <div class=\\\"p-2\\\">\\n                                    <small> {{ 'common.balance-after-redemption' | translate }} </small><br />\\n                                    <h5 class=\\\"mb-0\\\">\\n                                        {{ calculateBalanceAfterRedemption(isSilver() ? 'AG' : 'AU') | amount: 7 }} {{ isSilver() ? 'AG' : 'AU' }}\\n                                    </h5>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">{{ 'common.history' | translate }}</div>\\n                        <ul class=\\\"list-group list-group-flush\\\">\\n                            <ng-container *ngIf=\\\"itemsStream | async; let items\\\">\\n                                <li\\n                                    class=\\\"list-group-item py-2\\\"\\n                                    [ngClass]=\\\"redemption.status !== 'completed' ? 'text-muted' : ''\\\"\\n                                    *ngFor=\\\"let redemption of items\\\"\\n                                >\\n                                    <div class=\\\"d-flex justify-content-between\\\">\\n                                        <span> {{ redemption.type === 'silver' ? 'Silver Troy Ounce' : 'Gold Troy Ounce' }}</span>\\n                                        <span class=\\\"text-right\\\" [ngClass]=\\\"redemption.status !== 'completed' ? 'text-muted' : 'text-danger'\\\"\\n                                            >-{{ getQuantity(redemption) }}\\n                                            <ng-container *ngIf=\\\"redemption.type === 'gold'; else silverTemplate\\\"> g </ng-container>\\n                                            <ng-template #silverTemplate> ozt</ng-template>\\n                                        </span>\\n                                    </div>\\n                                    <small class=\\\"d-flex justify-content-between\\\">\\n                                        <span class=\\\"text-muted\\\">{{ redemption.createdAt | date: 'short' }}</span>\\n                                        <span class=\\\"text-muted text-right\\\">\\n                                            {{ redemption.transaction.amount | amount: 2 }} {{ redemption.transaction.currency.code }}\\n                                        </span>\\n                                    </small>\\n                                    <span\\n                                        class=\\\"text-capitalize label label-sm text-right\\\"\\n                                        [ngClass]=\\\"{\\n                                            'label-primary': redemption.status === 'pending',\\n                                            'label-success': redemption.status === 'completed',\\n                                            'label-warning': redemption.status === 'processing',\\n                                            'label-danger': redemption.status === 'cancelled'\\n                                        }\\\"\\n                                        >{{ redemption.status }}</span\\n                                    >\\n                                </li>\\n                                <li class=\\\"list-group-item py-3 text-center text-muted\\\" *ngIf=\\\"items.length === 0\\\">\\n                                    <i>{{ 'common.no-redemptions-found' | translate }}</i>\\n                                </li>\\n                            </ng-container>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"d-flex justify-content-center mb-3\\\">\\n                        <ngb-pagination\\n                            [(page)]=\\\"page\\\"\\n                            [collectionSize]=\\\"count\\\"\\n                            (pageChange)=\\\"select()\\\"\\n                            [pageSize]=\\\"limit\\\"\\n                            [maxSize]=\\\"5\\\"\\n                            [ellipses]=\\\"false\\\"\\n                            [rotate]=\\\"true\\\"\\n                            [boundaryLinks]=\\\"true\\\"\\n                        >\\n                        </ngb-pagination>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import { NgModule } from '@angular/core'\nimport { RedemptionModule } from 'src/app/common/redemption/redemption.module'\nimport { DashboardModule } from 'src/app/dashboard/dashboard.module'\nimport { CommonModule } from '../common/common.module'\nimport { UserRedemptionRoutingModule } from './user-redemption-routing.module'\nimport { UserRedemptionComponent } from './user-redemption.component'\n\n@NgModule({\n    declarations: [UserRedemptionComponent],\n    imports: [CommonModule, UserRedemptionRoutingModule, DashboardModule, RedemptionModule],\n})\nexport class UserRedemptionModule {}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { PermissionGuard } from '../common/guards/permission.guard'\nimport { LoggedInAuthGuard } from '../common/logged-in.auth-guard'\nimport { UserRedemptionComponent } from './user-redemption.component'\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UserRedemptionComponent,\n        canActivate: [LoggedInAuthGuard, PermissionGuard],\n        data: {\n            permissions: ['redeem'],\n        },\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class UserRedemptionRoutingModule {}\n","import { HttpClient } from '@angular/common/http'\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { faArrowAltFromBottom, faArrowAltToBottom } from '@fortawesome/pro-light-svg-icons'\nimport { faCircle } from '@fortawesome/pro-solid-svg-icons'\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\nimport BigNumber from 'bignumber.js'\nimport { Observable } from 'rxjs'\nimport { RedemptionFormComponent } from 'src/app/common/redemption/redemption-form.component'\nimport { Redemption, Wallet } from '../common/api-interfaces'\nimport { ListV2Component } from '../common/list-v2.component'\nimport { RedemptionService } from '../common/services/redemption.service'\nimport { SessionService } from '../common/services/session.service'\nimport { ToastrService } from '../common/services/toastr.service'\nimport { WalletsQuery } from '../store/wallets/wallets.query'\n\n@Component({\n    selector: 'user-redemption',\n    templateUrl: 'user-redemption.component.html',\n})\nexport class UserRedemptionComponent extends ListV2Component<Redemption> implements OnInit {\n    public wallets$: Observable<(Wallet & { value: string })[]>\n    public faArrowAltToBottom = faArrowAltToBottom\n    public faArrowAltFromBottom = faArrowAltFromBottom\n    public faCircle = faCircle\n    @ViewChild('redemptionForm')\n    public redemptionForm: RedemptionFormComponent\n\n    constructor(\n        http: HttpClient,\n        ngbModal: NgbModal,\n        changeDetector: ChangeDetectorRef,\n        route: ActivatedRoute,\n        router: Router,\n        session: SessionService,\n        protected toastr: ToastrService,\n        private walletsQuery: WalletsQuery,\n        private redemptionService: RedemptionService\n    ) {\n        super(http, ngbModal, changeDetector, route, router, session)\n        this.wallets$ = this.walletsQuery.filteredBalances$\n    }\n\n    public ngOnInit(): void {\n        this.apiUrl = `/users/${this.session.user.id}/redemptions`\n        super.ngOnInit()\n    }\n\n    public totalOunces(): string {\n        return this.redemptionForm ? this.redemptionService.totalOunces(this.redemptionForm.redemption) : '0.00'\n    }\n\n    public totalQuantity(): string {\n        return this.redemptionForm\n            ? this.isSilver()\n                ? new BigNumber(this.redemptionService.totalGrams(this.redemptionForm.redemption)).div(1000).toFixed(2)\n                : new BigNumber(this.redemptionService.totalGrams(this.redemptionForm.redemption)).toFixed(0, 1)\n            : '0.00'\n    }\n\n    public isSilver(): boolean {\n        return this.redemptionForm ? this.redemptionForm.redemption.type === 'silver' : false\n    }\n\n    public calculateBalanceAfterRedemption(currencyCode: string): string {\n        let balance = '0.00'\n        this.subscriptions.add(\n            this.wallets$.subscribe(wallets => {\n                const wallet = wallets.find(w => w.currency.code === currencyCode)\n                if (wallet) {\n                    balance = wallet.availableBalance\n                }\n            })\n        )\n        if (!balance) {\n            return '0'\n        }\n        return new BigNumber(balance)\n            .minus(this.redemptionForm ? this.redemptionService.totalOunces(this.redemptionForm.redemption) : 0)\n            .toFixed(7)\n    }\n\n    public getQuantity(redemption: Redemption): string {\n        return new BigNumber(\n            redemption.type === 'gold'\n                ? this.redemptionService.totalGrams(redemption)\n                : this.redemptionService.totalOunces(redemption)\n        ).toFixed(0)\n    }\n\n    public onUpdate(): void {\n        this.updateEvent.next()\n    }\n}\n"],"sourceRoot":"webpack:///"}